(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/**
 * Created by Auser on 2016/12/6.
 */
"use strict";
var Data = (function () {
    var getName = function (data, callback) {
        var _data = {};
        $.ajax({
            url: '/api/airline/manage/getName'
            , type: 'post'
            , data: data
            , dataType: 'json'
            , timeout: 100000
            , success: function (json) {
                if (json && "resCode" in json) {
                    _data = json;
                } else {
                    _data = {};
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    var getCode = function (data, callback) {
        var _data = {};
        $.ajax({
            url: '/api/airline/manage/getCode'
            , type: 'post'
            , data: data
            , dataType: 'json'
            , timeout: 100000
            , success: function (json) {
                if (json && "resCode" in json) {
                    _data = json;
                } else {
                    _data = {};
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    var priceList = function (callback) {
        var _data = {};
        $.ajax({
            url: '/api/airline/price/list'
            , type: 'post'
            , dataType: 'json'
            , timeout: 100000
            , success: function (json) {
                if (json && "resCode" in json) {
                    _data = json;
                } else {
                    _data = {};
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    var warehouse = function (callback) {
        var _data = {};
        $.ajax({
            url: '/api/warehouse/list'
            , type: 'post'
            , dataType: 'json'
            , timeout: 100000
            , success: function (json) {
                if (json && "resCode" in json) {
                    _data = json;
                } else {
                    _data = {};
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    var add = function (data, callback) {
        var _data = {};
        $.ajax({
            url: '/api/airline/company/add'
            , type: 'post'
            , dataType: 'json'
            , data: data
            , timeout: 100000
            , success: function (json) {
                if (json && "resCode" in json) {
                    _data = json;
                } else {
                    _data = {};
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    var list = function (data, callback) {
        var _data = {};
        $.ajax({
            url: '/api/airline/company/list'
            , type: 'post'
            , dataType: 'json'
            , data: data
            , timeout: 100000
            , success: function (json) {
                if (json && "resCode" in json) {
                    _data = json;
                } else {
                    _data = {};
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    var del = function (data, callback) {
        var _data = {};
        $.ajax({
            url: '/api/airline/company/del'
            , type: 'post'
            , dataType: 'json'
            , data: data
            , timeout: 100000
            , success: function (json) {
                if (json && "resCode" in json) {
                    _data = json;
                } else {
                    _data = {};
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    var detail = function (data, callback) {
        var _data = {};
        $.ajax({
            url: '/api/airline/company/detail'
            , type: 'post'
            , dataType: 'json'
            , data: data
            , timeout: 100000
            , success: function (json) {
                if (json && "resCode" in json) {
                    _data = json;
                } else {
                    _data = {};
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    var update = function (data, callback) {
        var _data = {};
        $.ajax({
            url: '/api/airline/company/update'
            , type: 'post'
            , dataType: 'json'
            , data: data
            , timeout: 100000
            , success: function (json) {
                if (json && "resCode" in json) {
                    _data = json;
                } else {
                    _data = {};
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    var down = function (data, callback) {
        var _data = {};
        $.ajax({
            url: '/api/other/ossDown'
            , type: 'post'
            , dataType: 'json'
            , data: data
            , timeout: 100000
            , success: function (json) {
                if (json && "resCode" in json) {
                    _data = json;
                } else {
                    _data = {};
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    var up = function (data, callback) {
        var _data = {};
        $.ajax({
            url: '/api/other/ossUp'
            , type: 'post'
            , dataType: 'json'
            , data: data
            , timeout: 100000
            , success: function (json) {
                if (json && "resCode" in json) {
                    _data = json;
                } else {
                    _data = {};
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    var ossUpload = function (param, data, callback) {
        var _data = {};
        var formdata = new FormData();
        formdata.append("OSSAccessKeyId", param.AccessKeyId);
        formdata.append("policy", param.Policy);
        formdata.append("Signature", param.Signature);
        formdata.append("key", param.Keyname);
        formdata.append("Content-Disposition", "attachment;filename=\"" + data.name + "\"");
        formdata.append("file", data);
        $.ajax({
            url: param.UploadURL
            , data: formdata
            , processData: false
            , cache: false
            , async: false
            , contentType: false
            , type: 'post'
            , timeout: 100000
            , success: function () {
                _data = {
                    status: 1
                }
            }, error: function () {
                _data = {
                    status: -1
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    var addFile = function (data, callback) {
        var _data = {};
        $.ajax({
            url: '/api/airline/company/addFile'
            , type: 'post'
            , dataType: 'json'
            , data: data
            , timeout: 100000
            , success: function (json) {
                if (json && "resCode" in json) {
                    _data = json;
                } else {
                    _data = {};
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    var delFile = function (data, callback) {
        var _data = {};
        $.ajax({
            url: '/api/airline/company/delFile'
            , type: 'post'
            , dataType: 'json'
            , data: data
            , timeout: 100000
            , success: function (json) {
                if (json && "resCode" in json) {
                    _data = json;
                } else {
                    _data = {};
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    return {
        getName: getName
        , getCode: getCode
        , priceList: priceList
        , warehouse: warehouse
        , add: add
        , list: list
        , del: del
        , detail: detail
        , update: update
        , down: down
        , up: up
        , ossUpload: ossUpload
        , addFile: addFile
        , delFile: delFile
    }
}());
module.exports.Data = Data;
},{}],2:[function(require,module,exports){
/**
 * Created by Jeremy on 2017/2/6.
 */
'use strict';
var Dom = (function () {
    var list = function (json) {
        var str = '';
        if (json && json.resCode == 0 && 'resBody' in json && json.resBody && 'sList' in json.resBody && json.resBody.sList instanceof Array) {
            if (json.resBody.sList.length > 0) {
                var arr = json.resBody.sList;
                for (var a in arr) {
                    if (arr.hasOwnProperty(a)) {
                        str += render(arr[a]);
                    }
                }
            } else {
                str = '<tr class="wrong"><td colspan="8">暂无信息，请添加！</td></tr>';
            }
        } else {
            str = '<tr class="wrong"><td colspan="8">请求失败，<a href="">请重试！</a></td></tr>';
        }
        function render(d) {
            var str = '';
            for (var e in d.deptAirports) {
                if (d.deptAirports.hasOwnProperty(e)) {
                    var dt = d.deptAirports[e];
                    str += dt.airportCode + (e == d.deptAirports.length - 1 ? '' : ' , ');
                }
            }
            return '<tr> <td>' + d.airCompanyCode + '（' + d.airCompanyName + '）</td>  <td>' + d.airCompanyCountry + '</td> ' +
                '<td>' + (parseFloat(d.bulkyRate) * 10 + '/' + (10 - parseFloat(d.bulkyRate) * 10)) + '</td> <td>' + d.warehouseName + '</td> <td>' + str + '</td>' +
                '<td>' + d.destCount + '</td><td>' + d.airwayCount + '</td> <td>' +
                ' <a class="new-open" href="javascript:void(0);" data-h="/airline/company/detail?id=' + d.Id + '" data-id="' + d.Id + '">修改</a> ' +
                '<a href="javascript:void(0);" class="del-btn" data-id="' + d.Id + '">删除</a> </td> </tr>';
        }

        $('.outer-tb').find('tbody').html(str);
    };
    return {
        list: list
    }
}());
module.exports.Dom = Dom;
},{}],3:[function(require,module,exports){
/**
 * Created by Jeremy on 2017/1/4.
 */
'use strict';
var Listener = require('./listener').Listener;
var general = require('../../general/general').general;
general.run();
Listener.run();


},{"../../general/general":6,"./listener":4}],4:[function(require,module,exports){
/**
 * Created by Jeremy on 2017/1/5.
 */
'use strict';
var Data = require('./data').Data
    , Dom = require('./dom').Dom
    , url = require('../../general/function').url
    , Modal = require('../../general/modal');
var Listener = (function () {
    var ports, company;
    var save = {};
    var listener = function () {
        $(document).on('click', '#open-add', function () {
            window.open('/airline/company/detail', 'newwindow', ' toolbar =no, menubar=no, scrollbars=no, resizable=no, location=no, status=no');
        });
        $(document).on('click', '.new-open', function () {
            window.open($(this).data('h'), 'newwindow', ' toolbar =no, menubar=no, scrollbars=no, resizable=no, location=no, status=no');
        });
        $(document).on('click', '#ot-search', function () {
            init();
        });
        $(document).on('click', '.close-btn', function () {
            $('.alert-part').addClass('dp-n');
            $('.white-back').addClass('dp-n');
        });
        $(document).on('click', '#add', function () {
            $('#editor-ensure').data('type', 1);
            var ele = $('.editor-modal');
            ele.find('input').val('');
            ele.find('tbody').html('');
            $('.white-back').removeClass('dp-n');
            ele.removeClass('dp-n');
        });
        //获取机场名称
        $(document).on('keyup', 'input#start', function (e) {
            var _this = $(this)
                , ul = _this.siblings('.get-name');
            var index = ul.find('.active').index() || 0
                , len = ul.children().length;
            var str = '';
            if (e.keyCode == 13) {//回车键
                var data = ul.children('.active').data('val') || ul.find('li:first-child').data('val') || '';
                $(this).val('');
                $(this).data('val', data);
                if (ports && data) {
                    if ($('.add-tr[data-key="' + data + '"]').length == 0) {
                        save[data] = ports[data];
                        str = '<tr class="add-tr" data-info="' + JSON.stringify(save[data]).replace(/\"/g, "'") + '" data-key="' + data + '"> <td>' + data + '</td> <td>' + ports[data].displayName + '</td> ' +
                            '<td class="big"> <div class="dp-tb"> ' +
                            ' <div class="add"> <div class="top"> + </div> <a href="javascript:void(0);" class="dp-b">添加文件</a> ' +
                            '<input type="file" class="up-file" data-p="' + data + '" data-c="' + $('#inner-name').data('code') + '"></div> </div> </td>' +
                            '<td><a href="javascript:void(0);" class="remove-tr" data-key="' + data + '">删除</a></td> </tr>';
                    }
                }
                $('.inner-tb').find('tbody').append(str);
                ul.hide();
            } else if (e.keyCode == 38) {//上键
                index = index == 0 ? len - 1 : index - 1;
                ul.find('li').removeClass('active');
                ul.find('li').eq(index).addClass('active');
            } else if (e.keyCode == 40) {//下键
                index = index == len - 1 ? 0 : index + 1;
                ul.find('li').removeClass('active');
                ul.find('li').eq(index).addClass('active');
            } else {//正常输入
                Data.getName({key: _this.val()}, function (json) {
                    if (json && 'resBody' in json && json.resBody instanceof Array && json.resBody.length > 0) {
                        var str = ''
                            , body = json.resBody;
                        var dt = {};
                        for (var b in body) {
                            if (body.hasOwnProperty(b)) {
                                var d = body[b];
                                str += '<li data-val="' + d.airportCode + '" class="' + (b == 0 ? 'active' : '') + '">' + d.displayName + '</li>';
                                dt[d.airportCode] = d;
                            }
                        }
                        ports = dt;
                        ul.html(str);
                        ul.show();
                    }
                });
            }
        });
        //input失去焦点
        $(document).on('blur', 'input#start', function () {
            var ul = $(this).siblings('.get-name');
            var data = ul.children('.active').data('val') || ul.find('li:first-child').data('val') || '';
            $(this).val(data);
            $(this).data('val', data);
            ul.hide();
        });
        //li元素悬浮获得焦点
        $(document).on('mouseenter ', '.get-name li', function () {
            $(this).addClass('active');
            $(this).siblings().removeClass('active');
        });
        //获取航空公司
        $(document).on('keyup', 'input#code', function (e) {
            var _this = $(this)
                , ul = _this.siblings('.get-name');
            var index = ul.find('.active').index() || 0
                , len = ul.children().length;
            if (e.keyCode == 13) {//回车键
                var data = ul.children('.active').data('val') || ul.find('li:first-child').data('val') || '';
                $(this).val(data);
                $('#inner-name').data('code', data);
                if (company && data) {
                    $('#inner-name').val(company[data].companyName || '');
                    $('#country').val(company[data].companyCountry || '');
                    $('#o-header').val(company[data].airwayBillCode || '');
                }
                ul.hide();
            } else if (e.keyCode == 38) {//上键
                index = index == 0 ? len - 1 : index - 1;
                ul.find('li').removeClass('active');
                ul.find('li').eq(index).addClass('active');
            } else if (e.keyCode == 40) {//下键
                index = index == len - 1 ? 0 : index + 1;
                ul.find('li').removeClass('active');
                ul.find('li').eq(index).addClass('active');
            } else {//正常输入
                Data.getCode({key: _this.val()}, function (json) {
                    if (json && 'resBody' in json && json.resBody instanceof Array && json.resBody.length > 0) {
                        var str = ''
                            , body = json.resBody;
                        var dt = {};
                        for (var b in body) {
                            if (body.hasOwnProperty(b)) {
                                var d = body[b];
                                str += '<li data-val="' + d.airlineCode + '" class="' + (b == 0 ? 'active' : '') + '">' + d.companyName + '</li>';
                                dt[d.airlineCode] = d;
                            }
                        }
                        company = dt;
                        ul.html(str);
                        ul.show();
                    } else {
                        ul.html('');
                    }
                });
            }
        });
        //input失去焦点
        $(document).on('blur', 'input#code', function () {
            var ul = $(this).siblings('.get-name');
            if (ul.children().length > 0) {
                var data = ul.children('.active').data('val') || ul.find('li:first-child').data('val') || '';
                $(this).val(data);
                $('#inner-name').data('code', data);
                $('#inner-name').val(company[data].companyName || '');
                $('#country').val(company[data].companyCountry || '');
                $('#o-header').val(company[data].airwayBillCode || '');
                ul.hide();
            }
        });
        //删除
        $(document).on('click', '.remove-tr', function () {
            var key = $(this).data('key');
            $(this).parents('tr').remove();
            delete save[key];
        });
        //提交
        $(document).on('click', '#editor-ensure', function () {
            var data = {
                "companyId": 0,
                "airCompanyCode": $('#inner-name').data('code'),
                "airCompanyName": $('#inner-name').val(),
                "airCompanyCountry": $('#country').val(),
                "airwayBillCode": $('#o-header').val(),
                "bulkyRate": $('#percentage').find('option:selected').val(),
                "warehouseId": $('#warehouse').find('option:selected').val(),
                "templateId": $('#price').find('option:selected').val(),
                "deptAirports": [],
                "configState": 1
            };
            var deptAirports = [];
            var ele = $('.inner-tb').find('tbody').find('tr');
            ele.each(function () {
                deptAirports.push(JSON.parse($(this).data('info').replace(/'/g, '"')));
            });
            data['deptAirports'] = deptAirports;
            if ($(this).data('type') == 1) {
                Data.add(data, function (json) {
                    if (json && 'resCode' in json && json.resCode == 0) {
                        Modal.setAlert(json.resMsg || '添加成功！', null, function () {
                            location.reload();
                        });
                    } else {
                        Modal.setAlert(json.resMsg || '添加失败，请重试！');
                    }
                });
            } else {
                data['Id'] = $(this).data('id');
                Data.update(data, function (json) {
                    if (json && 'resCode' in json && json.resCode == 0) {
                        Modal.setAlert(json.resMsg || '修改成功！', null, function () {
                            location.reload();
                        });
                    } else {
                        Modal.setAlert(json.resMsg || '修改失败，请重试！');
                    }
                });
            }
        });
        //删除
        $(document).on('click', '.del-btn', function () {
            $('#delete-ensure').data('id', $(this).data('id'));
            $('.white-back').removeClass('dp-n');
            $('.delete-part').removeClass('dp-n');
        });
        //确认删除
        $(document).on('click', '#delete-ensure', function () {
            var data = {
                "configId": $(this).data('id')
            };
            Data.del(data, function (json) {
                if (json && 'resCode' in json && json.resCode == 0) {
                    Modal.setAlert(json.resMsg || '删除成功！', null, function () {
                        location.reload();
                    });
                } else {
                    Modal.setAlert(json.resMsg || '删除失败，请重试！');
                }
            });
        });
        //修改
        $(document).on('click', '.update-btn', function () {
            var _this = $(this);
            Data.detail({id: $(this).data('id')}, function (json) {
                if (json && 'resCode' in json && json.resCode == 0) {
                    var d = json.resBody;
                    var str = '';
                    $('#inner-name').val(d.airCompanyName || '');
                    $('#country').val(d.airCompanyCountry || '');
                    $('#o-header').val(d.airwayBillCode || '');
                    $('#code').val(d.airCompanyCode || '');
                    $('#inner-name').data('code', d.airCompanyCode || '');
                    $('#percentage').find('option[value="' + d.bulkyRate + '"]').prop('selected', true);
                    $('#warehouse').find('option[value="' + d.warehouseId + '"]').prop('selected', true);
                    $('#price').find('option[value="' + d.templateId + '"]').prop('selected', true);
                    for (var e in d.deptAirports) {
                        if (d.deptAirports.hasOwnProperty(e)) {
                            var dt = d.deptAirports[e];
                            var arr = d.guarantyFiles[dt.airportCode] || [];
                            var inner = '';
                            str += '<tr class="add-tr" data-info="' + JSON.stringify(dt).replace(/\"/g, "'") + '" data-key="' + dt.airportCode + '"> <td>' + dt.airportCode + '</td> <td>' + dt.airportName + '</td> <td class="big"><div class="dp-tb">';
                            for (var a in arr) {
                                if (arr.hasOwnProperty(a)) {
                                    inner += '<div class="files"> <div class="top">' + arr[a].fileExtension.toUpperCase() + '<span class="glyphicon glyphicon-trash" data-key="' + arr[a].keyName + '"></span> </div> <a href="javascript:void(0);" class="dp-b">' + arr[a].fileName + '</a> </div>'
                                }
                            }
                            str += inner;
                            str += '<div class="add" style="display: ' + (arr.length >= 3 ? 'none' : 'block') + '"> <div class="top"> + </div> <a href="javascript:void(0);" class="dp-b">添加文件</a> <input type="file" class="up-file" data-p="' + dt.airportCode + '" data-c="' + d.airCompanyCode + '"></div></div></td><td><a href="javascript:void(0);" class="remove-tr" data-key="' + dt.airportCode + '">删除</a></td> </tr>';
                        }
                    }
                    $('.inner-tb').find('tbody').html(str);
                    $('#editor-ensure').data('id', _this.data('id'));
                    $('#editor-ensure').data('type', 2);
                    $('.white-back').removeClass('dp-n');
                    $('.editor-modal').removeClass('dp-n');
                } else {
                    Modal.setAlert(json.resMsg || '获取详情失败，请重试！')
                }
            });
        });
    };
    var priceInit = function () {
        Data.priceList(function (json) {
            var str = '';
            if (json && 'resCode' in json && json.resCode == 0 && 'sList' in json.resBody && json.resBody.sList) {
                var arr = json.resBody.sList;
                for (var a in arr) {
                    if (arr.hasOwnProperty(a)) {
                        var d = arr[a];
                        str += '<option value="' + d.templateId + '">' + d.expenseName + '</option>';
                    }
                }
                $('#price').html(str);
            }
        });
    };
    var warehouseInit = function () {
        Data.warehouse(function (json) {
            var str = '';
            if (json && 'resCode' in json && json.resCode == 0 && 'sList' in json.resBody && json.resBody.sList) {
                var arr = json.resBody.sList;
                for (var a in arr) {
                    if (arr.hasOwnProperty(a)) {
                        var d = arr[a];
                        str += '<option value="' + d.warehouseId + '">' + d.warehouseName + '</option>';
                    }
                }
                $('#warehouse').html(str);
            }
        });
    };
    var files = function () {
        $(document).on('change', '.up-file', function () {
            var arr = ['doc', 'docx', 'pdf', 'xlsx', 'xls'];
            var _this = $(this);
            var file = this.files[0]
                , size = this.files[0].size
                , name = this.files[0].name;
            var na = name.split('.');
            if (arr.indexOf(na[na.length - 1]) >= 0) {
                if (size < 2097152) {
                    Data.up({"file": name}, function (json) {
                        var token;
                        if (json && 'resCode' in json && json.resCode == 0) {
                            token = json.resBody;
                        }
                        if (token) {
                            Data.ossUpload(token, file, function (data) {
                                if (data && 'status' in data && data.status > 0) {
                                    var d = {
                                        "fileName": name,
                                        "fileComment": '',
                                        "keyName": token.Keyname,
                                        "agentCompanyId": 0,
                                        "airCompanyCode": _this.data('c'),
                                        "airportCode": _this.data('p')
                                    };
                                    Data.addFile(d, function (json) {
                                        if (json && 'resCode' in json && json.resCode == 0 && json.resBody) {
                                            var d = json.resBody;
                                            var str = '<div class="files"> <div class="top">' + d.fileExtension.toUpperCase() + '<span class="glyphicon glyphicon-trash" data-key="' + d.keyName + '"></span> </div> <a href="javascript:void(0);" class="dp-b">' + d.fileName + '</a> </div>';
                                            _this.parents('.add').before(str);
                                            if (_this.parents('.add').siblings('.files').length == 3) {
                                                _this.parents('.add').hide();
                                            }
                                        } else {
                                            Modal.setAlert(json.resMsg || '上传失败！');
                                        }
                                    });
                                }
                            });
                        }
                    });
                } else {
                    Modal.setAlert('您上传的文件超过2M！请重新选择。');
                }
            } else {
                Modal.setAlert('文件格式支持.doc/.docx/.xls/.xlsx/.pdf/');
            }
        });
        $(document).on('click', '.glyphicon-trash', function () {
            var _this = $(this);
            var data = {
                "agentCompanyId": 0,
                "keyName": $(this).data('key')
            };
            Data.delFile(data, function (json) {
                if (json && 'resCode' in json && json.resCode == 0) {
                    if (_this.parents('.files').siblings('.files').length == 2) {
                        _this.parents('.files').siblings('.add').show();
                    }
                    _this.parents('.files').remove();
                } else {
                    Modal.setAlert('删除失败！');
                }
            });
        });
    };
    var init = function () {
        var data = {
            "keyword": $('#name').val(),
            "agentCompanyId": 0
        };
        Data.list(data, function (json) {
            Dom.list(json);
        });
    };
    var run = function () {
        listener();
        priceInit();
        warehouseInit();
        init();
        files();
    };
    return {
        run: run
    }
}());
module.exports.Listener = Listener;
},{"../../general/function":5,"../../general/modal":7,"./data":1,"./dom":2}],5:[function(require,module,exports){
/**
 * Created by zrz on 2016/2/26.
 * @version 1.0.0 created 通用性功能方法
 */

'use strict';

var Fun = (function () {
    var _timeOut = 100000;//请求超时时间为10s
    /**
     * 封装ajax
     * @param option
     * {
     *      url:"请求的地址"
     *      ,method:"请求的方法"
     *      ,async:"是否并发"
     *      ,data:"发送的数据"
     *      ,success:"成功时回调"
     *      ,error:"失败/超时时回调"
     *      ,timeout:"超时时间"
     *      ,complete:"完成后的回调"
     * }
     */
    var ajax = function (option) {
        //ajax开始时应显示“加载信息框”
        Modal.showLoading();
        $.ajax({
            url: option.url
            , type: "type" in option && option.type || "GET"
            , timeout: option.timeout || _timeOut
            , data: "data" in option && option.data || {}
            , dataType: "json"
            , async: ("async" in option && option.async) ? true : false
            , success: function (json) {
                if ("status" in json && json.status > 0 && "data" in json) {
                    if ("success" in option) {
                        option.success(json.data);
                    } else {
                        Modal.setAlert("无success方法!");
                    }
                } else if ("error" in option && option.error instanceof Function) {
                    option.error(json);
                } else {
                    Modal.setAlert('操作失败!');
                }
            }, error: function (xhr) {//404或者超时
                if ("error" in option && option.error instanceof Function) {
                    //提示用户错误信息
                    Modal.showLoading(false);
                    Modal.setAlert("连接服务器失败，状态：" + (xhr.status || -1) + ",信息：" + (xhr.statusText || "-"));
                    option.error(xhr.status, xhr.statusText);//回调请求的状态和错误信息
                }
            }, complete: function (xhr, type) {
                //关闭“加载信息框”
                Modal.showLoading(false);
                if ("complete" in option && option.complete instanceof Function) {
                    option.complete(xhr, type);//回调请求的xhr信息和类型
                }
            }
        });
    };
    //全选和单选的绑定
    var setCheckboxListener = function (allCheck, radioChecks) {
        //筛选单选按钮组
        var radioValueEles = $(radioChecks);
        //点击全选时，同组按钮被同步
        $(document).delegate(allCheck, "click", function () {
            if (radioValueEles && radioValueEles.length > 0) {
                for (var _r = 0; _r < radioValueEles.length; _r++) {
                    radioValueEles[_r].checked = $(this).is(":checked");
                }
            }
        });
        //点击单选按钮时，
        $(document).delegate(radioChecks, "click", function () {
            $(allCheck)[0].checked = $(radioChecks + ":checked").length == $(radioChecks).length;
        });
    };
    var url = (function () {
        var get = function (name) {
            var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
            var r = window.location.search.substr(1).match(reg);
            if (r != null) return decodeURI(r[2]);
            return null;
        };
        /**
         * 根据参数列表长度进行判断，兼容IE9
         * @returns {string}
         */
        var set = function () {
            if (arguments.length === 1 && typeof arguments[0] === 'object') {//一个对象，使用key标记value
                var obj = arguments[0]
                    , search = location.search;
                for (var o in obj) {
                    if (obj.hasOwnProperty(o)) {
                        search = changeURLKeyValue(search, o, obj[o]);
                    }
                }
                if ('pushState' in history) {
                    history.pushState(null, document.title, search);
                } else if ('pushState' in History) {//ie9 不支持pushState方法,javascript.ejs中添加history.js完成html4对pushState的支持
                    History.pushState(null, null, search);//返回重新构造后search串
                }
            } else if (arguments.length === 2) {//key+value
                var key = arguments[0]
                    , value = arguments[1];
                if ('pushState' in history) {
                    history.pushState(null, document.title, changeURLKeyValue(location.toString(), key, value));
                } else if ('pushState' in History) {//ie9 不支持pushState方法,javascript.ejs中添加history.js完成html4对pushState的支持
                    History.pushState(null, null, changeURLKeyValue(location.search, key, value));//返回重新构造后search串
                }
            }
            function changeURLKeyValue(url, arg, arg_val) {
                var pattern = arg + '=([^&]*)';
                var replaceText = arg + '=' + arg_val;
                if (url.match(pattern)) {
                    var tmp = '/(' + arg + '=)([^&]*)/gi';
                    tmp = url.replace(eval(tmp), replaceText);
                    return tmp;
                } else {
                    if (url.match('[\?]')) {
                        return url + '&' + replaceText;
                    } else {
                        return url + '?' + replaceText;
                    }
                }
            }
        };
        return {
            get: get
            , set: set
        }
    }());
    var formatImage=function (path, size, ele) {
        if(path instanceof  Array && path.length>0){
            path = path[0];
        }
        var IMAGE_SIZE = {
            original: {
                path: "",
                size: ""
            },
            xlarge: {
                path: "_xlarge",
                size: "660*660"
            },
            large: {
                path: "_large",
                size: "420*420"
            },
            middle: {
                path: "_middle",
                size: "300*300"
            },
            small: {
                path: "_small",
                size: "240*240"
            },
            little: {
                path: "_little",
                size: "120*120"
            },
            micro: {
                path: "_micro",
                size: "60*60"
            }
        };
        size = IMAGE_SIZE[size || "middle"] || IMAGE_SIZE.middle;
        var pathTemp = /\.\w+?$/.exec(path);
        if (!pathTemp) {
            path += size.path;
        } else {
            path = (path.substr(0, pathTemp.index || path.length)) + size.path + pathTemp[0];
        }
        if (ele && ele.attr) {
            ele.attr("src", path);
        }
        return path;
    };
    return {
        ajax: ajax
        , getTimtout: _timeOut
        , setCheckboxListener: setCheckboxListener
        , url: url
        , formatImage: formatImage
    }
}());

exports.ajax = Fun.ajax;
exports.getTimeout = Fun.getTimtout;
exports.setCheckboxListener = Fun.setCheckboxListener;
exports.url = Fun.url;
exports.formatImage = Fun.formatImage;

},{}],6:[function(require,module,exports){
/**
 * Created by Jeremy on 2017/1/23.
 */
'use strict';
var Modal = require('./modal');
var general = (function () {
    var run = function () {
        //时间格式化
        Date.prototype.Format = function (fmt) { //author: Jeremyyy
            var o = {
                "M+": this.getMonth() + 1, //月份
                "d+": this.getDate(), //日
                "h+": this.getHours(), //小时
                "m+": this.getMinutes(), //分
                "s+": this.getSeconds(), //秒
                "q+": Math.floor((this.getMonth() + 3) / 3), //季度
                "S": this.getMilliseconds() //毫秒
            };
            if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
            for (var k in o)
                if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
            return fmt;
        };

        //修改密码
        $(document).on('click', '#change-pwd', function () {
            $('.change-back').removeClass('dp-n');
            $('.change-pwd').removeClass('dp-n');
        });
        //关闭修改密码
        $(document).on('click', '.close-pwd', function () {
            $('.change-back').addClass('dp-n');
            $('.change-pwd').addClass('dp-n');
        });
        $(document).on('click', '#ensure-pwd', function () {
            if ($('#new-password').val() != $('#ensure-password').val()) {
                $('#ensure-password').addClass('warm');
            } else {
                $('#ensure-password').removeClass('warm');
                var data = {
                    "agentMemberId": 0,
                    "oldPwd": $('#password').val(),
                    "pwd": $('#new-password').val(),
                    "pwdConfirm": $('#ensure-password').val()
                };
                $.ajax({
                    url: '/api/account/changePwd'
                    , type: 'post'
                    , data: data
                    , dataType: 'json'
                    , timeout: 100000
                    , success: function (json) {
                        if (json && 'resCode' in json && json.resCode == 0) {
                            Modal.setAlert('修改成功！', null, function () {
                                $('.change-back').addClass('dp-n');
                                $('.change-pwd').addClass('dp-n');
                            });
                        } else {
                            Modal.setAlert(json.resMsg || '修改失败，请重试！');
                        }
                    }
                });
            }
        });
    };
    return {
        run: run
    }
}());
module.exports.general = general;
},{"./modal":7}],7:[function(require,module,exports){
/**
 * Created by zrz on 2016/2/24.
 * @version 1.0.0 created
 */

'use strict';

//构造信息框主体
var Modal = (function () {
    //构造原始类
    function M(m) {
        this.s = m.s;//是否显示
        this.id = m.id;
    }

    //构造标准show方法，用于继承
    M.prototype.show = function () {
        var ele = document.getElementById(this.id);
        if (ele) {
            if (this.s && !isShow()) {//显示当前隐藏
                ele.className = ele.className.replace("dp-n", "");
            } else if (!this.s && isShow()) {//隐藏当前显示
                ele.className += " dp-n";
            }
            //去除两边的空格
            ele.className = String(ele.className).trim();
        }
        function isShow() {//是否已显示，无class时显示
            return ele.className.split("dp-n").length == 1;
        }
    };

    //加载信息框
    var loading = (function () {
        //初始化生成加载信息框
        var init = function () {
            if (!document.getElementById("loading_modal_element")) {
                $('body').append('<div id="loading_modal_element" class="loading-modal-body dp-n"><div class="cover_modal_element"></div>' +
                    '<div class="loading-modal-image"></div>' +
                    '<div class="loading-modal-text">' +
                    '<h2>玩命加载中……</h2>' +
                    '</div></div>');
            }
            return false;
        };
        //显示、隐藏信息框
        var show = function (s) {
            s = typeof s == "undefined" ? true : s;//无参数显示信息框
            var m = new M({id: "loading_modal_element", s: s});
            m.show();
        };
        return {
            init: init
            , show: show
        }
    }());
    //弹出信息框
    var alert = (function () {
        var init = function () {
            if (!document.getElementById("alert_modal_element")) {
                $('body').append('<div id="alert_modal_element" class="alert-modal-element dp-n"><div class="cover_modal_element"></div>' +
                    '<div class="alert-modal-content">' +
                    '<div class="alert-modal-body"><span class="alert-modal-text"></span></div>' +
                    '<div class="alert-modal-footer"><button id="alert_modal_close" class="alert-modal-button">关闭</button></div>' +
                    '</div></div>');
            }
            return false;
        };
        var show = function (s) {
            s = typeof s == "undefined" ? true : s;
            var m = new M({id: "alert_modal_element", s: s});
            m.show();
        };
        /**
         * 设置弹出信息框
         * @param msg       显示的信息，支持html
         * @param sed       倒计时关闭时间，单位：second
         * @param callback  关闭触发回调函数
         */
        var set = function (msg, sed, callback) {
            var ele = document.getElementById("alert_modal_element");
            if (msg) {
                if (typeof msg === 'object') {//应对后端返回提示时使用Object封装
                    msg = JSON.stringify(msg);
                }
                if(ele){
                    ele.getElementsByClassName("alert-modal-text")[0].innerHTML = msg;
                }else{
                    init();
                    ele.getElementsByClassName("alert-modal-text")[0].innerHTML = msg;
                }
                show();
            }
            if (sed > 0) {
                setTimeout(function () {
                    show(false);
                }, 1000 * sed);
            }//无关闭时间或者关闭时间为0，不自动关闭
            //fixme 事件监听的ie兼容性
            //关闭按钮的事件侦听
            $("#alert_modal_close").on("click", function () {
                if (callback && callback instanceof Function) {
                    callback();
                }
                show(false);
                //阻止事件继续传递
                return false;
            });
        };
        return {
            init: init
            , show: show
            , set: set
        }
    }());
    //选择信息框
    var confirm = (function () {
        var init = function () {
            if (!document.getElementById("confirm_modal_element")) {
                $('body').append('<div id="confirm_modal_element" class="confirm-modal-element dp-n"><div class="cover_modal_element"></div>' +
                    '<div class="confirm-modal-content">' +
                    '<div id="confirm_modal_header" class="confirm-modal-header dp-n"></div>' +
                    '<div class="confirm-modal-body"><span id="confirm_modal_text" class="confirm-modal-text"></span></div>' +
                    '<div class="confirm-modal-footer">' +
                    '<div class="footer-button-success"><button class="confirm-modal-button  modal-success" data-confirm="success">确认</button></div>' +
                    '<div class="footer-button-false"><button class="confirm-modal-button" data-confirm="error">取消</button></div>' +
                    '</div></div></div>');
            }
            return false;
        };
        var show = function (s) {
            s = typeof s == "undefined" ? true : s;
            var m = new M({id: "confirm_modal_element", s: s});
            m.show();
        };
        /**
         * 设置选择信息框的内容
         * @param option    配置
         * {
         *      title:"头部显示的信息"
         *      ,text:"显示的提示信息"
         *      ,success:"点击成功后的回调"
         *      ,error:"点击失败后的回调"
         *      ,complete:"点击按钮后的整体回调"
         * }
         */
        var bar = 0;
        var set = function (option) {
            if (!option) {
                return false;
            }
            if ("title" in option && option.title.length > 0) {//有头部，则显示头部
                document.getElementById("confirm_modal_header").innerHTML = option.title;
            }
            if ("text" in option && option.text.length > 0) {//有内容，则显示整个选择信息框
                document.getElementById("confirm_modal_text").innerHTML = option.text;
            }
            //fixme 事件监听的ie兼容性
            //关闭按钮的事件侦听
            $("#confirm_modal_element").find(".confirm-modal-button").off("click").on("click", function () {
                //fixme .off("click")用于防止多次触发<--很玄学，我也不知道为什么，但是请不要修改。
                var atr = $(this).attr("data-confirm");//选择的按钮
                bar++;
                if (option && atr in option && option[atr] instanceof Function) {
                    option[atr]();
                }
                if (option && "complete" in option && option.complete instanceof Function) {
                    option.complete();//若有完成函数，则执行
                } else {//否则，关闭选择框
                    show(false);
                }
                //阻止事件继续传递
                //return false;
            });
        };
        return {
            init: init
            , show: show
            , set: set
        }
    }());
    //覆盖层
    var cover = (function () {
        var init = function () {
            if (!document.getElementById("cover_modal_element")) {
                $('body').append('<div id="cover_modal_element" class="cover-modal-element dp-n"></div>');
            }
            return false;
        };
        var hide = function () {
            document.getElementById("cover_modal_element").style.display = "none";
        };
        var show = function () {
            document.getElementById("cover_modal_element").style.display = "block";
        };
        return {
            init: init
            , show: show
            , hide: hide
        }
    }());
    return {
        initLoading: loading.init
        , showLoading: loading.show

        , initAlert: alert.init
        , showAlert: alert.show
        , setAlert: alert.set

        , initConfirm: confirm.init
        , setConfirm: confirm.set
        , showConfirm: confirm.show
        , initCover: cover.init
    }
}());

//页面加载完毕后生成四个自定义模态框
setTimeout(function () {
    //页面加载时生成一个覆盖层
    Modal.initCover();
    //页面加载时生成一个加载信息框
    Modal.initLoading();
    //页面加载时生成一个弹出信息框
    Modal.initAlert();
    //页面加载时生成一个选择信息框
    Modal.initConfirm();
}, 100);


//抛出上层调用
exports.showLoading = Modal.showLoading;
exports.setAlert = Modal.setAlert;
exports.showAlert = Modal.showAlert;
exports.setConfirm = Modal.setConfirm;
exports.showConfirm = Modal.showConfirm;
},{}]},{},[3])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
