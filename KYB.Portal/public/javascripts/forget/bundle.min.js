(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/**
 * Created by Auser on 2016/12/4.
 */
"use strict";
var Data = (function () {
  var forgetCode = function (data, callback) {
    var _data = {};
    $.ajax({
      url: '/api/login/forgetCode'
      , type: 'post'
      , data: data
      , dataType: 'json'
      , timeout: 100000
      , success: function (json) {
        if (json && "resCode" in json) {
          _data = json;
        } else {
          _data = {};
        }
      }, complete: function () {
        if (callback && callback instanceof Function) {
          callback(_data);
        }
      }
    });
  };
  var reset = function (data, callback) {
    var _data = {};
    $.ajax({
      url: '/api/login/reset'
      , type: 'post'
      , data: data
      , dataType: 'json'
      , timeout: 100000
      , success: function (json) {
        if (json && "resCode" in json) {
          _data = json;
        } else {
          _data = {};
        }
      }, complete: function () {
        if (callback && callback instanceof Function) {
          callback(_data);
        }
      }
    });
  };
  return {
    reset: reset
    , forgetCode: forgetCode
  }
}());
module.exports.Data = Data;
},{}],2:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/22.
 */
"use strict";
require('../general').run();
require('./listener').run();
},{"../general":8,"./listener":3}],3:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/22.
 */
"use strict";
require('../frame/burster');
var Data = require('./data').Data;
var url = require('../frame/function').url;
var Modal = require('../frame/modal');
var Listener = (function () {
    var listener = function () {
        $(document).on('click', '#code', function () {
            getCode();
        });
        $(document).on('blur', '#mail', function () {
            var reg = /^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/
                , value = $(this).val();
            if (reg.test(value)) {
                $(this).siblings('.wrong').addClass('hide');
            } else {
                $(this).siblings('.wrong').removeClass('hide');
            }
        });
        //验证密码强度
        $(document).on('blur', '#new-pwd', function () {
            var value = $(this).val()
                , reg = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,20}$/;
            if (reg.test(value)) {
                $(this).siblings('.wrong').addClass('hide');
            } else {
                $(this).siblings('.wrong').removeClass('hide');
            }

        });
        $(document).on('click', '.send-mail', function () {
            var data = {
                "mobile": $('#mail').val(),
                "smsCode": $('#tel-pwd').val(),
                "password": $('#new-pwd').val()
            };
            if (data.mobile && data.smsCode && data.password) {
                Data.reset(data, function (json) {
                    if (json && 'resCode' in json && json.resCode == 0) {
                        Modal.setAlert('重置成功！', null, function () {
                            window.href = '/login';
                        });
                    } else {
                        Modal.setAlert(json.resMsg || '重置失败，请重试！');
                    }
                });
            }
        });
    };
    var getCode = function () {
        var src = '/getImgCode?';
        var getNum = function () {
            var num = '';
            for (var i = 0; i < 4; i++) {
                num = num + parseInt(10 * Math.random());
            }
            return num;
        };
        src += getNum();
        $('#code').attr('src', src);
    };
    //发送验证码
    var sendPhone = function (result) {
        var _this = $('#send-pwd');
        var tel = $('#mail').val();
        if (tel) {
            _this.prop('disabled', true);
            var data = {
                mobile: $('#mail').val(),
                geetest_challenge: result.geetest_challenge,
                geetest_validate: result.geetest_validate,
                geetest_seccode: result.geetest_seccode
            };
            Data.forgetCode(data, function (json) {
                if (json && 'resCode' in json && json.resCode == 0) {
                    var time = 120;
                    var timer = setInterval(function () {
                        if (time != 0) {
                            var str = '短信已发送（' + time + '）';
                            _this.html(str);
                            time--;
                        } else {
                            clearInterval(timer);
                            _this.html('点击发送验证码');
                            _this.prop('disabled', false);
                        }
                    }, 1000)
                } else if (json.resCode == 10) {
                    _this.prop('disabled', false);
                    $('.wrong-code').html('验证码错误').removeClass('dp-n');
                } else {
                    _this.prop('disabled', false);
                    Modal.setAlert(json.resMsg);
                }
            });
        } else {
            if (!tel) {
                $('#mail').siblings('.wrong').removeClass('hide');
            }
        }
    };
    //获取gt验证码
    var getGt = function () {
        var handler2 = function (captchaObj) {
            $("#send-pwd").click(function (e) {
                var result = captchaObj.getValidate();
                if (!result) {
                    $("#notice").show();
                    setTimeout(function () {
                        $("#notice").hide();
                    }, 2000);
                } else {
                    if ($('#mail').val()) {
                        sendPhone(result);
                    } else {
                        $('.tel').find('.wrong').removeClass('hide');
                    }
                }
                e.preventDefault();
            });

            // 将验证码加到id为captcha的元素里，同时会有三个input的值用于表单提交
            captchaObj.appendTo("#captcha");

            captchaObj.onReady(function () {
                $("#wait").hide();
            });

            // 更多接口参考：http://www.geetest.com/install/sections/idx-client-sdk.html
        };


        $.ajax({
            url: "/login/sendGt3?t=" + (new Date()).getTime(), // 加随机数防止缓存
            type: "get",
            dataType: "json",
            success: function (data) {

                // 调用 initGeetest 初始化参数
                // 参数1：配置参数
                // 参数2：回调，回调的第一个参数验证码对象，之后可以使用它调用相应的接口
                initGeetest({
                    gt: data.gt,
                    challenge: data.challenge,
                    new_captcha: data.new_captcha, // 用于宕机时表示是新验证码的宕机
                    offline: !data.success, // 表示用户后台检测极验服务器是否宕机，一般不需要关注
                    product: "popup", // 产品形式，包括：float，popup
                    width: "100%"

                    // 更多配置参数请参见：http://www.geetest.com/install/sections/idx-client-sdk.html#config
                }, handler2);
            }
        });
    };
    var run = function () {
        listener();
        getGt();
        //getCode();
    };
    return {
        run: run
    }
}());
module.exports = Listener;
},{"../frame/burster":4,"../frame/function":5,"../frame/modal":6,"./data":1}],4:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/24.
 */
"use strict";

(function ($) {
    /**
     * 生成分页器
     * @param ele 需要添加分页器的元素
     * @param offset 偏移量，即从第data-offset开始
     * @param length 总记录条数
     * @param showPages 分页器显示的页数，超过则隐藏多余的页
     * @param rows 每页显示的记录条数
     */
    $.burster = function (ele, offset, length, showPages, rows) {
        offset = offset ? parseInt(offset) : 0;
        //将分页器装入table中
        if (length && length > offset) {
            var pageHtml = ""
                , ass = ""//清空需要装入的html
                , beforePages = Math.ceil(offset / rows)//需要显示的前页数/当前页
                , afterPages = Math.ceil((length - offset ) / rows)//需要显示的后页数
                , pages = Math.ceil(length / rows) //总页数
                , k = 0;
            //alert("总页数" + pages + " 前页数 " + beforePages + " 后页数 " + afterPages);
            //若页数小于showPages页，则全部显示
            if (pages >= 0 && pages <= showPages) {
                for (k = 0; k < pages; k++) {
                    if (k == beforePages) {
                        pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                    } else {
                        pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                    }
                }
            } else if (pages > showPages) {//总页数大于showPages页
                if (beforePages <= Math.ceil(showPages / 2) && afterPages > showPages + 1) {
                    for (k = 0; k < showPages; k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages <= Math.ceil(showPages / 2) && afterPages == showPages + 1) {
                    for (k = 0; k < showPages - 1; k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages <= Math.ceil(showPages / 2) && afterPages <= showPages) {
                    for (k = 0; k < showPages - 1; k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > Math.ceil(showPages / 2) && beforePages <= showPages && afterPages > showPages) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < beforePages + Math.ceil(showPages / 2); k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > showPages && afterPages > showPages) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < beforePages + Math.ceil(showPages / 2); k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > Math.ceil(showPages / 2) && beforePages <= pages && afterPages <= showPages && afterPages > Math.ceil(showPages / 2) + 1) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < beforePages + Math.ceil(showPages / 2); k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > pages && afterPages <= showPages && afterPages > Math.ceil(showPages / 2) + 1) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < beforePages + Math.ceil(showPages / 2); k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > Math.ceil(showPages / 2) && afterPages <= Math.ceil(showPages / 2) + 1) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < pages; k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                }
            }
            //判断"首页"和"末页"是否可点击
            var firstPage, lastPage;
            if (offset == 0) {//此时首页无法点击
                firstPage = '<li class="disabled"><a class="pages" data-offset="0">首页</a></li>';
                lastPage = '<li><a class="pages" data-offset="' + parseInt(parseInt((length % rows == 0 ? (length - 1) : length) / rows) * rows) + '" >末页</a></li>';
            } else if ((offset + rows) >= length) {//此时末页无法点击
                firstPage = '<li><a class="pages" data-offset="0">首页</a></li>';
                lastPage = '<li class="disabled"><a class="pages" data-offset="' + parseInt(parseInt((length % rows == 0 ? (length - 1) : length) / rows) * rows) + '">末页</a></li>';
            } else {
                firstPage = '<li><a class="pages" data-offset="0">首页</a></li>';
                lastPage = '<li><a class="pages" data-offset="' + parseInt(parseInt((length % rows == 0 ? (length - 1) : length) / rows) * rows) + '">末页</a></li>';
            }
            //判断"上一页"和"下一页"是否存在
            var upPage, downPage;
            if (offset == 0 || (offset < rows && (offset % rows != 0))) {
                upPage = "<li class='disabled'><a class='pages' func='previous' data-offset='" + parseInt(offset) + "' >上页</a></li>"
            } else {
                upPage = "<li><a class='pages' func='previous' data-offset='" + (parseInt(offset) - parseInt(rows)) + "' >上页</a></li>";
            }
            if (offset >= (length - rows)) {
                downPage = "<li class='disabled'><a class='pages' func='next' data-offset='" + parseInt(offset) + "'>下页</a></li>"
            } else {
                downPage = "<li><a class='pages' func='next' data-offset='" + parseInt(parseInt(offset) + parseInt(rows)) + "'>下页</a></li>"
            }
            if (pages != 1) {
                //分页部分
                ass += "<div id='pager' class='pager-info'>" +
                    "<h6 id='result' class='pager-record'>共有<span>" + length + "</span>条记录</h6>" +
                    "<ul class='pagination'>" + firstPage + upPage + pageHtml + downPage + lastPage + "</ul></div>";
                //table中注入拼装的记录
                ele.html(ass);
            } else {//无法分页清空分页器
                ele.html('');
            }
        }
    }
}(jQuery));
},{}],5:[function(require,module,exports){
/**
 * Created by jeremy on 2016/2/26.
 * @version 1.0.0 created 通用性功能方法
 */

'use strict';

var Fun = (function () {
    var _timeOut = 100000;//请求超时时间为10s
    /**
     * 封装ajax
     * @param option
     * {
     *      url:"请求的地址"
     *      ,method:"请求的方法"
     *      ,async:"是否并发"
     *      ,data:"发送的数据"
     *      ,success:"成功时回调"
     *      ,error:"失败/超时时回调"
     *      ,timeout:"超时时间"
     *      ,complete:"完成后的回调"
     * }
     */
    var ajax = function (option) {
        //ajax开始时应显示“加载信息框”
        Modal.showLoading();
        $.ajax({
            url: option.url
            , type: "type" in option && option.type || "GET"
            , timeout: option.timeout || _timeOut
            , data: "data" in option && option.data || {}
            , dataType: "json"
            , async: ("async" in option && option.async) ? true : false
            , success: function (json) {
                if ("status" in json && json.status > 0 && "data" in json) {
                    if ("success" in option) {
                        option.success(json.data);
                    } else {
                        Modal.setAlert("无success方法!");
                    }
                } else if ("error" in option && option.error instanceof Function) {
                    option.error(json);
                } else {
                    Modal.setAlert('操作失败!');
                }
            }, error: function (xhr) {//404或者超时
                if ("error" in option && option.error instanceof Function) {
                    //提示用户错误信息
                    Modal.showLoading(false);
                    Modal.setAlert("连接服务器失败，状态：" + (xhr.status || -1) + ",信息：" + (xhr.statusText || "-"));
                    option.error(xhr.status, xhr.statusText);//回调请求的状态和错误信息
                }
            }, complete: function (xhr, type) {
                //关闭“加载信息框”
                Modal.showLoading(false);
                if ("complete" in option && option.complete instanceof Function) {
                    option.complete(xhr, type);//回调请求的xhr信息和类型
                }
            }
        });
    };
    //全选和单选的绑定
    var setCheckboxListener = function (allCheck, radioChecks) {
        //筛选单选按钮组
        var radioValueEles = $(radioChecks);
        //点击全选时，同组按钮被同步
        $(document).delegate(allCheck, "click", function () {
            if (radioValueEles && radioValueEles.length > 0) {
                for (var _r = 0; _r < radioValueEles.length; _r++) {
                    radioValueEles[_r].checked = $(this).is(":checked");
                }
            }
        });
        //点击单选按钮时，
        $(document).delegate(radioChecks, "click", function () {
            $(allCheck)[0].checked = $(radioChecks + ":checked").length == $(radioChecks).length;
        });
    };
    var url = (function () {
        var get = function (name) {
            var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
            var r = window.location.search.substr(1).match(reg);
            if (r != null) return decodeURI(r[2]);
            return null;
        };
        /**
         * 根据参数列表长度进行判断，兼容IE9
         * @returns {string}
         */
        var set = function () {
            if (arguments.length === 1 && typeof arguments[0] === 'object') {//一个对象，使用key标记value
                var obj = arguments[0]
                    , search = location.search;
                for (var o in obj) {
                    if (obj.hasOwnProperty(o)) {
                        search = changeURLKeyValue(search, o, obj[o]);
                    }
                }
                if ('pushState' in history) {
                    history.pushState(null, document.title, search);
                } else if ('pushState' in History) {//ie9 不支持pushState方法,javascript.ejs中添加history.js完成html4对pushState的支持
                    History.pushState(null, null, search);//返回重新构造后search串
                }
            } else if (arguments.length === 2) {//key+value
                var key = arguments[0]
                    , value = arguments[1];
                if ('pushState' in history) {
                    history.pushState(null, document.title, changeURLKeyValue(location.toString(), key, value));
                } else if ('pushState' in History) {//ie9 不支持pushState方法,javascript.ejs中添加history.js完成html4对pushState的支持
                    History.pushState(null, null, changeURLKeyValue(location.search, key, value));//返回重新构造后search串
                }
            }
            function changeURLKeyValue(url, arg, arg_val) {
                var pattern = arg + '=([^&]*)';
                var replaceText = arg + '=' + arg_val;
                if (url.match(pattern)) {
                    var tmp = '/(' + arg + '=)([^&]*)/gi';
                    tmp = url.replace(eval(tmp), replaceText);
                    return tmp;
                } else {
                    if (url.match('[\?]')) {
                        return url + '&' + replaceText;
                    } else {
                        return url + '?' + replaceText;
                    }
                }
            }
        };
        return {
            get: get
            , set: set
        }
    }());
    var formatImage=function (path, size, ele) {
        if(path instanceof  Array && path.length>0){
            path = path[0];
        }
        var IMAGE_SIZE = {
            original: {
                path: "",
                size: ""
            },
            xlarge: {
                path: "_xlarge",
                size: "660*660"
            },
            large: {
                path: "_large",
                size: "420*420"
            },
            middle: {
                path: "_middle",
                size: "300*300"
            },
            small: {
                path: "_small",
                size: "240*240"
            },
            little: {
                path: "_little",
                size: "120*120"
            },
            micro: {
                path: "_micro",
                size: "60*60"
            }
        };
        size = IMAGE_SIZE[size || "middle"] || IMAGE_SIZE.middle;
        var pathTemp = /\.\w+?$/.exec(path);
        if (!pathTemp) {
            path += size.path;
        } else {
            path = (path.substr(0, pathTemp.index || path.length)) + size.path + pathTemp[0];
        }
        if (ele && ele.attr) {
            ele.attr("src", path);
        }
        return path;
    };
    return {
        ajax: ajax
        , getTimtout: _timeOut
        , setCheckboxListener: setCheckboxListener
        , url: url
        , formatImage: formatImage
    }
}());

exports.ajax = Fun.ajax;
exports.getTimeout = Fun.getTimtout;
exports.setCheckboxListener = Fun.setCheckboxListener;
exports.url = Fun.url;
exports.formatImage = Fun.formatImage;

},{}],6:[function(require,module,exports){
/**
 * Created by jeremy on 2016/2/24.
 * @version 1.0.0 created
 */

'use strict';

//构造信息框主体
var Modal = (function () {
    //构造原始类
    function M(m) {
        this.s = m.s;//是否显示
        this.id = m.id;
    }

    //构造标准show方法，用于继承
    M.prototype.show = function () {
        var ele = document.getElementById(this.id);
        if (ele) {
            if (this.s && !isShow()) {//显示当前隐藏
                ele.className = ele.className.replace("dp-n", "");
            } else if (!this.s && isShow()) {//隐藏当前显示
                ele.className += " dp-n";
            }
            //去除两边的空格
            ele.className = String(ele.className).trim();
        }
        function isShow() {//是否已显示，无class时显示
            return ele.className.split("dp-n").length == 1;
        }
    };

    //加载信息框
    var loading = (function () {
        //初始化生成加载信息框
        var init = function () {
            if (!document.getElementById("loading_modal_element")) {
                $('body').append('<div id="loading_modal_element" class="loading-modal-body dp-n"><div class="cover_modal_element"></div>' +
                    '<div class="loading-modal-image"></div>' +
                    '<div class="loading-modal-text">' +
                    '<h2>玩命加载中……</h2>' +
                    '</div></div>');
            }
            return false;
        };
        //显示、隐藏信息框
        var show = function (s) {
            s = typeof s == "undefined" ? true : s;//无参数显示信息框
            var m = new M({id: "loading_modal_element", s: s});
            m.show();
        };
        return {
            init: init
            , show: show
        }
    }());
    //弹出信息框
    var alert = (function () {
        var init = function () {
            if (!document.getElementById("alert_modal_element")) {
                $('body').append('<div id="alert_modal_element" class="alert-modal-element dp-n"><div class="cover_modal_element"></div>' +
                    '<div class="alert-modal-content">' +
                    '<div class="alert-modal-body"><span class="alert-modal-text"></span></div>' +
                    '<div class="alert-modal-footer"><button id="alert_modal_close" class="alert-modal-button">关闭</button></div>' +
                    '</div></div>');
            }
            return false;
        };
        var show = function (s) {
            s = typeof s == "undefined" ? true : s;
            var m = new M({id: "alert_modal_element", s: s});
            m.show();
        };
        /**
         * 设置弹出信息框
         * @param msg       显示的信息，支持html
         * @param sed       倒计时关闭时间，单位：second
         * @param callback  关闭触发回调函数
         */
        var set = function (msg, sed, callback) {
            var ele = document.getElementById("alert_modal_element");
            if (msg) {
                if (typeof msg === 'object') {//应对后端返回提示时使用Object封装
                    msg = JSON.stringify(msg);
                }
                if(ele){
                    ele.getElementsByClassName("alert-modal-text")[0].innerHTML = msg;
                }else{
                    init();
                    ele.getElementsByClassName("alert-modal-text")[0].innerHTML = msg;
                }
                show();
            }
            if (sed > 0) {
                setTimeout(function () {
                    show(false);
                }, 1000 * sed);
            }//无关闭时间或者关闭时间为0，不自动关闭
            //fixme 事件监听的ie兼容性
            //关闭按钮的事件侦听
            $("#alert_modal_close").on("click", function () {
                if (callback && callback instanceof Function) {
                    callback();
                }
                show(false);
                //阻止事件继续传递
                return false;
            });
        };
        return {
            init: init
            , show: show
            , set: set
        }
    }());
    //选择信息框
    var confirm = (function () {
        var init = function () {
            if (!document.getElementById("confirm_modal_element")) {
                $('body').append('<div id="confirm_modal_element" class="confirm-modal-element dp-n"><div class="cover_modal_element"></div>' +
                    '<div class="confirm-modal-content">' +
                    '<div id="confirm_modal_header" class="confirm-modal-header dp-n"></div>' +
                    '<div class="confirm-modal-body"><span id="confirm_modal_text" class="confirm-modal-text"></span></div>' +
                    '<div class="confirm-modal-footer">' +
                    '<div class="footer-button-success"><button class="confirm-modal-button  modal-success" data-confirm="success">确认</button></div>' +
                    '<div class="footer-button-false"><button class="confirm-modal-button" data-confirm="error">取消</button></div>' +
                    '</div></div></div>');
            }
            return false;
        };
        var show = function (s) {
            s = typeof s == "undefined" ? true : s;
            var m = new M({id: "confirm_modal_element", s: s});
            m.show();
        };
        /**
         * 设置选择信息框的内容
         * @param option    配置
         * {
         *      title:"头部显示的信息"
         *      ,text:"显示的提示信息"
         *      ,success:"点击成功后的回调"
         *      ,error:"点击失败后的回调"
         *      ,complete:"点击按钮后的整体回调"
         * }
         */
        var bar = 0;
        var set = function (option) {
            if (!option) {
                return false;
            }
            if ("title" in option && option.title.length > 0) {//有头部，则显示头部
                document.getElementById("confirm_modal_header").innerHTML = option.title;
            }
            if ("text" in option && option.text.length > 0) {//有内容，则显示整个选择信息框
                document.getElementById("confirm_modal_text").innerHTML = option.text;
            }
            //fixme 事件监听的ie兼容性
            //关闭按钮的事件侦听
            $("#confirm_modal_element").find(".confirm-modal-button").off("click").on("click", function () {
                //fixme .off("click")用于防止多次触发<--很玄学，我也不知道为什么，但是请不要修改。
                var atr = $(this).attr("data-confirm");//选择的按钮
                bar++;
                if (option && atr in option && option[atr] instanceof Function) {
                    option[atr]();
                }
                if (option && "complete" in option && option.complete instanceof Function) {
                    option.complete();//若有完成函数，则执行
                } else {//否则，关闭选择框
                    show(false);
                }
                //阻止事件继续传递
                //return false;
            });
        };
        return {
            init: init
            , show: show
            , set: set
        }
    }());
    //覆盖层
    var cover = (function () {
        var init = function () {
            if (!document.getElementById("cover_modal_element")) {
                $('body').append('<div id="cover_modal_element" class="cover-modal-element dp-n"></div>');
            }
            return false;
        };
        var hide = function () {
            document.getElementById("cover_modal_element").style.display = "none";
        };
        var show = function () {
            document.getElementById("cover_modal_element").style.display = "block";
        };
        return {
            init: init
            , show: show
            , hide: hide
        }
    }());
    return {
        initLoading: loading.init
        , showLoading: loading.show

        , initAlert: alert.init
        , showAlert: alert.show
        , setAlert: alert.set

        , initConfirm: confirm.init
        , setConfirm: confirm.set
        , showConfirm: confirm.show
        , initCover: cover.init
    }
}());

//页面加载完毕后生成四个自定义模态框
setTimeout(function () {
    //页面加载时生成一个覆盖层
    Modal.initCover();
    //页面加载时生成一个加载信息框
    Modal.initLoading();
    //页面加载时生成一个弹出信息框
    Modal.initAlert();
    //页面加载时生成一个选择信息框
    Modal.initConfirm();
}, 100);


//抛出上层调用
exports.showLoading = Modal.showLoading;
exports.setAlert = Modal.setAlert;
exports.showAlert = Modal.showAlert;
exports.setConfirm = Modal.setConfirm;
exports.showConfirm = Modal.showConfirm;
},{}],7:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/22.
 */
"use strict";
var head = function () {
    //时间格式化
    Date.prototype.Format = function (fmt) { //author: Jeremyyy
        var o = {
            "M+": this.getMonth() + 1, //月份
            "d+": this.getDate(), //日
            "h+": this.getHours(), //小时
            "m+": this.getMinutes(), //分
            "s+": this.getSeconds(), //秒
            "q+": Math.floor((this.getMonth() + 3) / 3), //季度
            "S": this.getMilliseconds() //毫秒
        };
        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
        for (var k in o)
            if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
        return fmt;
    };
    //返回顶部
    $(document).on('click', '.back-top', function () {
        $("html,body").animate({scrollTop:0},100);
        return false;
    });
    $(document).on('mouseenter', '.vip-part', function () {
        $(this).children('.vip-select').stop(true);
        $(this).children('.vip-select').slideDown(100);
        return false;
    });
    $(document).on('mouseleave', '.vip-part', function () {
        $(this).children('.vip-select').stop(true);
        $(this).children('.vip-select').slideUp(100);
        return false;
    });
    $(document).on('mouseenter', '.wechat-logo', function () {
        $(this).children('.big-wechat').fadeIn(200);
        return false;
    });
    $(document).on('mouseleave', '.wechat-logo', function () {
        $(this).children('.big-wechat').fadeOut(200);
        return false;
    });
};
module.exports.head = head;
},{}],8:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/22.
 */
"use strict";
var listener = (function () {
    var run = function () {
        //头部点击事件
        require('./head').head();
    };
    return {
        run: run
    }
}());
module.exports = listener;
},{"./head":7}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
