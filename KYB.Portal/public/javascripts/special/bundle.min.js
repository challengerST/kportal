(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/24.
 */
"use strict";

(function ($) {
    /**
     * 生成分页器
     * @param ele 需要添加分页器的元素
     * @param offset 偏移量，即从第data-offset开始
     * @param length 总记录条数
     * @param showPages 分页器显示的页数，超过则隐藏多余的页
     * @param rows 每页显示的记录条数
     */
    $.burster = function (ele, offset, length, showPages, rows) {
        offset = offset ? parseInt(offset) : 0;
        //将分页器装入table中
        if (length && length > offset) {
            var pageHtml = ""
                , ass = ""//清空需要装入的html
                , beforePages = Math.ceil(offset / rows)//需要显示的前页数/当前页
                , afterPages = Math.ceil((length - offset ) / rows)//需要显示的后页数
                , pages = Math.ceil(length / rows) //总页数
                , k = 0;
            //alert("总页数" + pages + " 前页数 " + beforePages + " 后页数 " + afterPages);
            //若页数小于showPages页，则全部显示
            if (pages >= 0 && pages <= showPages) {
                for (k = 0; k < pages; k++) {
                    if (k == beforePages) {
                        pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                    } else {
                        pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                    }
                }
            } else if (pages > showPages) {//总页数大于showPages页
                if (beforePages <= Math.ceil(showPages / 2) && afterPages > showPages + 1) {
                    for (k = 0; k < showPages; k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages <= Math.ceil(showPages / 2) && afterPages == showPages + 1) {
                    for (k = 0; k < showPages - 1; k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages <= Math.ceil(showPages / 2) && afterPages <= showPages) {
                    for (k = 0; k < showPages - 1; k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > Math.ceil(showPages / 2) && beforePages <= showPages && afterPages > showPages) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < beforePages + Math.ceil(showPages / 2); k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > showPages && afterPages > showPages) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < beforePages + Math.ceil(showPages / 2); k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > Math.ceil(showPages / 2) && beforePages <= pages && afterPages <= showPages && afterPages > Math.ceil(showPages / 2) + 1) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < beforePages + Math.ceil(showPages / 2); k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > pages && afterPages <= showPages && afterPages > Math.ceil(showPages / 2) + 1) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < beforePages + Math.ceil(showPages / 2); k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > Math.ceil(showPages / 2) && afterPages <= Math.ceil(showPages / 2) + 1) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < pages; k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                }
            }
            //判断"首页"和"末页"是否可点击
            var firstPage, lastPage;
            if (offset == 0) {//此时首页无法点击
                firstPage = '<li class="disabled"><a class="pages" data-offset="0">首页</a></li>';
                lastPage = '<li><a class="pages" data-offset="' + parseInt(parseInt((length % rows == 0 ? (length - 1) : length) / rows) * rows) + '" >末页</a></li>';
            } else if ((offset + rows) >= length) {//此时末页无法点击
                firstPage = '<li><a class="pages" data-offset="0">首页</a></li>';
                lastPage = '<li class="disabled"><a class="pages" data-offset="' + parseInt(parseInt((length % rows == 0 ? (length - 1) : length) / rows) * rows) + '">末页</a></li>';
            } else {
                firstPage = '<li><a class="pages" data-offset="0">首页</a></li>';
                lastPage = '<li><a class="pages" data-offset="' + parseInt(parseInt((length % rows == 0 ? (length - 1) : length) / rows) * rows) + '">末页</a></li>';
            }
            //判断"上一页"和"下一页"是否存在
            var upPage, downPage;
            if (offset == 0 || (offset < rows && (offset % rows != 0))) {
                upPage = "<li class='disabled'><a class='pages' func='previous' data-offset='" + parseInt(offset) + "' >上页</a></li>"
            } else {
                upPage = "<li><a class='pages' func='previous' data-offset='" + (parseInt(offset) - parseInt(rows)) + "' >上页</a></li>";
            }
            if (offset >= (length - rows)) {
                downPage = "<li class='disabled'><a class='pages' func='next' data-offset='" + parseInt(offset) + "'>下页</a></li>"
            } else {
                downPage = "<li><a class='pages' func='next' data-offset='" + parseInt(parseInt(offset) + parseInt(rows)) + "'>下页</a></li>"
            }
            if (pages != 1) {
                //分页部分
                ass += "<div id='pager' class='pager-info'>" +
                    "<h6 id='result' class='pager-record'>共有<span>" + length + "</span>条记录</h6>" +
                    "<ul class='pagination'>" + firstPage + upPage + pageHtml + downPage + lastPage + "</ul></div>";
                //table中注入拼装的记录
                ele.html(ass);
            } else {//无法分页清空分页器
                ele.html('');
            }
        }
    }
}(jQuery));
},{}],2:[function(require,module,exports){
/**
 * Created by jeremy on 2016/2/26.
 * @version 1.0.0 created 通用性功能方法
 */

'use strict';

var Fun = (function () {
    var _timeOut = 100000;//请求超时时间为10s
    /**
     * 封装ajax
     * @param option
     * {
     *      url:"请求的地址"
     *      ,method:"请求的方法"
     *      ,async:"是否并发"
     *      ,data:"发送的数据"
     *      ,success:"成功时回调"
     *      ,error:"失败/超时时回调"
     *      ,timeout:"超时时间"
     *      ,complete:"完成后的回调"
     * }
     */
    var ajax = function (option) {
        //ajax开始时应显示“加载信息框”
        Modal.showLoading();
        $.ajax({
            url: option.url
            , type: "type" in option && option.type || "GET"
            , timeout: option.timeout || _timeOut
            , data: "data" in option && option.data || {}
            , dataType: "json"
            , async: ("async" in option && option.async) ? true : false
            , success: function (json) {
                if ("status" in json && json.status > 0 && "data" in json) {
                    if ("success" in option) {
                        option.success(json.data);
                    } else {
                        Modal.setAlert("无success方法!");
                    }
                } else if ("error" in option && option.error instanceof Function) {
                    option.error(json);
                } else {
                    Modal.setAlert('操作失败!');
                }
            }, error: function (xhr) {//404或者超时
                if ("error" in option && option.error instanceof Function) {
                    //提示用户错误信息
                    Modal.showLoading(false);
                    Modal.setAlert("连接服务器失败，状态：" + (xhr.status || -1) + ",信息：" + (xhr.statusText || "-"));
                    option.error(xhr.status, xhr.statusText);//回调请求的状态和错误信息
                }
            }, complete: function (xhr, type) {
                //关闭“加载信息框”
                Modal.showLoading(false);
                if ("complete" in option && option.complete instanceof Function) {
                    option.complete(xhr, type);//回调请求的xhr信息和类型
                }
            }
        });
    };
    //全选和单选的绑定
    var setCheckboxListener = function (allCheck, radioChecks) {
        //筛选单选按钮组
        var radioValueEles = $(radioChecks);
        //点击全选时，同组按钮被同步
        $(document).delegate(allCheck, "click", function () {
            if (radioValueEles && radioValueEles.length > 0) {
                for (var _r = 0; _r < radioValueEles.length; _r++) {
                    radioValueEles[_r].checked = $(this).is(":checked");
                }
            }
        });
        //点击单选按钮时，
        $(document).delegate(radioChecks, "click", function () {
            $(allCheck)[0].checked = $(radioChecks + ":checked").length == $(radioChecks).length;
        });
    };
    var url = (function () {
        var get = function (name) {
            var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
            var r = window.location.search.substr(1).match(reg);
            if (r != null) return decodeURI(r[2]);
            return null;
        };
        /**
         * 根据参数列表长度进行判断，兼容IE9
         * @returns {string}
         */
        var set = function () {
            if (arguments.length === 1 && typeof arguments[0] === 'object') {//一个对象，使用key标记value
                var obj = arguments[0]
                    , search = location.search;
                for (var o in obj) {
                    if (obj.hasOwnProperty(o)) {
                        search = changeURLKeyValue(search, o, obj[o]);
                    }
                }
                if ('pushState' in history) {
                    history.pushState(null, document.title, search);
                } else if ('pushState' in History) {//ie9 不支持pushState方法,javascript.ejs中添加history.js完成html4对pushState的支持
                    History.pushState(null, null, search);//返回重新构造后search串
                }
            } else if (arguments.length === 2) {//key+value
                var key = arguments[0]
                    , value = arguments[1];
                if ('pushState' in history) {
                    history.pushState(null, document.title, changeURLKeyValue(location.toString(), key, value));
                } else if ('pushState' in History) {//ie9 不支持pushState方法,javascript.ejs中添加history.js完成html4对pushState的支持
                    History.pushState(null, null, changeURLKeyValue(location.search, key, value));//返回重新构造后search串
                }
            }
            function changeURLKeyValue(url, arg, arg_val) {
                var pattern = arg + '=([^&]*)';
                var replaceText = arg + '=' + arg_val;
                if (url.match(pattern)) {
                    var tmp = '/(' + arg + '=)([^&]*)/gi';
                    tmp = url.replace(eval(tmp), replaceText);
                    return tmp;
                } else {
                    if (url.match('[\?]')) {
                        return url + '&' + replaceText;
                    } else {
                        return url + '?' + replaceText;
                    }
                }
            }
        };
        return {
            get: get
            , set: set
        }
    }());
    var formatImage=function (path, size, ele) {
        if(path instanceof  Array && path.length>0){
            path = path[0];
        }
        var IMAGE_SIZE = {
            original: {
                path: "",
                size: ""
            },
            xlarge: {
                path: "_xlarge",
                size: "660*660"
            },
            large: {
                path: "_large",
                size: "420*420"
            },
            middle: {
                path: "_middle",
                size: "300*300"
            },
            small: {
                path: "_small",
                size: "240*240"
            },
            little: {
                path: "_little",
                size: "120*120"
            },
            micro: {
                path: "_micro",
                size: "60*60"
            }
        };
        size = IMAGE_SIZE[size || "middle"] || IMAGE_SIZE.middle;
        var pathTemp = /\.\w+?$/.exec(path);
        if (!pathTemp) {
            path += size.path;
        } else {
            path = (path.substr(0, pathTemp.index || path.length)) + size.path + pathTemp[0];
        }
        if (ele && ele.attr) {
            ele.attr("src", path);
        }
        return path;
    };

    var format = (function () {
        var formatamount = function(_value){
            return parseFloat(_value).toFixed(2);
        };
        //体积格式化小数点2位
        var formatvolume = function(_value){
            return parseFloat(_value).toFixed(3);
        };
        //重量格式化小数点2位
        var formatweight = function(_value){
            return parseFloat(_value).toFixed(3);
        };
        return {
            formatamount: formatamount
            , formatvolume: formatvolume
            , formatweight: formatweight
        }
    }());
    return {
        ajax: ajax
        , getTimtout: _timeOut
        , setCheckboxListener: setCheckboxListener
        , url: url
        , formatImage: formatImage
        , format: format
    }
}());

exports.ajax = Fun.ajax;
exports.getTimeout = Fun.getTimtout;
exports.setCheckboxListener = Fun.setCheckboxListener;
exports.url = Fun.url;
exports.format = Fun.format;
exports.formatImage = Fun.formatImage;

},{}],3:[function(require,module,exports){
/**
 * Created by jeremy on 2016/2/24.
 * @version 1.0.0 created
 */

'use strict';

//构造信息框主体
var Modal = (function () {
    //构造原始类
    function M(m) {
        this.s = m.s;//是否显示
        this.id = m.id;
    }

    //构造标准show方法，用于继承
    M.prototype.show = function () {
        var ele = document.getElementById(this.id);
        if (ele) {
            if (this.s && !isShow()) {//显示当前隐藏
                ele.className = ele.className.replace("dp-n", "");
            } else if (!this.s && isShow()) {//隐藏当前显示
                ele.className += " dp-n";
            }
            //去除两边的空格
            ele.className = String(ele.className).trim();
        }
        function isShow() {//是否已显示，无class时显示
            return ele.className.split("dp-n").length == 1;
        }
    };

    //加载信息框
    var loading = (function () {
        //初始化生成加载信息框
        var init = function () {
            if (!document.getElementById("loading_modal_element")) {
                $('body').append('<div id="loading_modal_element" class="loading-modal-body dp-n"><div class="cover_modal_element"></div>' +
                    '<div class="loading-modal-image"></div>' +
                    '<div class="loading-modal-text">' +
                    '<h2>玩命加载中……</h2>' +
                    '</div></div>');
            }
            return false;
        };
        //显示、隐藏信息框
        var show = function (s) {
            s = typeof s == "undefined" ? true : s;//无参数显示信息框
            var m = new M({id: "loading_modal_element", s: s});
            m.show();
        };
        return {
            init: init
            , show: show
        }
    }());
    //弹出信息框
    var alert = (function () {
        var init = function () {
            if (!document.getElementById("alert_modal_element")) {
                $('body').append('<div id="alert_modal_element" class="alert-modal-element dp-n"><div class="cover_modal_element"></div>' +
                    '<div class="alert-modal-content">' +
                    '<div class="alert-modal-body"><span class="alert-modal-text"></span></div>' +
                    '<div class="alert-modal-footer"><button id="alert_modal_close" class="alert-modal-button">关闭</button></div>' +
                    '</div></div>');
            }
            return false;
        };
        var show = function (s) {
            s = typeof s == "undefined" ? true : s;
            var m = new M({id: "alert_modal_element", s: s});
            m.show();
        };
        /**
         * 设置弹出信息框
         * @param msg       显示的信息，支持html
         * @param sed       倒计时关闭时间，单位：second
         * @param callback  关闭触发回调函数
         */
        var set = function (msg, sed, callback) {
            var ele = document.getElementById("alert_modal_element");
            if (msg) {
                if (typeof msg === 'object') {//应对后端返回提示时使用Object封装
                    msg = JSON.stringify(msg);
                }
                if(ele){
                    ele.getElementsByClassName("alert-modal-text")[0].innerHTML = msg;
                }else{
                    init();
                    ele.getElementsByClassName("alert-modal-text")[0].innerHTML = msg;
                }
                show();
            }
            if (sed > 0) {
                setTimeout(function () {
                    show(false);
                }, 1000 * sed);
            }//无关闭时间或者关闭时间为0，不自动关闭
            //fixme 事件监听的ie兼容性
            //关闭按钮的事件侦听
            $("#alert_modal_close").on("click", function () {
                if (callback && callback instanceof Function) {
                    callback();
                }
                show(false);
                //阻止事件继续传递
                return false;
            });
        };
        return {
            init: init
            , show: show
            , set: set
        }
    }());
    //选择信息框
    var confirm = (function () {
        var init = function () {
            if (!document.getElementById("confirm_modal_element")) {
                $('body').append('<div id="confirm_modal_element" class="confirm-modal-element dp-n"><div class="cover_modal_element"></div>' +
                    '<div class="confirm-modal-content">' +
                    '<div id="confirm_modal_header" class="confirm-modal-header dp-n"></div>' +
                    '<div class="confirm-modal-body"><span id="confirm_modal_text" class="confirm-modal-text"></span></div>' +
                    '<div class="confirm-modal-footer">' +
                    '<div class="footer-button-success"><button class="confirm-modal-button  modal-success" data-confirm="success">确认</button></div>' +
                    '<div class="footer-button-false"><button class="confirm-modal-button" data-confirm="error">取消</button></div>' +
                    '</div></div></div>');
            }
            return false;
        };
        var show = function (s) {
            s = typeof s == "undefined" ? true : s;
            var m = new M({id: "confirm_modal_element", s: s});
            m.show();
        };
        /**
         * 设置选择信息框的内容
         * @param option    配置
         * {
         *      title:"头部显示的信息"
         *      ,text:"显示的提示信息"
         *      ,success:"点击成功后的回调"
         *      ,error:"点击失败后的回调"
         *      ,complete:"点击按钮后的整体回调"
         * }
         */
        var bar = 0;
        var set = function (option) {
            if (!option) {
                return false;
            }
            if ("title" in option && option.title.length > 0) {//有头部，则显示头部
                document.getElementById("confirm_modal_header").innerHTML = option.title;
            }
            if ("text" in option && option.text.length > 0) {//有内容，则显示整个选择信息框
                document.getElementById("confirm_modal_text").innerHTML = option.text;
            }
            //fixme 事件监听的ie兼容性
            //关闭按钮的事件侦听
            $("#confirm_modal_element").find(".confirm-modal-button").off("click").on("click", function () {
                //fixme .off("click")用于防止多次触发<--很玄学，我也不知道为什么，但是请不要修改。
                var atr = $(this).attr("data-confirm");//选择的按钮
                bar++;
                if (option && atr in option && option[atr] instanceof Function) {
                    option[atr]();
                }
                if (option && "complete" in option && option.complete instanceof Function) {
                    option.complete();//若有完成函数，则执行
                } else {//否则，关闭选择框
                    show(false);
                }
                //阻止事件继续传递
                //return false;
            });
        };
        return {
            init: init
            , show: show
            , set: set
        }
    }());
    //覆盖层
    var cover = (function () {
        var init = function () {
            if (!document.getElementById("cover_modal_element")) {
                $('body').append('<div id="cover_modal_element" class="cover-modal-element dp-n"></div>');
            }
            return false;
        };
        var hide = function () {
            document.getElementById("cover_modal_element").style.display = "none";
        };
        var show = function () {
            document.getElementById("cover_modal_element").style.display = "block";
        };
        return {
            init: init
            , show: show
            , hide: hide
        }
    }());
    return {
        initLoading: loading.init
        , showLoading: loading.show

        , initAlert: alert.init
        , showAlert: alert.show
        , setAlert: alert.set

        , initConfirm: confirm.init
        , setConfirm: confirm.set
        , showConfirm: confirm.show
        , initCover: cover.init
    }
}());

//页面加载完毕后生成四个自定义模态框
setTimeout(function () {
    //页面加载时生成一个覆盖层
    Modal.initCover();
    //页面加载时生成一个加载信息框
    Modal.initLoading();
    //页面加载时生成一个弹出信息框
    Modal.initAlert();
    //页面加载时生成一个选择信息框
    Modal.initConfirm();
}, 100);


//抛出上层调用
exports.showLoading = Modal.showLoading;
exports.setAlert = Modal.setAlert;
exports.showAlert = Modal.showAlert;
exports.setConfirm = Modal.setConfirm;
exports.showConfirm = Modal.showConfirm;
},{}],4:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/22.
 */
"use strict";
var head = function () {
    //时间格式化
    Date.prototype.Format = function (fmt) { //author: Jeremyyy
        var o = {
            "M+": this.getMonth() + 1, //月份
            "d+": this.getDate(), //日
            "h+": this.getHours(), //小时
            "m+": this.getMinutes(), //分
            "s+": this.getSeconds(), //秒
            "q+": Math.floor((this.getMonth() + 3) / 3), //季度
            "S": this.getMilliseconds() //毫秒
        };
        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
        for (var k in o)
            if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
        return fmt;
    };
    //返回顶部
    $(document).on('click', '.back-top', function () {
        $("html,body").animate({scrollTop:0},100);
        return false;
    });
    $(document).on('mouseenter', '.vip-part', function () {
        $(this).children('.vip-select').stop(true);
        $(this).children('.vip-select').slideDown(100);
        return false;
    });
    $(document).on('mouseleave', '.vip-part', function () {
        $(this).children('.vip-select').stop(true);
        $(this).children('.vip-select').slideUp(100);
        return false;
    });
    $(document).on('mouseenter', '.wechat-logo', function () {
        $(this).children('.big-wechat').fadeIn(200);
        return false;
    });
    $(document).on('mouseleave', '.wechat-logo', function () {
        $(this).children('.big-wechat').fadeOut(200);
        return false;
    });
};
module.exports.head = head;
},{}],5:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/22.
 */
"use strict";
var listener = (function () {
    var run = function () {
        //头部点击事件
        require('./head').head();
    };
    return {
        run: run
    }
}());
module.exports = listener;
},{"./head":4}],6:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/24.
 */
"use strict";
var Data = (function () {
  var company = function (data, callback) {
    var _data = {};
    $.ajax({
      url: '/api/airline/company'
      , type: 'post'
      , data: data
      , dataType: 'json'
      , timeout: 100000
      , success: function (json) {
        if (json && "resCode" in json) {
          _data = json;
        } else {
          _data = {};
        }
      }, complete: function () {
        if (callback && callback instanceof Function) {
          callback(_data);
        }
      }
    });
  };
  var getArea = function (data, callback) {
    var _data = {};
    $.ajax({
      url: '/api/airline/getArea'
      , type: 'post'
      , data: data
      , dataType: 'json'
      , timeout: 100000
      , success: function (json) {
        if (json && "resCode" in json) {
          _data = json;
        } else {
          _data = {};
        }
      }, complete: function () {
        if (callback && callback instanceof Function) {
          callback(_data);
        }
      }
    });
  };
  var detail = function (data, callback) {
    var _data = {};
    $.ajax({
      url: '/api/airline/detail'
      , type: 'post'
      , data: data
      , dataType: 'json'
      , timeout: 100000
      , success: function (json) {
        if (json && "resCode" in json) {
          _data = json;
        } else {
          _data = {};
        }
      }, complete: function () {
        if (callback && callback instanceof Function) {
          callback(_data);
        }
      }
    });
  };
  var calculate = function (data, callback) {
    var _data = {};
    $.ajax({
      url: '/api/airline/calculate'
      , type: 'post'
      , data: data
      , dataType: 'json'
      , timeout: 100000
      , success: function (json) {
        if (json && "resCode" in json) {
          _data = json;
        } else {
          _data = {};
        }
      }, complete: function () {
        if (callback && callback instanceof Function) {
          callback(_data);
        }
      }
    });
  };
  var order = function (data, callback) {
    var _data = {};
    $.ajax({
      url: '/api/order/submit'
      , type: 'post'
      , data: data
      , dataType: 'json'
      , timeout: 100000
      , success: function (json) {
        if (json && "resCode" in json) {
          _data = json;
        } else {
          _data = {};
        }
      }, complete: function () {
        if (callback && callback instanceof Function) {
          callback(_data);
        }
      }
    });
  };
  var extra = function (data, callback) {
    var _data = {};
    $.ajax({
      url: '/api/airline/extra'
      , type: 'post'
      , data: data
      , dataType: 'json'
      , timeout: 100000
      , success: function (json) {
        if (json && "resCode" in json) {
          _data = json;
        } else {
          _data = {};
        }
      }, complete: function () {
        if (callback && callback instanceof Function) {
          callback(_data);
        }
      }
    });
  };
  var history = function (data, callback) {
    var _data = {};
    $.ajax({
      url: '/api/airline/history'
      , type: 'post'
      , data: data
      , dataType: 'json'
      , timeout: 100000
      , success: function (json) {
        if (json && "resCode" in json) {
          _data = json;
        } else {
          _data = {};
        }
      }, complete: function () {
        if (callback && callback instanceof Function) {
          callback(_data);
        }
      }
    });
  };
  //费用数据引入
  var expenseTex = function (data, callback) {
    var _data = {};
    $.ajax({
      url: '/api/airline/expensetExmplate'
      , type: 'post'
      , data: data
      , dataType: 'json'
      , timeout: 100000
      , success: function (json) {
        if (json && "resCode" in json) {
          _data = json;
        } else {
          _data = {};
        }
      }, complete: function () {
        if (callback && callback instanceof Function) {
          callback(_data);
        }
      }
    });
  };
  return {
    company: company
    , detail: detail
    , getArea: getArea
    , calculate: calculate
    , order: order
    , extra: extra
    , history: history
    ,expenseTex : expenseTex
  }
}());
module.exports.Data = Data;
},{}],7:[function(require,module,exports){
/**
 * Created by Auser on 2016/11/29.
 */
"use strict";
var Dom = (function () {
    var renderTr = function (json, country) {
        var str = '';
        for (var j in json) {
            if (json.hasOwnProperty(j)) {
                var d = json[j], data;
                data = render(d, j);
                str += ' <button class="collapse-btn" data-toggle="collapse" data-target="' + (j ? j : 'null') + '"> <span class="big dp-b fl-l">' + (j ? j : '直达') + '</span> <span class="big dp-b fl-l">' + (j ? '中转' : '') + '</span> <span class="dp-b fl-l">（' + data.n + '个目的港）</span> <span class="dp-b fl-r open">' + (j ? '+展开' : '-折叠') + '</span> </button>'
                str += data.str;
            }
        }
        $('.step4').find('.bd').html(str);
        $('.sg-end').tooltip();
        $('.s-lf').tooltip();
        function render(arr, j) {
            var str = '', n = 0;
            str += ' <div class="end-body collapse fill' + (j ? '' : ' in') + '" id="' + (j ? j : 'null') + '">';

            for (var a in arr) {
                if (arr.hasOwnProperty(a)) {
                    var data = arr[a];
                    str += '<div class="part fill' + (a ? ' add' : '') + '">';
                    str += a ? '<div class="lf"><span class="s-lf" data-original-title="' + (a in country ? country[a].NameCn : a) + '">' + a + '</span></div>' : '';
                    str += '<div class="rt fill">';
                    for (var b in data) {
                        if (data.hasOwnProperty(b)) {
                            n += 1;
                            var d = data[b];
                            str += '<span' + (d.destPortName ? ' data-original-title="' + d.destPortName + '"' : '') + ' class="sg-end" data-limit="' + d.flightDay.join(',') + '" data-val="' + d.airwayId + '">' + d.destPortCode + '</span>';
                        }
                    }
                    str += '</div></div>';
                }
            }
            str += '</div>';
            return {
                str: str
                , n: n
            };
        }
    };
    return {
        renderTr: renderTr
    }
}());
module.exports.Dom = Dom;
},{}],8:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/23.
 */
"use strict";

require('../general').run();
require('./listener').run();
},{"../general":5,"./listener":9}],9:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/22.
 */
"use strict";
require('../frame/burster');
var url = require('../frame/function').url;
var Modal = require('../frame/modal');
var country = require('../../../utils/country/country').country;
var tempId;
var countryObj = {};
for (var c in country) {
    if (country.hasOwnProperty(c)) {
        countryObj[country[c].Code] = country[c];
    }
}
var Listener = (function () {
    var Data = require('./data').Data
        , Dom = require('./dom').Dom;
    var lines = {};
    var order = {};
    //报价单数据
    var dlData = {
        dchy: ''
        , qyg: ''
        , mdg: ''
        , hkgs: ''
        , qfrq: ''
        , hc: ''
        , pm: ''
        , ygzl: ''
        , ygtj: ''
        , ygjs: ''
        , dj: ''
        , zj: ''
        , tzr: {}
        , btzr: {}
    };
    var listener = function () {
        $('#datetimepicker').datetimepicker({
            format: 'yyyy-mm-dd',//日期的格式
            startDate: new Date(),//选择器的开始日期
            autoclose: true,//日期选择完成后是否关闭选择框
            bootcssVer: 3,//显示向左向右的箭头
            language: 'zh-CN',//语言
            minView: "month"//表示日期选择的最小范围，默认是hour
        }).on('changeDate', function (e) {
            dlData['qfrq'] = new Date(e.date).Format('yyyy-MM-dd');
            $('#right-time').val(e.date.Format('yyyy-MM-dd'));
            var week = new Date(e.date).getDay();
            week = week == 0 ? '7' : week + '';
            $('.sg-end').each(function () {
                var arr = $(this).data('limit').split(',');
                if (arr.indexOf(week) >= 0) {
                    $(this).removeClass('disabled');
                    $(this).show();
                    $(this).removeClass('active');
                    $('#right-end').val('');
                    $('#trans-line').val('');
                } else {
                    $(this).removeClass('active');
                    $('#right-end').val('');
                    $(this).addClass('disabled');
                    $(this).hide();
                }
            });
            $('.step4').find('.bd').removeClass('dp-n');
            $('.step5').find('.bd').addClass('dp-n');
        });
        $(document).on('click', '.sel-c', function () {
            dlData['hkgs'] = $(this).data('val');
            if (!$(this).hasClass('active')) {
                $(this).addClass('active');
                $(this).siblings().removeClass('active');
                $('#right-com').val($(this).text());
                $('#right-start').val('');
                $('#right-end').val('');
                $('#trans-line').val('');
                $('#right-time').val('');
                var str = ''
                    , arr = lines[$(this).data('val')].airwayGroup;
                //分泡比例
                var fp=lines[$(this).data('val')].bulkyRate;
                console.log($(this).data('val'));
                console.log(fp);
                var newFp=(fp*10)+'/'+(10-(fp*10));
                $('#fp').val(newFp);
                tempId=lines[$(this).data('val')].templateId;
                for (var a in arr) {
                    if (arr.hasOwnProperty(a)) {
                        var d = arr[a];
                        str += '<span class="sel-s" data-original-title="' + d.deptPortName + (d.domesticPort ? '(' + d.domesticPortName + '中转)' : '') + '" data-expire="' + d.expireDate + '" data-dept="' + d.deptPort + '" data-domestic="' + d.domesticPort + '">' + d.deptPort + (d.domesticPort ? ' （' + d.domesticPort + '中转）' : '') + '</span>';
                    }
                }
                $('.step2').find('.bd').html(str).removeClass('dp-n');
                $('.step3').find('.bd').addClass('dp-n');
                $('.step4').find('.bd').addClass('dp-n');
                $('.step5').find('.bd').addClass('dp-n');
                $(".sel-s").tooltip();
            }
        });
        $(document).on('click', '.sel-s', function () {
            dlData['qyg'] = $(this).data('dept');
            if (!$(this).hasClass('active')) {
                $(this).addClass('active');
                $(this).siblings().removeClass('active');
                $('#right-start').val($(this).text());
                $('#right-end').val('');
                $('#trans-line').val('');
                $('#right-time').val('');
                var expire = $(this).data('expire');
                var ele = $('#datetimepicker');
                ele.datetimepicker('setEndDate', new Date(expire.replace(/-/g, "/")));
                ele.datetimepicker('setInitialDate', new Date());
                ele.find('.day.active').removeClass('active');
                var data = {
                    "companyId": 0,
                    "airCompanyCode": $('#right-com').val(),
                    "deptCode": $(this).data('dept'),
                    "domesticPort": $(this).data('domestic')
                };
                Data.getArea(data, function (json) {
                    if (json && 'resCode' in json && json.resCode == 0 && json.resBody) {
                        Dom.renderTr(json.resBody, countryObj);
                        $('.step3').find('.bd').removeClass('dp-n');
                        $('.step4').find('.bd').addClass('dp-n');
                        $('.step5').find('.bd').addClass('dp-n');
                    }
                });
            }
        });
        $(document).on('click', '.sg-end', function () {
            dlData['mdg'] = $(this).html();
            if (!$(this).hasClass('active')) {
                if (!$(this).hasClass('disabled')) {
                    $('.step4').find('.sg-end').removeClass('active');
                    $(this).addClass('active');
                    $('#right-end').val($(this).text());
                    Data.detail({id: $(this).data('val')}, function (json) {
                        if (json && 'resCode' in json && json.resCode == 0 && json.resBody) {
                            order = json.resBody;
                            var data = json.resBody.airwayPrice && json.resBody.airwayPrice.rate || [];
                            var str = '';
                            var tb = '';
                            for (var d in data) {
                                if (data.hasOwnProperty(d)) {
                                    var x = data[d];
                                    str += '<a href="javascript:void(0);">1:' + x.proportion + '</a>';
                                }
                            }
                            var transport = '';
                            if (order.transPort) {
                                var arr = order.transPort;
                                for (var i = 0; i < arr.length; i++) {
                                    transport += arr[i].portCode + (i == arr.length - 1 ? '' : ' -> ');
                                }
                            }
                            dlData['hc'] = transport;
                            $('#trans-line').val(transport);
                            $('.info-top').find('.weight').html(str);

                            for (var a = 0; a < data.length; a++) {
                                var dt = data[a];
                                var p = dt.policy || {};
                                var temp = '';
                                if (a == 0) {
                                    temp = '<a class="show-history" href="javascript:void(0);">查看历史报价</a>';
                                }
                                tb += '<tr><td>' + (dt.proportion == 1 ? '/' : '1:' + dt.proportion) + '</td><td>' + dt.min + '</td>' +
                                    '<td class="ta-r">' + (p['45'].toFixed(2) || '/') + '</td><td class="ta-r">' + (p['100'].toFixed(2) || '/') + '</td>' +
                                    '<td class="ta-r">' + (p['300'].toFixed(2) || '/') + '</td><td class="ta-r">' + (p['500'].toFixed(2) || '/') + '</td><td class="ta-r">' + (p['1000'].toFixed(2) || '/') + '</td><td>' + temp + '</td></tr>';
                            }
                            $('.left-tb-price').find('tbody').html(tb);
                            $('.detail-bz').find('.body').html(order.remarks || '/');
                            $('.limit-remark').html(order.limtRemark);
                            if (order.limtRemark) {
                                $('.limit-remark').removeClass('dp-n');
                            } else {
                                $('.limit-remark').addClass('dp-n');
                            }

                            //$('.tbmin').html(data[0]['min'] || 0);
                            //$('.tb-bz').html(order.remarks || '/');
                            //$('.tb45').html((data.length > 0 && data[0]['policy']['45']) || 0);
                            //$('.tb100').html((data.length > 0 && data[0]['policy']['100']) || 0);
                            //$('.tb300').html((data.length > 0 && data[0]['policy']['300']) || 0);
                            //$('.tb500').html((data.length > 0 && data[0]['policy']['500']) || 0);
                            //$('.tb1000').html((data.length > 0 && data[0]['policy']['1000']) || 0);
                            $('.step5').find('.bd').removeClass('dp-n');
                        }
                    });
                }
            }
        });
        $(document).on('blur', '#vol,#wei,#num', function () {
            var vol = $('#vol').val()
                , wei = $('#wei').val()
                , id = $('.sg-end.active').data('val')
                , sum = $('#num').val();
            dlData['ygzl'] = (wei || 0);
            dlData['ygtj'] = (vol || 0);
            dlData['ygjs'] = (sum || 0);
            if (vol && wei && id) {
                var data = {
                    "cargoSize": vol,
                    "cargoWeight": wei,
                    "airwayId": id,
                    "cargoCount": sum,
                    "customDeclare": $('#custom').find('option:selected').val() == 1
                };
                Data.calculate(data, function (json) {
                    if (json && 'resCode' in json && json.resCode == 0 && json.resBody) {
                        var data = json.resBody.airwayFee
                            , sf = json.resBody.serviceFee
                            , str = '';
                        dlData['zj'] = json.resBody.totalFee;
                        dlData['dj'] = data.chargingUnitPrice;
                        $('.right-price').find('td').removeClass('active');

                        if (data.minCharge) {
                            $('.c-min').addClass('active');
                        } else {
                            $('.c-' + data.chargingLevel).addClass('active');
                        }

                        $('.c-price').find('.c-bz').html(data['policy']['proportion'] == 1 ? '/' : '1:' + data['policy']['proportion']);
                        $('.c-price').find('.c-min').html(data['policy']['min']);
                        $('.c-price').find('.c-45').html(data['policy']['policy']['45']);
                        $('.c-price').find('.c-100').html(data['policy']['policy']['100']);
                        $('.c-price').find('.c-300').html(data['policy']['policy']['300']);
                        $('.c-price').find('.c-500').html(data['policy']['policy']['500']);
                        $('.c-price').find('.c-1000').html(data['policy']['policy']['1000']);

                        $('.get-price').html(json.resBody.totalFee);
                        $('.single-fee').html(data.chargingUnitPrice);
                        $('.price-wei').html(data.chargingWeight);
                        $('.get-zj').html('CNY ' + json.resBody.totalFee);
                        $('.get-kyf').html('CNY ' + data.chargingTotal);
                        $('i.get-kyf').html('空运费');
                        $('i.get-dj').html(data.chargingUnitPrice);
                        $('.get-zl').html(data.chargingWeight + (data.chargingWeight == data.cargo.chargingWeight ? '' : '（自动靠级）') + (data.minCharge ? '（最低运费 ' + data['policy']['min'] + ' ）' : ''));

                        for (var s in sf) {
                            if (sf.hasOwnProperty(s)) {
                                var d = sf[s];
                                str += '<p><span class="title">' + d.itemName + '</span><span class="body">CNY ' + d.itemTotal + '</span></p>';
                            }
                        }
                        $('.operate').find('.p-body').html(str);
                        $('.price-pt').removeClass('dp-n');
                    }
                });
            }
        });
        $(document).on('change', '#custom', function () {
            var vol = $('#vol').val()
                , wei = $('#wei').val()
                , id = $('.sg-end.active').data('val');
            if (vol && wei && id) {
                var data = {
                    "cargoSize": vol,
                    "cargoWeight": wei,
                    "airwayId": id,
                    "cargoCount": $('#num').val(),
                    "customDeclare": $('#custom').find('option:selected').val() == 1
                };
                Data.calculate(data, function (json) {
                    if (json && 'resCode' in json && json.resCode == 0 && json.resBody) {
                        var data = json.resBody.airwayFee
                            , sf = json.resBody.serviceFee
                            , str = '';
                        dlData['zj'] = json.resBody.totalFee;
                        dlData['dj'] = data.chargingUnitPrice;
                        $('#ygzj').val(data.chargingTotal);
                        $('.right-price').find('td').removeClass('active');
                        $('.c-' + data.chargingLevel).addClass('active');
                        $('.c-price').find('.c-45').html(data['policy']['policy']['45']);
                        $('.c-price').find('.c-100').html(data['policy']['policy']['100']);
                        $('.c-price').find('.c-300').html(data['policy']['policy']['300']);
                        $('.c-price').find('.c-500').html(data['policy']['policy']['500']);
                        $('.c-price').find('.c-1000').html(data['policy']['policy']['1000']);

                        $('.get-zj').html('CNY ' + json.resBody.totalFee);
                        $('.get-kyf').html('CNY ' + data.chargingTotal);
                        $('i.get-kyf').html('空运费');


                        $('i.get-dj').html(data.chargingUnitPrice);

                        $('.get-zl').html(data.chargingWeight + (data.chargingWeight == data.cargo.chargingWeight ? '' : '（自动靠级）'));

                        for (var s in sf) {
                            if (sf.hasOwnProperty(s)) {
                                var d = sf[s];
                                str += '<p><span class="title">' + d.itemName + '</span><span class="body">CNY ' + d.itemTotal + '</span></p>';
                            }
                        }
                        $('.operate').find('.p-body').html(str);
                        $('.price-pt').removeClass('dp-n');
                    }
                });
            }
        });
        $(document).on('focus', '#vol,#wei,#num', function () {
            $('.top-img').find('.step4').addClass('doing');
        });
        $(document).on('blur', '#name', function () {
            var val = $(this).val();
            if (val == '' || new RegExp("^[ ]+$").test(val)) {
                $(this).val('consol');
            }
            dlData.pm = $(this).val();
        });
        $(document).on('click', '.close-btn', function () {
            $('.white-back').addClass('dp-n');
            $('.show-part').addClass('dp-n');
        });
        $(document).on('click', '.show-price', function () {
            $('.white-back').removeClass('dp-n');
            $('.price-list').removeClass('dp-n');
        });
        $(document).on('click', '.show-other', function () {
             extraInit();
             //提前加載是為了提升性能，數據加载不出来的时候不会出现空白的情况，先加载数据在显示表格。
            var ele = $('.other-list');
            var height = 50;
            height += ele.find('tr').length * 30;
            ele.css('margin-top', '-' + parseInt(height / 2) + 'px');
            $('.white-back').removeClass('dp-n');
            ele.removeClass('dp-n');
        });
        $(document).on('click', '#submit', function () {
            var code = $('#right-com').val()
                , start = $('#right-start').val()
                , end = $('#right-end').val()
                , dt = $('#right-time').val() + ' 00:00:00'
                , size = $('#vol').val()
                , weight = $('#wei').val()
                , num = $('#num').val();
            if (code && start && end && dt && size && weight && num) {
                $('input').removeClass('warm');
                var data = {
                    "memberId": 0,
                    "agentCompanyId": order.companyId,
                    "airwayId": order.airwayId,
                    "deptCode": order.deptPortCode,
                    "destCode": order.destPortCode,
                    "flightDate": dt,
                    "arrivalDate": "",
                    "airCompanyCode": code,
                    "cargoName": $('#name').val(),
                    "cargoType": $('#danger').find('option:selected').val(),
                    "cargoCount": num,
                    "cargoWeight": weight,
                    "cargoSize": size,
                    "customDeclare": $('#custom').find('option:selected').val() == 1
                };
                Data.order(data, function (json) {
                    if (json && 'resCode' in json && json.resCode == 0) {
                        location.href = '/order';
                    } else if (json && 'resCode' in json && json.resCode == -100) {
                        location.href = "/login";
                    } else {
                        Modal.setAlert(json.resMsg || '委托失败，请重试！');
                    }
                });
            } else {
                if (!code) {
                    $('#right-com').addClass('warm');
                    return false;
                } else {
                    $('#right-com').removeClass('warm');
                }
                if (!start) {
                    $('#right-start').addClass('warm');
                    return false;
                } else {
                    $('#right-start').removeClass('warm');
                }
                if (dt == ' 00:00:00') {
                    $('#right-time').addClass('warm');
                    return false;
                } else {
                    $('#right-time').removeClass('warm');
                }
                if (!end) {
                    $('#right-end').addClass('warm');
                    return false;
                } else {
                    $('#right-end').removeClass('warm');
                }
                if (!num) {
                    $('#num').addClass('warm');
                    return false;
                } else {
                    $('#num').removeClass('warm');
                }
                if (!weight) {
                    $('#wei').addClass('warm');
                    return false;
                } else {
                    $('#wei').removeClass('warm');
                }
                if (!size) {
                    $('#vol').addClass('warm');
                    return false;
                } else {
                    $('#vol').removeClass('warm');
                }
            }
        });
        $(document).on('click', '.show-history', function () {
            var ele = $('.sg-end.active');
            if (ele.length > 0 && ele.data('val')) {
                var show = $('.history-part');
                show.find('.h-qsg').html($('#right-start').val());
                show.find('.h-mdg').html($('#right-end').val());
                show.find('.h-hkgs').html($('#right-com').val());
                show.find('.h-hxlg').html($('#trans-line').val());
                Data.history({id: ele.data('val')}, function (json) {
                    var str = '';
                    if (json && 'resBody' in json && json.resBody instanceof Array && json.resBody.length > 0) {
                        var arr = json.resBody;
                        for (var a in arr) {
                            if (arr.hasOwnProperty(a)) {
                                var d = arr[a];
                                str += ' <tr> <td>' + (d.airwayPrice.rate[0].policy['45'] || '/') + '</td> <td>' + (d.airwayPrice.rate[0].policy['100'] || '/') + '</td>' +
                                    ' <td>' + (d.airwayPrice.rate[0].policy['300'] || '/') + '</td> <td>' + (d.airwayPrice.rate[0].policy['500'] || '/') + '</td>' +
                                    ' <td>' + (d.airwayPrice.rate[0].policy['1000'] || '/') + '</td> <td>' + new Date(d.modifyDt).Format('yyyy-MM-dd hh:mm') + '</td></tr>';
                            }
                        }
                    } else {
                        str = ' <tr><td colspan="6">暂无历史报价</td></tr>';
                    }
                    show.find('tbody').html(str);
                    $('.white-back').removeClass('dp-n');
                    show.removeClass('dp-n');
                });
            }
        });
        $(document).on('click', '.collapse-btn', function () {
            $('#' + $(this).data('target')).collapse('toggle');
            var ele = $(this).find('.open');
            ele.html(ele.html() == '+展开' ? '-折叠' : '+展开');
        });
    };
    var calculate = function () {
        $(document).on('click', '.calculate-logo', function () {
            $(this).siblings('.add-part').removeClass('dp-n');
        });
        $(document).on('click', function (event) {
            var evt = event.srcElement ? event.srcElement : event.target;
            if ($(evt).hasClass('add-part') || $(evt).hasClass('calculate-logo') || $(evt).parents('.add-part').length > 0) {
                return '';
            } else {
                $('.add-part').addClass('dp-n');
            }
        });
        $(document).on('click', '.multi-calcu', function () {
            $('#vol').val(parseFloat($('#long').val() || 0) * parseFloat($('#width').val() || 0) * parseFloat($('#height').val() || 0) * parseFloat($('#sum-num').val() || 0));
            $('.add-part').addClass('dp-n');
        });
    };
    var init = function () {
        Data.company('', function (json) {
            var str = '';
            if (json && 'resCode' in json && json.resCode == 0 && json.resBody) {
                lines = json.resBody;
            }
            for (var l in lines) {
                if (lines.hasOwnProperty(l)) {
                    var d = lines[l];
                    str += '<span class="sel-c" data-original-title="' + d.airCompanyName + '" data-val="' + l + '">' + d.airCompanyCode + '</span>';
                }
            }
            $('.step1').find('.bd').html(str).removeClass('dp-n');
            $(".sel-c").tooltip();
        });
    };
    //费用的引入
    var extraInit = function () {
        var data = {
            templ:tempId
        };
        Data.expenseTex(data, function (json) {
            var arr =[];
            var str ='';
            if (json && 'resCode' in json && json.resCode == 0) {
                if(json.resBody && 'expenseTemplate' in json.resBody ){
                   arr=json.resBody['expenseTemplate'];
                   //刚开始的时候是返回的是对象所以即使调用属性名还是无法识别，所以使用这种方法。
                }
                for (var a in arr) {
                    if (arr.hasOwnProperty(a)) {
                        var d = arr[a];
                        str += '<tr><td>' + d.itemName + '</td><td>' + d.itemPrice + '</td><td>' + (d.itemRemark || '/') + '</td></tr>'
                    }
                }
                $('.other-list').find('tbody').html(str);
            }
        });
    };
    var download = function () {
        $(document).on('click', '.dl-pdf', function () {
            dlData.pm = $('#name').val();
            $.ajax({
                url: '/api/down/bjd'
                , type: 'post'
                , data: {d: dlData, name: '报价单'}
                , dataType: 'json'
                , timeout: 100000
                , success: function (json) {
                    if ('status' in json && json.status == 1) {
                        window.open("/getImgCode/bjd");
                    }
                }
            });
        });
    };
    //右侧始终显示
    var scl = function () {
        function scrollUnique(ele) {
            return $(ele).each(function () {
                var eventType = 'mousewheel';
                // 火狐是DOMMouseScroll事件
                if (document.mozHidden !== undefined) {
                    eventType = 'DOMMouseScroll';
                }
                $(ele).on(eventType, function (event) {
                    // 一些数据
                    var scrollTop = this.scrollTop,
                        scrollHeight = this.scrollHeight,
                        height = this.clientHeight;

                    var delta = (event.originalEvent.wheelDelta) ? event.originalEvent.wheelDelta : -(event.originalEvent.detail || 0);
                    if ((delta > 0 && scrollTop <= delta) || (delta < 0 && scrollHeight - height - scrollTop <= -1 * delta)) {
                        // IE浏览器下滚动会跨越边界直接影响父级滚动，因此，临界时候手动边界滚动定位
                        this.scrollTop = delta > 0 ? 0 : scrollHeight;
                        // 向上滚 || 向下滚
                        event.preventDefault();
                    }
                });
            });
        }

        $(document).on('scroll', function () {
            var ele = $("#scroll-right");
            var lEle = $("#scroll-left");
            var oTop = lEle.offset().top;
            var sTop = $(document).scrollTop();
            if (oTop - sTop < 5) {
                if (ele.css('position') != 'fixed') {
                    ele.addClass('fixed-ele');
                }
            } else {
                if (ele.css('position') != 'absolute') {
                    ele.removeClass('fixed-ele');
                }
            }
        });
        scrollUnique("#scroll-right");
    };

    var run = function () {
        listener();
        calculate();
        init();
        download();
        scl();
    };
    return {
        run: run
    }
}());
module.exports = Listener;
},{"../../../utils/country/country":10,"../frame/burster":1,"../frame/function":2,"../frame/modal":3,"./data":6,"./dom":7}],10:[function(require,module,exports){
/**
 * Created by Administrator on 2017/5/26.
 */

module.exports = {
    country: [{"NameCn": "\u5b89\u9053\u5c14", "NameEn": "Andorra", "Code": "AD"},
        {"NameCn": "\u963f\u8054\u914b", "NameEn": "United Arab Emirates", "Code": "AE"},
        {"NameCn": "\u963f\u5bcc\u6c57", "NameEn": "Afghanistan", "Code": "AF"},
        {"NameCn": "\u5b89\u63d0\u74dc\u548c\u5df4\u5e03\u8fbe", "NameEn": "Antigua and Barbuda", "Code": "AG"},
        {"NameCn": "\u5b89\u572d\u62c9", "NameEn": "Anguilla", "Code": "AI"},
        {"NameCn": "\u963f\u5c14\u5df4\u5c3c\u4e9a", "NameEn": "Albania", "Code": "AL"},
        {"NameCn": "\u4e9a\u7f8e\u5c3c\u4e9a", "NameEn": "Armenia", "Code": "AM"},
        {"NameCn": "\u8377\u5c5e\u5b89\u7684\u5217\u65af", "NameEn": "Netherlands Antilles", "Code": "AN"},
        {"NameCn": "\u5b89\u54e5\u62c9", "NameEn": "Angola", "Code": "AO"},
        {"NameCn": "\u5357\u6781\u6d32", "NameEn": "Antarctica", "Code": "AQ"},
        {"NameCn": "\u963f\u6839\u5ef7", "NameEn": "Argentina", "Code": "AR"},
        {"NameCn": "\u7f8e\u5c5e\u8428\u6469\u4e9a", "NameEn": "American Samoa", "Code": "AS"},
        {"NameCn": "\u5965\u5730\u5229", "NameEn": "Austria", "Code": "AT"},
        {"NameCn": "\u6fb3\u5927\u5229\u4e9a", "NameEn": "Australia", "Code": "AU"},
        {"NameCn": "\u963f\u9c81\u5df4", "NameEn": "Aruba", "Code": "AW"},
        {"NameCn": "\u963f\u585e\u62dc\u7586", "NameEn": "Azerbaijan", "Code": "AZ"},
        {
            "NameCn": "\u6ce2\u65af\u5c3c\u4e9a\u548c\u9ed1\u585e\u54e5\u7ef4\u90a3",
            "NameEn": "Bosnia and Herzegovina",
            "Code": "BA"
        },
        {"NameCn": "\u5df4\u5df4\u591a\u65af", "NameEn": "Barbados", "Code": "BB"},
        {"NameCn": "\u5b5f\u52a0\u62c9\u56fd", "NameEn": "Bangladesh", "Code": "BD"},
        {"NameCn": "\u6bd4\u5229\u65f6", "NameEn": "Belgium", "Code": "BE"},
        {"NameCn": "\u5e03\u57fa\u7eb3\u6cd5\u7d22", "NameEn": "Burkina Faso", "Code": "BF"},
        {"NameCn": "\u4fdd\u52a0\u5229\u4e9a", "NameEn": "Bulgaria", "Code": "BG"},
        {"NameCn": "\u5df4\u6797", "NameEn": "Bahrain", "Code": "BH"},
        {"NameCn": "\u5e03\u9686\u8fea", "NameEn": "Burundi", "Code": "BI"},
        {"NameCn": "\u8d1d\u5b81", "NameEn": "Benin", "Code": "BJ"},
        {"NameCn": "\u767e\u6155\u5927", "NameEn": "Bermuda", "Code": "BM"},
        {"NameCn": "\u6587\u83b1", "NameEn": "Brunei Darussalam", "Code": "BN"},
        {"NameCn": "\u73bb\u5229\u7ef4\u4e9a", "NameEn": "Bolivia", "Code": "BO"},
        {"NameCn": "\u5df4\u897f", "NameEn": "Brazil", "Code": "BR"},
        {"NameCn": "\u5df4\u54c8\u9a6c", "NameEn": "Bahamas", "Code": "BS"},
        {"NameCn": "\u4e0d\u4e39", "NameEn": "Bhutan", "Code": "BT"},
        {"NameCn": "\u5e03\u7ef4\u5c9b", "NameEn": "Bouvet Island", "Code": "BV"},
        {"NameCn": "\u535a\u8328\u74e6\u7eb3", "NameEn": "Botswana", "Code": "BW"},
        {"NameCn": "\u767d\u4fc4\u7f57\u65af", "NameEn": "Belarus", "Code": "BY"},
        {"NameCn": "\u4f2f\u5229\u5179", "NameEn": "Belize", "Code": "BZ"},
        {"NameCn": "\u52a0\u62ff\u5927", "NameEn": "Canada", "Code": "CA"},
        {"NameCn": "\u79d1\u79d1\u65af(\u57fa\u6797)", "NameEn": "\u7fa4\u5c9b Cocos(Keeling) Islands", "Code": "CC"},
        {"NameCn": "\u4e2d\u975e", "NameEn": "Central Africa", "Code": "CF"},
        {"NameCn": "\u521a\u679c", "NameEn": "Congo", "Code": "CG"},
        {"NameCn": "\u745e\u58eb", "NameEn": "Switzerland", "Code": "CH"},
        {"NameCn": "\u79d1\u7279\u8fea\u74e6", "NameEn": "Cote d'Ivoire", "Code": "CI"},
        {"NameCn": "\u5e93\u514b\u7fa4\u5c9b", "NameEn": "Cook Islands", "Code": "CK"},
        {"NameCn": "\u667a\u5229", "NameEn": "Chile", "Code": "CL"},
        {"NameCn": "\u5580\u9ea6\u9686", "NameEn": "Cameroon", "Code": "CM"},
        {"NameCn": "\u4e2d\u56fd", "NameEn": "China", "Code": "CN"},
        {"NameCn": "\u54e5\u65af\u8fbe\u9ece\u52a0", "NameEn": "Costa Rica", "Code": "CR"},
        {"NameCn": "\u5723\u8bde\u5c9b", "NameEn": "Christmas Island", "Code": "CS"},
        {"NameCn": "\u4e2d\u56fd\u53f0\u6e7e", "NameEn": "Taiwan,China", "Code": "CT"},
        {"NameCn": "\u53e4\u5df4", "NameEn": "Cuba", "Code": "CU"},
        {"NameCn": "\u4f5b\u5f97\u89d2", "NameEn": "Cape Verde", "Code": "CV"},
        {"NameCn": "\u585e\u6d66\u8def\u65af", "NameEn": "Cyprus", "Code": "CY"},
        {"NameCn": "\u6377\u514b", "NameEn": "Czech Repoublic", "Code": "CZ"},
        {"NameCn": "\u54e5\u4f26\u6bd4\u4e9a", "NameEn": "Colombia", "Code": "Co"},
        {"NameCn": "\u5fb7\u56fd", "NameEn": "Germany", "Code": "DE"},
        {"NameCn": "\u5409\u5e03\u63d0", "NameEn": "Djibouti", "Code": "DJ"},
        {"NameCn": "\u4e39\u9ea6", "NameEn": "Denmark", "Code": "DK"},
        {"NameCn": "\u591a\u7c73\u5c3c\u514b", "NameEn": "Dominica", "Code": "DM"},
        {"NameCn": "\u591a\u7c73\u5c3c\u52a0\u5171\u548c\u56fd", "NameEn": "Dominican Republic", "Code": "DO"},
        {"NameCn": "\u963f\u5c14\u53ca\u5229\u4e9a", "NameEn": "Algeria", "Code": "DZ"},
        {"NameCn": "\u5384\u74dc\u591a\u5c14", "NameEn": "Ecuador", "Code": "EC"},
        {"NameCn": "\u7231\u6c99\u5c3c\u4e9a", "NameEn": "Estonia", "Code": "EE"},
        {"NameCn": "\u57c3\u53ca", "NameEn": "Egypt", "Code": "EG"},
        {"NameCn": "\u897f\u6492\u54c8\u62c9", "NameEn": "Western Sahara", "Code": "EH"},
        {"NameCn": "\u5384\u7acb\u7279\u91cc\u4e9a", "NameEn": "Eritrea", "Code": "ER"},
        {"NameCn": "\u897f\u73ed\u7259", "NameEn": "Spain", "Code": "ES"},
        {"NameCn": "\u57c3\u585e\u4fc4\u6bd4\u4e9a", "NameEn": "Ethiopia", "Code": "ET"},
        {"NameCn": "\u82ac\u5170", "NameEn": "Finland", "Code": "FI"},
        {"NameCn": "\u6590\u6d4e", "NameEn": "Fiji", "Code": "FJ"},
        {
            "NameCn": "\u9a6c\u5c14\u7ef4\u7eb3\u65af\u7fa4\u5c9b(\u798f\u514b\u5170\u7fa4\u5c9b)",
            "NameEn": "Malvinas Islands (Falkland Islands)",
            "Code": "FK"
        },
        {"NameCn": "\u5bc6\u514b\u7f57\u5c3c\u897f\u4e9a", "NameEn": "Micronesia", "Code": "FM"},
        {"NameCn": "\u6cd5\u7f57\u7fa4\u5c9b", "NameEn": "Faroe Islands", "Code": "FO"},
        {"NameCn": "\u6cd5\u56fd", "NameEn": "France", "Code": "FR"},
        {"NameCn": "\u52a0\u84ec", "NameEn": "Gabon", "Code": "GA"},
        {"NameCn": "\u82f1\u56fd", "NameEn": "United Kingdom", "Code": "GB"},
        {"NameCn": "\u683c\u6797\u7eb3\u8fbe", "NameEn": "Grenada", "Code": "GD"},
        {"NameCn": "\u683c\u9c81\u5409\u4e9a", "NameEn": "Georgia", "Code": "GE"},
        {"NameCn": "\u6cd5\u5c5e\u572d\u4e9a\u90a3", "NameEn": "French Guiana", "Code": "GF"},
        {"NameCn": "\u52a0\u7eb3", "NameEn": "Ghana", "Code": "GH"},
        {"NameCn": "\u76f4\u5e03\u7f57\u9640", "NameEn": "Gibraltar", "Code": "GI"},
        {"NameCn": "\u683c\u9675\u5170", "NameEn": "Greenland", "Code": "GL"},
        {"NameCn": "\u5188\u6bd4\u4e9a", "NameEn": "Gambia", "Code": "GM"},
        {"NameCn": "\u51e0\u5185\u4e9a", "NameEn": "Guinea", "Code": "GN"},
        {"NameCn": "\u74dc\u5fb7\u7f57\u666e", "NameEn": "Guadeloupe", "Code": "GP"},
        {"NameCn": "\u8d64\u9053\u51e0\u5185\u4e9a", "NameEn": "Equatorial Guinea", "Code": "GQ"},
        {"NameCn": "\u5e0c\u814a", "NameEn": "Greece", "Code": "GR"},
        {
            "NameCn": "\u5357\u4e54\u6cbb\u4e9a\u5c9b\u548c\u5357\u6851\u5fb7\u97e6\u5947\u5c9b",
            "NameEn": "South Georgia and South Sandwich Islands",
            "Code": "GS"
        },
        {"NameCn": "\u5371\u5730\u9a6c\u62c9", "NameEn": "Guatemala", "Code": "GT"},
        {"NameCn": "\u5173\u5c9b", "NameEn": "Guam", "Code": "GU"},
        {"NameCn": "\u51e0\u5185\u4e9a\u6bd4\u7ecd", "NameEn": "Guine-bissau", "Code": "GW"},
        {"NameCn": "\u572d\u4e9a\u90a3", "NameEn": "Guyana", "Code": "GY"},
        {"NameCn": "\u9999\u6e2f", "NameEn": "Hong Kong", "Code": "HK"},
        {
            "NameCn": "\u8d6b\u5fb7\u5c9b\u548c\u9ea6\u514b\u5510\u7eb3\u5c9b",
            "NameEn": "Heard islands and Mc Donald Islands",
            "Code": "HM"
        },
        {"NameCn": "\u6d2a\u90fd\u62c9\u65af", "NameEn": "Honduras", "Code": "HN"},
        {"NameCn": "\u514b\u7f57\u5730\u4e9a", "NameEn": "Croatia", "Code": "HR"},
        {"NameCn": "\u6d77\u5730", "NameEn": "Haiti", "Code": "HT"},
        {"NameCn": "\u5308\u7259\u5229", "NameEn": "Hungary", "Code": "HU"},
        {"NameCn": "\u5370\u5ea6\u5c3c\u897f\u4e9a", "NameEn": "Indonesia", "Code": "ID"},
        {"NameCn": "\u7231\u5c14\u5170", "NameEn": "Ireland", "Code": "IE"},
        {"NameCn": "\u4ee5\u8272\u5217", "NameEn": "Israel", "Code": "IL"},
        {"NameCn": "\u5370\u5ea6", "NameEn": "India", "Code": "IN"},
        {
            "NameCn": "\u82f1\u5c5e\u5370\u5ea6\u6d0b\u9886\u571f",
            "NameEn": "British indian Ocean Ter-ritory",
            "Code": "IO"
        },
        {"NameCn": "\u4f0a\u62c9\u514b", "NameEn": "Iraq", "Code": "IQ"},
        {"NameCn": "\u4f0a\u6717", "NameEn": "Iran", "Code": "IR"},
        {"NameCn": "\u51b0\u5c9b", "NameEn": "Iceland", "Code": "IS"},
        {"NameCn": "\u610f\u5927\u5229", "NameEn": "Italy", "Code": "IT"},
        {"NameCn": "\u7259\u4e70\u52a0", "NameEn": "Jamaica", "Code": "JM"},
        {"NameCn": "\u7ea6\u65e6", "NameEn": "Jordan", "Code": "JO"},
        {"NameCn": "\u65e5\u672c", "NameEn": "Japan", "Code": "JP"},
        {"NameCn": "\u80af\u5c3c\u4e9a", "NameEn": "Kenya", "Code": "KE"},
        {"NameCn": "\u5409\u5c14\u5409\u65af\u65af\u5766", "NameEn": "Kyrgyzstan", "Code": "KG"},
        {"NameCn": "\u67ec\u57d4\u5be8", "NameEn": "Cambodia", "Code": "KH"},
        {"NameCn": "\u57fa\u91cc\u5df4\u65af", "NameEn": "Kiribati", "Code": "KI"},
        {"NameCn": "\u79d1\u6469\u7f57", "NameEn": "Comoros", "Code": "KM"},
        {"NameCn": "\u5723\u57fa\u8328\u548c\u5c3c\u7ef4\u65af", "NameEn": "Saint Kitts and nevis", "Code": "KN"},
        {"NameCn": "\u671d\u9c9c", "NameEn": "Korea,Democratic People's Republic of", "Code": "KP"},
        {"NameCn": "\u97e9\u56fd", "NameEn": "Korea,Republic of", "Code": "KR"},
        {"NameCn": "\u79d1\u5a01\u7279", "NameEn": "Kuwait", "Code": "KW"},
        {"NameCn": "\u5f00\u66fc\u7fa4\u5c9b", "NameEn": "Cayman Islands", "Code": "KY"},
        {"NameCn": "\u54c8\u8428\u514b\u65af\u5766", "NameEn": "Kazakhstan", "Code": "KZ"},
        {"NameCn": "\u8001\u631d", "NameEn": "Lao", "Code": "LA"},
        {"NameCn": "\u9ece\u5df4\u5ae9", "NameEn": "Lebanon", "Code": "LB"},
        {"NameCn": "\u5723\u5362\u897f\u4e9a", "NameEn": "Saint lucia", "Code": "LC"},
        {"NameCn": "\u5217\u652f\u6566\u58eb\u767b", "NameEn": "Liechtenstein", "Code": "LI"},
        {"NameCn": "\u65af\u91cc\u5170\u5361", "NameEn": "Sri Lanka", "Code": "LK"},
        {"NameCn": "\u5229\u6bd4\u91cc\u4e9a", "NameEn": "Liberia", "Code": "LR"},
        {"NameCn": "\u83b1\u7d22\u6258", "NameEn": "Lesotho", "Code": "LS"},
        {"NameCn": "\u7acb\u9676\u5b9b", "NameEn": "Lithuania", "Code": "LT"},
        {"NameCn": "\u5362\u68ee\u5821", "NameEn": "Luxembourg", "Code": "LU"},
        {"NameCn": "\u62c9\u8131\u7ef4\u4e9a", "NameEn": "Latvia", "Code": "LV"},
        {"NameCn": "\u5229\u6bd4\u4e9a", "NameEn": "Libya", "Code": "LY"},
        {"NameCn": "\u6469\u6d1b\u54e5", "NameEn": "Morocco", "Code": "MA"},
        {"NameCn": "\u6469\u7eb3\u54e5", "NameEn": "Monaco", "Code": "MC"},
        {"NameCn": "\u6469\u5c14\u591a\u74e6", "NameEn": "Moldova", "Code": "MD"},
        {"NameCn": "\u9a6c\u8fbe\u52a0\u65af\u52a0", "NameEn": "Madagascar", "Code": "MG"},
        {"NameCn": "\u9a6c\u7ecd\u5c14\u7fa4\u5c9b", "NameEn": "Marshall Islands", "Code": "MH"},
        {"NameCn": "\u9a6c\u65af\u987f", "NameEn": "Macedonia", "Code": "MK"},
        {"NameCn": "\u9a6c\u91cc", "NameEn": "Mali", "Code": "ML"},
        {"NameCn": "\u7f05\u7538", "NameEn": "Myanmar", "Code": "MM"},
        {"NameCn": "\u8499\u53e4", "NameEn": "Mongolia", "Code": "MN"},
        {"NameCn": "\u6fb3\u95e8", "NameEn": "Macau", "Code": "MO"},
        {"NameCn": "\u5317\u9a6c\u91cc\u4e9a\u7eb3", "NameEn": "Northern Marianas", "Code": "MP"},
        {"NameCn": "\u9a6c\u63d0\u5c3c\u514b", "NameEn": "Martinique", "Code": "MQ"},
        {"NameCn": "\u6bdb\u91cc\u5854\u5c3c\u4e9a", "NameEn": "Mauritania", "Code": "MR"},
        {"NameCn": "\u8499\u7279\u585e\u62c9\u7279", "NameEn": "Montserrat", "Code": "MS"},
        {"NameCn": "\u9a6c\u8033\u4ed6", "NameEn": "Malta", "Code": "MT"},
        {"NameCn": "\u6bdb\u91cc\u6c42\u65af", "NameEn": "Mauritius", "Code": "MU"},
        {"NameCn": "\u9a6c\u5c14\u4ee3\u592b", "NameEn": "Maldives", "Code": "MV"},
        {"NameCn": "\u9a6c\u62c9\u7ef4", "NameEn": "Malawi", "Code": "MW"},
        {"NameCn": "\u58a8\u897f\u54e5", "NameEn": "Mexico", "Code": "MX"},
        {"NameCn": "\u9a6c\u6765\u897f\u4e9a", "NameEn": "Malaysia", "Code": "MY"},
        {"NameCn": "\u83ab\u6851\u6bd4\u514b", "NameEn": "Mozambique", "Code": "MZ"},
        {"NameCn": "\u7eb3\u7c73\u6bd4\u4e9a", "NameEn": "Namibia", "Code": "NA"},
        {"NameCn": "\u65b0\u5580\u91cc\u591a\u5c3c\u4e9a", "NameEn": "New Caledonia", "Code": "NC"},
        {"NameCn": "\u5c3c\u65e5\u5c14", "NameEn": "Niger", "Code": "NE"},
        {"NameCn": "\u8bfa\u798f\u514b\u5c9b", "NameEn": "Norfolk Island", "Code": "NF"},
        {"NameCn": "\u5c3c\u65e5\u5229\u4e9a", "NameEn": "Nigeria", "Code": "NG"},
        {"NameCn": "\u5c3c\u52a0\u62c9\u74dc", "NameEn": "Nicaragua", "Code": "NI"},
        {"NameCn": "\u8377\u5170", "NameEn": "Netherlands", "Code": "NL"},
        {"NameCn": "\u632a\u5a01", "NameEn": "Norway", "Code": "NO"},
        {"NameCn": "\u5c3c\u6cca\u5c14", "NameEn": "Nepal", "Code": "NP"},
        {"NameCn": "\u7459\u9c81", "NameEn": "Nauru", "Code": "NR"},
        {"NameCn": "\u7ebd\u57c3", "NameEn": "Niue", "Code": "NU"},
        {"NameCn": "\u65b0\u897f\u5170", "NameEn": "New Zealand", "Code": "NZ"},
        {"NameCn": "\u963f\u66fc", "NameEn": "Oman", "Code": "OM"},
        {"NameCn": "\u5df4\u62ff\u9a6c", "NameEn": "Panama", "Code": "PA"},
        {"NameCn": "\u79d8\u9c81", "NameEn": "Peru", "Code": "PE"},
        {"NameCn": "\u6cd5\u5c5e\u6ce2\u5229\u5c3c\u897f\u4e9a", "NameEn": "French Polynesia", "Code": "PF"},
        {"NameCn": "\u5df4\u5e03\u4e9a\u65b0\u51e0\u5185\u4e9a", "NameEn": "Papua New Guinea", "Code": "PG"},
        {"NameCn": "\u83f2\u5f8b\u5bbe", "NameEn": "Philippines", "Code": "PH"},
        {"NameCn": "\u5df4\u57fa\u65af\u5766", "NameEn": "Pakistan", "Code": "PK"},
        {"NameCn": "\u6ce2\u5170", "NameEn": "Poland", "Code": "PL"},
        {
            "NameCn": "\u5723\u76ae\u57c3\u5c14\u548c\u5bc6\u514b\u9686",
            "NameEn": "Saint Pierre and Miquelon",
            "Code": "PM"
        },
        {"NameCn": "\u76ae\u7279\u51ef\u6069\u7fa4\u5c9b", "NameEn": "Pitcairn Islands Group", "Code": "PN"},
        {"NameCn": "\u6ce2\u591a\u9ece\u5404", "NameEn": "Puerto Rico", "Code": "PR"},
        {"NameCn": "\u5df4\u52d2\u65af\u5766", "NameEn": "Palestine", "Code": "PS"},
        {"NameCn": "\u8461\u8404\u7259", "NameEn": "Portugal", "Code": "PT"},
        {"NameCn": "\u8d1d\u52b3", "NameEn": "Palau", "Code": "PW"},
        {"NameCn": "\u5df4\u62c9\u572d", "NameEn": "Paraguay", "Code": "PY"},
        {"NameCn": "\u5361\u5854\u5c14", "NameEn": "Qatar", "Code": "QA"},
        {"NameCn": "\u7559\u5c3c\u6c6a", "NameEn": "Reunion", "Code": "RE"},
        {"NameCn": "\u7f57\u9a6c\u5c3c\u4e9a", "NameEn": "Romania", "Code": "RO"},
        {"NameCn": "\u4fc4\u7f57\u65af", "NameEn": "Russia", "Code": "RU"},
        {"NameCn": "\u5362\u65fa\u8fbe", "NameEn": "Rwanda", "Code": "RW"},
        {"NameCn": "\u6c99\u7afa\u963f\u62c9\u4f2f", "NameEn": "Saudi Arabia", "Code": "SA"},
        {"NameCn": "\u6240\u7f57\u95e8\u7fa4\u5c9b", "NameEn": "Solomon Islands", "Code": "SB"},
        {"NameCn": "\u585e\u820c\u5c14", "NameEn": "Seychells", "Code": "SC"},
        {"NameCn": "\u82cf\u4e39", "NameEn": "Sudan", "Code": "SD"},
        {"NameCn": "\u745e\u5178", "NameEn": "Sweden", "Code": "SE"},
        {"NameCn": "\u65b0\u52a0\u5761", "NameEn": "Singapore", "Code": "SG"},
        {"NameCn": "\u65af\u6d1b\u6587\u5c3c\u4e9a", "NameEn": "Slovenia", "Code": "SI"},
        {"NameCn": "\u65af\u74e6\u5c14\u5df4\u7fa4\u5c9b", "NameEn": "Svalbard and jan Mayen Islands", "Code": "SJ"},
        {"NameCn": "\u65af\u6d1b\u4f10\u514b", "NameEn": "Slovakia", "Code": "SK"},
        {"NameCn": "\u585e\u62c9\u5229\u6602", "NameEn": "Sierra leone", "Code": "SL"},
        {"NameCn": "\u5723\u9a6c\u529b\u8bfa", "NameEn": "San Marion", "Code": "SM"},
        {"NameCn": "\u585e\u5185\u52a0\u5c14", "NameEn": "Senegal", "Code": "SN"},
        {"NameCn": "\u7d22\u9a6c\u91cc", "NameEn": "Somalia", "Code": "SO"},
        {"NameCn": "\u82cf\u91cc\u5357", "NameEn": "Suriname", "Code": "SR"},
        {"NameCn": "\u8428\u5c14\u74e6\u591a", "NameEn": "El Salvador", "Code": "SV"},
        {"NameCn": "\u53d9\u5229\u4e9a", "NameEn": "Syria", "Code": "SY"},
        {"NameCn": "\u65af\u5a01\u58eb\u5170", "NameEn": "Swaziland", "Code": "SZ"},
        {"NameCn": "\u5723\u8d6b\u52d2\u62ff", "NameEn": "Saint helena", "Code": "Sh"},
        {"NameCn": "\u5723\u591a\u7f8e\u548c\u666e\u6797\u897f\u6bd4", "NameEn": "Sao Tome and Principe", "Code": "St"},
        {"NameCn": "\u7279\u514b\u65af\u79d1\u65af\u7fa4\u5c9b", "NameEn": "Turks and Caicos Islands", "Code": "TC"},
        {"NameCn": "\u4e4d\u5f97", "NameEn": "Chad", "Code": "TD"},
        {"NameCn": "\u6cd5\u5c5e\u5357\u90e8\u9886\u571f", "NameEn": "French Southern Territo-ries", "Code": "TF"},
        {"NameCn": "\u591a\u54e5", "NameEn": "Togo", "Code": "TG"},
        {"NameCn": "\u6cf0\u56fd", "NameEn": "Thailand", "Code": "TH"},
        {"NameCn": "\u5854\u5409\u514b\u65af\u5766", "NameEn": "Tajikistan", "Code": "TJ"},
        {"NameCn": "\u6258\u514b\u52b3", "NameEn": "Tokelau", "Code": "TK"},
        {"NameCn": "\u571f\u5e93\u66fc\u65af\u5766", "NameEn": "Turkmenistan", "Code": "TM"},
        {"NameCn": "\u7a81\u5c3c\u65af", "NameEn": "Tunisia", "Code": "TN"},
        {"NameCn": "\u6c64\u52a0", "NameEn": "Tonga", "Code": "TO"},
        {"NameCn": "\u4e1c\u5e1d\u6c76", "NameEn": "East Timor", "Code": "TP"},
        {"NameCn": "\u571f\u8033\u5176", "NameEn": "Turkey", "Code": "TR"},
        {"NameCn": "\u7279\u7acb\u5c3c\u8fbe\u548c\u591a\u5df4\u54e5", "NameEn": "Trinidad and Tobago", "Code": "TT"},
        {"NameCn": "\u56fe\u74e6\u5362", "NameEn": "Tuvalu", "Code": "TV"},
        {"NameCn": "\u5766\u6851\u5c3c\u4e9a", "NameEn": "Tanzania", "Code": "TZ"},
        {"NameCn": "\u4e4c\u514b\u5170", "NameEn": "Ukraine", "Code": "UA"},
        {"NameCn": "\u4e4c\u5e72\u8fbe", "NameEn": "Uganda", "Code": "UG"},
        {
            "NameCn": "\u7f8e\u5c5e\u592a\u5e73\u6d0b\u5404\u7fa4\u5c9b",
            "NameEn": "United States miscella-neous Pac",
            "Code": "UM"
        },
        {"NameCn": "\u7f8e\u56fd", "NameEn": "United States", "Code": "US"},
        {"NameCn": "\u4e4c\u62c9\u572d", "NameEn": "Uruguay", "Code": "UY"},
        {"NameCn": "\u4e4c\u5179\u522b\u514b\u65af\u5766", "NameEn": "Uzbekistan", "Code": "UZ"},
        {"NameCn": "\u68b5\u8482\u5188", "NameEn": "Vatican", "Code": "VA"},
        {
            "NameCn": "\u5723\u6587\u68ee\u7279\u548c\u683c\u6797\u7eb3\u4e01\u65af",
            "NameEn": "Saint Vincent and the Grenadines",
            "Code": "VC"
        },
        {"NameCn": "\u59d4\u5185\u745e\u62c9", "NameEn": "Venezuela", "Code": "VE"},
        {"NameCn": "\u82f1\u5c5e\u7ef4\u5c14\u4eac\u7fa4\u5c9b", "NameEn": "British Virgin Islands", "Code": "VG"},
        {
            "NameCn": "\u7f8e\u5c5e\u7ef4\u5c14\u4eac\u7fa4\u5c9b",
            "NameEn": "United States Virgin Is-lands",
            "Code": "VI"
        },
        {"NameCn": "\u8d8a\u5357", "NameEn": "Viet Nam", "Code": "VN"},
        {"NameCn": "\u74e6\u52aa\u963f\u56fe", "NameEn": "Vanuatu", "Code": "VU"},
        {
            "NameCn": "\u74e6\u5229\u65af\u548c\u5bcc\u56fe\u7eb3\u7fa4\u5c9b",
            "NameEn": "Wallis and Futuna Is-lands",
            "Code": "WF"
        },
        {"NameCn": "\u897f\u8428\u6469\u4e9a", "NameEn": "Western Samoa", "Code": "WS"},
        {"NameCn": "\u4e5f\u95e8", "NameEn": "Yemen", "Code": "YE"},
        {"NameCn": "\u9a6c\u7ea6\u7279", "NameEn": "Mayotte", "Code": "YT"},
        {"NameCn": "\u5357\u65af\u62c9\u592b", "NameEn": "Yugoslavia", "Code": "YU"},
        {"NameCn": "\u5357\u975e", "NameEn": "South Africa", "Code": "ZA"},
        {"NameCn": "\u8d5e\u6bd4\u4e9a", "NameEn": "Zambia", "Code": "ZM"},
        {"NameCn": "\u624e\u4f0a\u5c14", "NameEn": "Zaire", "Code": "ZR"},
        {"NameCn": "\u6d25\u5df4\u5e03\u97e6", "NameEn": "Zimbabwe", "Code": "ZW"}]
};
},{}]},{},[8])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
