(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/**
 * Created by Auser on 2016/12/6.
 */
"use strict";
var Data = (function () {
    var list = function (data, callback) {
        var _data = {};
        $.ajax({
            url: '/api/bill/list'
            , type: 'post'
            , data: data
            , dataType: 'json'
            , timeout: 100000
            , success: function (json) {
                if (json && "resCode" in json) {
                    _data = json;
                } else {
                    _data = {};
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    return {
        list: list
    }
}());
module.exports.Data = Data;
},{}],2:[function(require,module,exports){
/**
 * Created by Auser on 2016/12/7.
 */
"use strict";
var Dom = (function () {
    var list = function (json, param) {
        var str = '';
        if (json && 'resCode' in json && json.resCode == 0 && 'resBody' in json && json.resBody) {
            if ('sList' in json.resBody && json.resBody.sList instanceof Array && json.resBody.sList.length > 0) {
                var body = json.resBody.sList;
                for (var b in body) {
                    if (body.hasOwnProperty(b)) {
                        str += render(body[b]);
                    }
                }
                //加载分页器
                $.burster($(".page-box"), param.offset || 0, json.resBody.totalCount, 5, param.limit || 20);
            } else {
                str = '<tr class="wrong-msg"><td colspan="9">暂无账单资料！</td></tr>';
                $('.page-box').html(' ');
            }
        } else {
            str = '<tr class="wrong-msg"><td colspan="9">获取列表失败，<a href="">请刷新重试</a>！</td></tr>';
            $('.page-box').html(' ');
        }
        $('tbody').html(str);
        function render(d) {
            var oState = ''
                , bState = '';
            switch (d.orderState) {
                case 0:
                    oState = '新订单，未确认';
                    break;
                case 1:
                    oState = '已确认订单';
                    break;
                case 2:
                    oState = '进行中';
                    break;
                case 3:
                    oState = '已结束，正常结束';
                    break;
                case 4:
                    oState = '已制单，彻底结束';
                    break;
                case -1:
                    oState = '已取消，无费用';
                    break;
                case -2:
                    oState = '已取消，已产生费用';
                    break;
                default:
                    oState = '新订单，未确认';
                    break;
            }
            switch (d.chargeState) {
                case 0:
                    bState = '未确认';
                    break;
                case 1:
                    bState = '已确认';
                    break;
                case 2:
                    bState = '申诉中';
                    break;
                case 3:
                    bState = '已开账';
                    break;
                default :
                    bState = '未确认';
                    break;
            }
            return '<tr' + (d.chargeState == 2 ? ' class="bg-r"' : '') + '> <td>' + d.orderNum + '</td> <td>' + d.deptPortCode + '</td>' +
                ' <td>' + d.destPortCode + '</td> <td>' + d.airCompanyCode + '</td> ' +
                '<td>' + d.airlineTime + '</td> <td>CNY ' + d.orderChargingTotal + '</td>' +
                ' <td>' + oState + '</td> <td>' + bState + '</td> ' +
                '<td><a href="/vip/bill/detail?id=' + d.orderId + '">详情</a></td> </tr>'
        }
    };
    return {
        list: list
    }
}());
module.exports.Dom = Dom;
},{}],3:[function(require,module,exports){
/**
 * Created by Auser on 2016/12/2.
 */
"use strict";
require('../general').run();

require('./listener').run();

},{"../general":8,"./listener":4}],4:[function(require,module,exports){
/**
 * Created by Auser on 2016/12/13.
 */
require('../frame/burster');
var url = require('../frame/function').url;
var Listener = (function () {
    var Data = require('./data').Data
        , Dom = require('./dom').Dom;
    var listener = function () {
        $(document).on('click', '.search-btn', function () {
            url.set('offset', 0);
            init();
        });
        $(document).on('click', '.pages', function () {
            url.set('offset', $(this).data('offset'));
            init();
        });
        $('#time').datetimepicker({
            format: 'yyyy-mm-dd',//日期的格式
            startDate: '1900-01-01',//选择器的开始日期
            autoclose: true,//日期选择完成后是否关闭选择框
            bootcssVer: 3,//显示向左向右的箭头
            language: 'zh-CN',//语言
            minView: "month"//表示日期选择的最小范围，默认是hour
        });
    };
    var init = function () {
        var load = '<tr class="wrong-msg"><td colspan="9"><div class="loading-box"><div class="spinner"> <div class="rect1"></div> <div class="rect2"></div> <div class="rect3"></div><div class="rect4"></div><div class="rect5"></div> </div></div></td></tr>';
        $('tbody').html(load);
        var data = {
            "memberId": 0,
            "orderNum": $('#id').val(),
            "chargeState": $('#state').find('option:selected').val(),
            "offset": url.get('offset') || 0,
            "limit": url.get('limit') || 20
        };
        Data.list(data, function (json) {
            Dom.list(json, data);
        });
    };
    var run = function () {
        listener();
        init();
    };
    return {
        run: run
    }
}());
module.exports = Listener;
},{"../frame/burster":5,"../frame/function":6,"./data":1,"./dom":2}],5:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/24.
 */
"use strict";

(function ($) {
    /**
     * 生成分页器
     * @param ele 需要添加分页器的元素
     * @param offset 偏移量，即从第data-offset开始
     * @param length 总记录条数
     * @param showPages 分页器显示的页数，超过则隐藏多余的页
     * @param rows 每页显示的记录条数
     */
    $.burster = function (ele, offset, length, showPages, rows) {
        offset = offset ? parseInt(offset) : 0;
        //将分页器装入table中
        if (length && length > offset) {
            var pageHtml = ""
                , ass = ""//清空需要装入的html
                , beforePages = Math.ceil(offset / rows)//需要显示的前页数/当前页
                , afterPages = Math.ceil((length - offset ) / rows)//需要显示的后页数
                , pages = Math.ceil(length / rows) //总页数
                , k = 0;
            //alert("总页数" + pages + " 前页数 " + beforePages + " 后页数 " + afterPages);
            //若页数小于showPages页，则全部显示
            if (pages >= 0 && pages <= showPages) {
                for (k = 0; k < pages; k++) {
                    if (k == beforePages) {
                        pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                    } else {
                        pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                    }
                }
            } else if (pages > showPages) {//总页数大于showPages页
                if (beforePages <= Math.ceil(showPages / 2) && afterPages > showPages + 1) {
                    for (k = 0; k < showPages; k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages <= Math.ceil(showPages / 2) && afterPages == showPages + 1) {
                    for (k = 0; k < showPages - 1; k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages <= Math.ceil(showPages / 2) && afterPages <= showPages) {
                    for (k = 0; k < showPages - 1; k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > Math.ceil(showPages / 2) && beforePages <= showPages && afterPages > showPages) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < beforePages + Math.ceil(showPages / 2); k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > showPages && afterPages > showPages) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < beforePages + Math.ceil(showPages / 2); k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > Math.ceil(showPages / 2) && beforePages <= pages && afterPages <= showPages && afterPages > Math.ceil(showPages / 2) + 1) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < beforePages + Math.ceil(showPages / 2); k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > pages && afterPages <= showPages && afterPages > Math.ceil(showPages / 2) + 1) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < beforePages + Math.ceil(showPages / 2); k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > Math.ceil(showPages / 2) && afterPages <= Math.ceil(showPages / 2) + 1) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < pages; k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                }
            }
            //判断"首页"和"末页"是否可点击
            var firstPage, lastPage;
            if (offset == 0) {//此时首页无法点击
                firstPage = '<li class="disabled"><a class="pages" data-offset="0">首页</a></li>';
                lastPage = '<li><a class="pages" data-offset="' + parseInt(parseInt((length % rows == 0 ? (length - 1) : length) / rows) * rows) + '" >末页</a></li>';
            } else if ((offset + rows) >= length) {//此时末页无法点击
                firstPage = '<li><a class="pages" data-offset="0">首页</a></li>';
                lastPage = '<li class="disabled"><a class="pages" data-offset="' + parseInt(parseInt((length % rows == 0 ? (length - 1) : length) / rows) * rows) + '">末页</a></li>';
            } else {
                firstPage = '<li><a class="pages" data-offset="0">首页</a></li>';
                lastPage = '<li><a class="pages" data-offset="' + parseInt(parseInt((length % rows == 0 ? (length - 1) : length) / rows) * rows) + '">末页</a></li>';
            }
            //判断"上一页"和"下一页"是否存在
            var upPage, downPage;
            if (offset == 0 || (offset < rows && (offset % rows != 0))) {
                upPage = "<li class='disabled'><a class='pages' func='previous' data-offset='" + parseInt(offset) + "' >上页</a></li>"
            } else {
                upPage = "<li><a class='pages' func='previous' data-offset='" + (parseInt(offset) - parseInt(rows)) + "' >上页</a></li>";
            }
            if (offset >= (length - rows)) {
                downPage = "<li class='disabled'><a class='pages' func='next' data-offset='" + parseInt(offset) + "'>下页</a></li>"
            } else {
                downPage = "<li><a class='pages' func='next' data-offset='" + parseInt(parseInt(offset) + parseInt(rows)) + "'>下页</a></li>"
            }
            if (pages != 1) {
                //分页部分
                ass += "<div id='pager' class='pager-info'>" +
                    "<h6 id='result' class='pager-record'>共有<span>" + length + "</span>条记录</h6>" +
                    "<ul class='pagination'>" + firstPage + upPage + pageHtml + downPage + lastPage + "</ul></div>";
                //table中注入拼装的记录
                ele.html(ass);
            } else {//无法分页清空分页器
                ele.html('');
            }
        }
    }
}(jQuery));
},{}],6:[function(require,module,exports){
/**
 * Created by jeremy on 2016/2/26.
 * @version 1.0.0 created 通用性功能方法
 */

'use strict';

var Fun = (function () {
    var _timeOut = 100000;//请求超时时间为10s
    /**
     * 封装ajax
     * @param option
     * {
     *      url:"请求的地址"
     *      ,method:"请求的方法"
     *      ,async:"是否并发"
     *      ,data:"发送的数据"
     *      ,success:"成功时回调"
     *      ,error:"失败/超时时回调"
     *      ,timeout:"超时时间"
     *      ,complete:"完成后的回调"
     * }
     */
    var ajax = function (option) {
        //ajax开始时应显示“加载信息框”
        Modal.showLoading();
        $.ajax({
            url: option.url
            , type: "type" in option && option.type || "GET"
            , timeout: option.timeout || _timeOut
            , data: "data" in option && option.data || {}
            , dataType: "json"
            , async: ("async" in option && option.async) ? true : false
            , success: function (json) {
                if ("status" in json && json.status > 0 && "data" in json) {
                    if ("success" in option) {
                        option.success(json.data);
                    } else {
                        Modal.setAlert("无success方法!");
                    }
                } else if ("error" in option && option.error instanceof Function) {
                    option.error(json);
                } else {
                    Modal.setAlert('操作失败!');
                }
            }, error: function (xhr) {//404或者超时
                if ("error" in option && option.error instanceof Function) {
                    //提示用户错误信息
                    Modal.showLoading(false);
                    Modal.setAlert("连接服务器失败，状态：" + (xhr.status || -1) + ",信息：" + (xhr.statusText || "-"));
                    option.error(xhr.status, xhr.statusText);//回调请求的状态和错误信息
                }
            }, complete: function (xhr, type) {
                //关闭“加载信息框”
                Modal.showLoading(false);
                if ("complete" in option && option.complete instanceof Function) {
                    option.complete(xhr, type);//回调请求的xhr信息和类型
                }
            }
        });
    };
    //全选和单选的绑定
    var setCheckboxListener = function (allCheck, radioChecks) {
        //筛选单选按钮组
        var radioValueEles = $(radioChecks);
        //点击全选时，同组按钮被同步
        $(document).delegate(allCheck, "click", function () {
            if (radioValueEles && radioValueEles.length > 0) {
                for (var _r = 0; _r < radioValueEles.length; _r++) {
                    radioValueEles[_r].checked = $(this).is(":checked");
                }
            }
        });
        //点击单选按钮时，
        $(document).delegate(radioChecks, "click", function () {
            $(allCheck)[0].checked = $(radioChecks + ":checked").length == $(radioChecks).length;
        });
    };
    var url = (function () {
        var get = function (name) {
            var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
            var r = window.location.search.substr(1).match(reg);
            if (r != null) return decodeURI(r[2]);
            return null;
        };
        /**
         * 根据参数列表长度进行判断，兼容IE9
         * @returns {string}
         */
        var set = function () {
            if (arguments.length === 1 && typeof arguments[0] === 'object') {//一个对象，使用key标记value
                var obj = arguments[0]
                    , search = location.search;
                for (var o in obj) {
                    if (obj.hasOwnProperty(o)) {
                        search = changeURLKeyValue(search, o, obj[o]);
                    }
                }
                if ('pushState' in history) {
                    history.pushState(null, document.title, search);
                } else if ('pushState' in History) {//ie9 不支持pushState方法,javascript.ejs中添加history.js完成html4对pushState的支持
                    History.pushState(null, null, search);//返回重新构造后search串
                }
            } else if (arguments.length === 2) {//key+value
                var key = arguments[0]
                    , value = arguments[1];
                if ('pushState' in history) {
                    history.pushState(null, document.title, changeURLKeyValue(location.toString(), key, value));
                } else if ('pushState' in History) {//ie9 不支持pushState方法,javascript.ejs中添加history.js完成html4对pushState的支持
                    History.pushState(null, null, changeURLKeyValue(location.search, key, value));//返回重新构造后search串
                }
            }
            function changeURLKeyValue(url, arg, arg_val) {
                var pattern = arg + '=([^&]*)';
                var replaceText = arg + '=' + arg_val;
                if (url.match(pattern)) {
                    var tmp = '/(' + arg + '=)([^&]*)/gi';
                    tmp = url.replace(eval(tmp), replaceText);
                    return tmp;
                } else {
                    if (url.match('[\?]')) {
                        return url + '&' + replaceText;
                    } else {
                        return url + '?' + replaceText;
                    }
                }
            }
        };
        return {
            get: get
            , set: set
        }
    }());
    var formatImage=function (path, size, ele) {
        if(path instanceof  Array && path.length>0){
            path = path[0];
        }
        var IMAGE_SIZE = {
            original: {
                path: "",
                size: ""
            },
            xlarge: {
                path: "_xlarge",
                size: "660*660"
            },
            large: {
                path: "_large",
                size: "420*420"
            },
            middle: {
                path: "_middle",
                size: "300*300"
            },
            small: {
                path: "_small",
                size: "240*240"
            },
            little: {
                path: "_little",
                size: "120*120"
            },
            micro: {
                path: "_micro",
                size: "60*60"
            }
        };
        size = IMAGE_SIZE[size || "middle"] || IMAGE_SIZE.middle;
        var pathTemp = /\.\w+?$/.exec(path);
        if (!pathTemp) {
            path += size.path;
        } else {
            path = (path.substr(0, pathTemp.index || path.length)) + size.path + pathTemp[0];
        }
        if (ele && ele.attr) {
            ele.attr("src", path);
        }
        return path;
    };
    return {
        ajax: ajax
        , getTimtout: _timeOut
        , setCheckboxListener: setCheckboxListener
        , url: url
        , formatImage: formatImage
    }
}());

exports.ajax = Fun.ajax;
exports.getTimeout = Fun.getTimtout;
exports.setCheckboxListener = Fun.setCheckboxListener;
exports.url = Fun.url;
exports.formatImage = Fun.formatImage;

},{}],7:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/22.
 */
"use strict";
var head = function () {
    //时间格式化
    Date.prototype.Format = function (fmt) { //author: Jeremyyy
        var o = {
            "M+": this.getMonth() + 1, //月份
            "d+": this.getDate(), //日
            "h+": this.getHours(), //小时
            "m+": this.getMinutes(), //分
            "s+": this.getSeconds(), //秒
            "q+": Math.floor((this.getMonth() + 3) / 3), //季度
            "S": this.getMilliseconds() //毫秒
        };
        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
        for (var k in o)
            if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
        return fmt;
    };
    //返回顶部
    $(document).on('click', '.back-top', function () {
        $("html,body").animate({scrollTop:0},100);
        return false;
    });
    $(document).on('mouseenter', '.vip-part', function () {
        $(this).children('.vip-select').stop(true);
        $(this).children('.vip-select').slideDown(100);
        return false;
    });
    $(document).on('mouseleave', '.vip-part', function () {
        $(this).children('.vip-select').stop(true);
        $(this).children('.vip-select').slideUp(100);
        return false;
    });
    $(document).on('mouseenter', '.wechat-logo', function () {
        $(this).children('.big-wechat').fadeIn(200);
        return false;
    });
    $(document).on('mouseleave', '.wechat-logo', function () {
        $(this).children('.big-wechat').fadeOut(200);
        return false;
    });
};
module.exports.head = head;
},{}],8:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/22.
 */
"use strict";
var listener = (function () {
    var run = function () {
        //头部点击事件
        require('./head').head();
    };
    return {
        run: run
    }
}());
module.exports = listener;
},{"./head":7}]},{},[3])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
