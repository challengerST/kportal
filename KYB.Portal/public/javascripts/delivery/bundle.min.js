(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/24.
 */
"use strict";
var Data = (function () {
  var airline = function (data, callback) {
    var _data = {};
    $.ajax({
      url: '/api/airline/search'
      , type: 'post'
      , data: data
      , dataType: 'json'
      , timeout: 100000
      , success: function (json) {
        if (json && "resCode" in json) {
          _data = json;
        } else {
          _data = {};
        }
      }, complete: function () {
        if (callback && callback instanceof Function) {
          callback(_data);
        }
      }
    });
  };
  var airport = function (data, callback) {
    var _data = {};
    $.ajax({
      url: '/api/airline/airport'
      , type: 'post'
      , data: data
      , dataType: 'json'
      , timeout: 100000
      , success: function (json) {
        if (json && "resCode" in json) {
          _data = json;
        } else {
          _data = {};
        }
      }, complete: function () {
        if (callback && callback instanceof Function) {
          callback(_data);
        }
      }
    });
  };
  var getCode = function (data, callback) {
    var _data = {};
    $.ajax({
      url: '/api/airline/aircom'
      , type: 'post'
      , data: data
      , dataType: 'json'
      , timeout: 100000
      , success: function (json) {
        if (json && "resCode" in json) {
          _data = json;
        } else {
          _data = {};
        }
      }, complete: function () {
        if (callback && callback instanceof Function) {
          callback(_data);
        }
      }
    });
  };
  return {
    airline: airline
    , airport: airport
    , getCode: getCode
  }
}());
module.exports.Data = Data;
},{}],2:[function(require,module,exports){
/**
 * Created by Auser on 2016/11/29.
 */
"use strict";
var Dom = (function () {
    var airline = function (data, param) {
        var str = '';
        if (data && 'resCode' in data && data.resCode == 0) {
            var json = data.resBody;
            $('#start-txt').html(param.s);
            $('#end-txt').html(param.e);
            if ('sList' in json && json.sList instanceof Array && json.sList.length > 0) {
                var list = json.sList;
                for (var l in list) {
                    if (list.hasOwnProperty(l)) {
                        var obj = list[l];
                        str += render(obj, param);
                    }
                }
                $('#sum').html(json.totalCount);
                //加载分页器
                $.burster($(".page-box"), param.offset || 0, json.totalCount, 5, param.limit || 10);
            } else {
                str = '<div class="tb-wrong"><p class="wrong-msg">暂时没有您搜索的航线信息</p></div>';
                $('.page-box').html('');
                $('#sum').html(0);
            }
        } else {
            str = '<div class="tb-wrong"><p class="wrong-msg">您搜索的航班信息出错，<a href="javascript:void(0);" class="reload">请重试</a></p></div>';
            $('.page-box').html('');
            $('#sum').html(0);
        }
        $('.table-body').html(str);
        function render(d, dt) {
            var str = ''
                , p = d.airwayPrice.rate[0].policy;
            for (var t in d.transPort) {
                if (d.transPort.hasOwnProperty(t)) {
                    var dt = d.transPort[t];
                    str += dt['portCode'] + (t == d.transPort.length - 1 ? '' : ' -> ');
                }
            }
            return '<div class="tb-tr">' + (d.isHot ? '<i class="tuijian"></i>' : '') + '<div class="top"><div class="al-com fl-l tb-td"><div class="city fl-l">' +
                '<span class="dp-b ta-r">' + d['deptNode']['portCode'] + '</span><span class="dp-b ta-r">' + (d['deptNode']['portNameCn'] || '/') + '</span><span class="dp-b ta-r">' + d['deptNode']['portName'] + '</span></div>' +
                '<div class="air-info fl-l"><span class="dp-b">' + d['airCompanyCode'] + '</span><span class="dp-b border"></span><span class="dp-b">' + (d['airCompanyName'] || '/') + '</span></div>' +
                '<div class="city fl-l"> <span class="dp-b ta-l">' + d['destNode']['portCode'] + '</span> <span class="dp-b ta-l">' + (d['destNode']['portNameCn'] || '/') + '</span><span class="dp-b ta-l">' + d['destNode']['portName'] + '</span> </div></div>' +
                '<div class="al-info fl-l tb-td"> <p> ' + str + ' </p> ' +
                '<p class="weekday"><span class="' + (d['flightDay'].indexOf(1) >= 0 ? 'active' : '') + '">一</span>' +
                '<span class="' + (d['flightDay'].indexOf(2) >= 0 ? 'active' : '') + '">二</span><span class="' + (d['flightDay'].indexOf(3) >= 0 ? 'active' : '') + '">三</span>' +
                '<span class="' + (d['flightDay'].indexOf(4) >= 0 ? 'active' : '') + '">四</span><span class="' + (d['flightDay'].indexOf(5) >= 0 ? 'active' : '') + '">五</span>' +
                '<span class="' + (d['flightDay'].indexOf(6) >= 0 ? 'active' : '') + '">六</span><span class="' + (d['flightDay'].indexOf(7) >= 0 ? 'active' : '') + '">日</span></p> </div>' +
                '<div class="minWeight fl-l tb-td ta-r">' + (d.airwayPrice.rate[0].min ? d.airwayPrice.rate[0].min.toFixed(2) : '/') + '</div> ' +
                '<div class="weight fl-l tb-td ta-r">' + (p['45'] ? p['45'].toFixed(2) : '/') + '</div> ' +
                '<div class="weight fl-l tb-td ta-r">' + (p['100'] ? p['100'].toFixed(2) : '/') + '</div> ' +
                '<div class="weight fl-l tb-td ta-r">' + (p['300'] ? p['300'].toFixed(2) : '/') + '</div> ' +
                '<div class="weight fl-l tb-td ta-r">' + (p['500'] ? p['500'].toFixed(2) : '/') + '</div> ' +
                '<div class="weight fl-l tb-td ta-r">' + (p['1000'] ? p['1000'].toFixed(2) : '/') + '</div>' +
                '<div class="tdtime fl-l tb-td ta-r">' + new Date(d.validEnd).Format('yyyy-MM-dd') + '</div>' +
                '<div class="operate fl-l tb-td">' +
                ' <a href="/order/entrust?h=' + str + '&d=' + (d.flightDay.join(',')) + '&id=' + d.airwayId + '&s=' + d.deptPortCode + '&e=' + d.destPortCode + '&c=' + d.airCompanyCode + '" class="dp-b fl-l order-line blue-btn">订舱</a> ' +
                '</div> </div><div class="bottom"><span class="fl-r">备注：' + (d.remarks || '/') + '</span></div></div>'
        }
    };
    var renderLi = function (json, ele, sel) {
        var str = '';
        for (var j in json) {
            if (json.hasOwnProperty(j)) {
                var d = json[j]
                    , innerStr;
                if (sel == 1) {
                    innerStr = (d.AirportCnname ? d.AirportCnname : '') + (d.AirportCnname ? '-' : '') + d.ThreeCode;
                } else {
                    innerStr = (d.Name ? d.Name : '') + (d.Name ? '-' : '') + d.Code;
                }
                str += '<li>' + innerStr + '</li>'
            }
        }
        ele.html(str);
    };
    return {
        airline: airline
        , renderLi: renderLi
    }
}());
module.exports.Dom = Dom;
},{}],3:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/23.
 */
"use strict";
require('../general').run();

require('./listener').run();
},{"../general":8,"./listener":4}],4:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/22.
 */
"use strict";
require('../frame/burster');
var url = require('../frame/function').url;
var Listener = (function () {
    var Data = require('./data').Data
        , Dom = require('./dom').Dom;
    var listener = function () {
        $('#f-time').datetimepicker({
            format: 'yyyy-mm-dd',//日期的格式
            startDate: new Date(),//选择器的开始日期
            autoclose: true,//日期选择完成后是否关闭选择框
            bootcssVer: 3,//显示向左向右的箭头
            language: 'zh-CN',//语言
            minView: "month"//表示日期选择的最小范围，默认是hour
        });
        $(document).on('click', '#search_btn', function () {
            url.set('s', $('#start').val());
            url.set('e', $('#end').val());
            url.set('c', $('#company').val());
            url.set('d', $('#f-time').val());
            init();
        });
        $(document).on('click', '.pages', function () {
            url.set('offset', $(this).data('offset'));
            init();
        });
    };
    var airlines = function () {
        $(document).on('blur', '#start,#end', function () {
            var _this = $(this)
                , ul = _this.siblings('.ajax-part');
            var data = ul.children('.active').html() || ul.find('li:first-child').html() || '';
            $(this).val(data);
            $(this).data('val', data);
            ul.hide();
        });
        $(document).on('keyup', '#start,#end', function (e) {
            var _this = $(this)
                , ul = _this.siblings('.ajax-part');
            var index = ul.find('.active').index() || 0
                , len = ul.children().length;
            if (e.keyCode == 13) {//回车键
                var data = ul.children('.active').html() || ul.find('li:first-child').html() || '';
                $(this).val(data);
                $(this).data('val', data);
                ul.hide();
            } else if (e.keyCode == 38) {//上键
                index = index == 0 ? len - 1 : index - 1;
                ul.find('li').removeClass('active');
                ul.find('li').eq(index).addClass('active');
            } else if (e.keyCode == 40) {//下键
                index = index == len - 1 ? 0 : index + 1;
                ul.find('li').removeClass('active');
                ul.find('li').eq(index).addClass('active');
            } else if (e.keyCode == 8) {
                e.preventDefault();
                _this.val('');
                _this.trigger('keyup');
            } else {//正常输入
                Data.airport({key: _this.val()}, function (json) {
                    var str = '';
                    if (json && 'resBody' in json && json.resBody instanceof Array && json.resBody.length > 0) {
                        var body = json.resBody;
                        for (var b in body) {
                            if (body.hasOwnProperty(b)) {
                                var d = body[b];
                                str += '<li data-val="' + d.airportCode + '" class="' + (b == 0 ? 'active' : '') + '">' + d.displayName + '</li>'
                            }
                        }
                    }
                    ul.html(str);
                    ul.show();
                });
            }
        });
        $(document).on('mouseover', '.ajax-part li', function () {
            $(this).addClass('active');
            $(this).siblings().removeClass('active');
        });
    };
    var getCompany = function () {
        $(document).on('keyup', '#company', function (e) {
            var _this = $(this)
                , ul = _this.siblings('.ajax-part');
            var index = ul.find('.active').index() || 0
                , len = ul.children().length;
            if (e.keyCode == 13) {//回车键
                var data = ul.children('.active').html() || ul.find('li:first-child').html() || '';
                $(this).val(data);
                $(this).data('val', data);
                ul.hide();
            } else if (e.keyCode == 38) {//上键
                index = index == 0 ? len - 1 : index - 1;
                ul.find('li').removeClass('active');
                ul.find('li').eq(index).addClass('active');
            } else if (e.keyCode == 40) {//下键
                index = index == len - 1 ? 0 : index + 1;
                ul.find('li').removeClass('active');
                ul.find('li').eq(index).addClass('active');
            } else if (e.keyCode == 8) {
                e.preventDefault();
                _this.val('');
                _this.trigger('keyup');
            } else {//正常输入
                Data.getCode({key: _this.val()}, function (json) {
                    var str = '';
                    if (json && 'resBody' in json && json.resBody instanceof Array && json.resBody.length > 0) {
                        var body = json.resBody;
                        for (var b in body) {
                            if (body.hasOwnProperty(b)) {
                                var d = body[b];
                                str += '<li data-val="' + d.airlineCode + '" class="' + (b == 0 ? 'active' : '') + '">' + d.companyName + '(' + d.airlineCode + ')' + '</li>';
                            }
                        }
                    }
                    ul.html(str);
                    ul.show();
                });
            }
        });
        $(document).on('blur', '#company', function () {
            var ul = $(this).siblings('.ajax-part');
            var data = ul.children('.active').html() || ul.find('li:first-child').html() || '';
            $(this).val(data);
            $(this).data('val', data);
            ul.hide();
        });
    };
    var init = function () {
        var load = '<div class="loading-box"><div class="spinner"> <div class="rect1"></div> <div class="rect2"></div> <div class="rect3"></div><div class="rect4"></div><div class="rect5"></div> </div></div>';
        $('.table-body').html(load);
        var data = {
            "deptCode": url.get('s') ? url.get('s').split('(')[1].split(')')[0] : '',
            "destCode": url.get('e') ? url.get('e').split('(')[1].split(')')[0] : '',
            "flightDate": url.get('d') || '',
            "airCompanyCode": url.get('c') ? url.get('c').split('(')[1].split(')')[0] : '',
            "transCount": 0,
            "offset": url.get('offset') || 0,
            "limit": url.get('limit') || 20,
            "s": url.get('s'),
            "e": url.get('e')
        };
        Data.airline(data, function (json) {
            Dom.airline(json, data);
        });
        //if (data['deptCode'] && data['destCode']) {
        //  Data.airline(data, function (json) {
        //    Dom.airline(json, data);
        //  });
        //} else {
        //  var str = '<div class="tb-wrong"><p class="wrong-msg">请输入起始港和目的港！</p></div>';
        //  $('.table-body').html(str);
        //}
    };

    var run = function () {
        $('#start').val(url.get('s') || '');
        $('#end').val(url.get('e') || '');
        $('#f-time').val(url.get('d') || '');
        $('#company').val(url.get('c') || '');
        listener();
        init();
        airlines();
        getCompany();
    };
    return {
        run: run
    }
}());
module.exports = Listener;
},{"../frame/burster":5,"../frame/function":6,"./data":1,"./dom":2}],5:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/24.
 */
"use strict";

(function ($) {
    /**
     * 生成分页器
     * @param ele 需要添加分页器的元素
     * @param offset 偏移量，即从第data-offset开始
     * @param length 总记录条数
     * @param showPages 分页器显示的页数，超过则隐藏多余的页
     * @param rows 每页显示的记录条数
     */
    $.burster = function (ele, offset, length, showPages, rows) {
        offset = offset ? parseInt(offset) : 0;
        //将分页器装入table中
        if (length && length > offset) {
            var pageHtml = ""
                , ass = ""//清空需要装入的html
                , beforePages = Math.ceil(offset / rows)//需要显示的前页数/当前页
                , afterPages = Math.ceil((length - offset ) / rows)//需要显示的后页数
                , pages = Math.ceil(length / rows) //总页数
                , k = 0;
            //alert("总页数" + pages + " 前页数 " + beforePages + " 后页数 " + afterPages);
            //若页数小于showPages页，则全部显示
            if (pages >= 0 && pages <= showPages) {
                for (k = 0; k < pages; k++) {
                    if (k == beforePages) {
                        pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                    } else {
                        pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                    }
                }
            } else if (pages > showPages) {//总页数大于showPages页
                if (beforePages <= Math.ceil(showPages / 2) && afterPages > showPages + 1) {
                    for (k = 0; k < showPages; k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages <= Math.ceil(showPages / 2) && afterPages == showPages + 1) {
                    for (k = 0; k < showPages - 1; k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages <= Math.ceil(showPages / 2) && afterPages <= showPages) {
                    for (k = 0; k < showPages - 1; k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > Math.ceil(showPages / 2) && beforePages <= showPages && afterPages > showPages) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < beforePages + Math.ceil(showPages / 2); k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > showPages && afterPages > showPages) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < beforePages + Math.ceil(showPages / 2); k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > Math.ceil(showPages / 2) && beforePages <= pages && afterPages <= showPages && afterPages > Math.ceil(showPages / 2) + 1) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < beforePages + Math.ceil(showPages / 2); k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > pages && afterPages <= showPages && afterPages > Math.ceil(showPages / 2) + 1) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < beforePages + Math.ceil(showPages / 2); k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                    pageHtml += "<li><a class='pages' data-offset='" + ((pages - 1) * rows) + "'>..." + pages + "</a></li>";
                } else if (beforePages > Math.ceil(showPages / 2) && afterPages <= Math.ceil(showPages / 2) + 1) {
                    pageHtml += "<li><a class='pages' data-offset='0'>1...</a></li>";
                    for (k = beforePages - Math.ceil(showPages / 2) + 1; k < pages; k++) {
                        if (k == beforePages) {
                            pageHtml += "<li class='active' ><a>" + (k + 1) + "</a></li>";
                        } else {
                            pageHtml += "<li><a class='pages' data-offset='" + (k * rows) + "'>" + (k + 1) + "</a></li>";
                        }
                    }
                }
            }
            //判断"首页"和"末页"是否可点击
            var firstPage, lastPage;
            if (offset == 0) {//此时首页无法点击
                firstPage = '<li class="disabled"><a class="pages" data-offset="0">首页</a></li>';
                lastPage = '<li><a class="pages" data-offset="' + parseInt(parseInt((length % rows == 0 ? (length - 1) : length) / rows) * rows) + '" >末页</a></li>';
            } else if ((offset + rows) >= length) {//此时末页无法点击
                firstPage = '<li><a class="pages" data-offset="0">首页</a></li>';
                lastPage = '<li class="disabled"><a class="pages" data-offset="' + parseInt(parseInt((length % rows == 0 ? (length - 1) : length) / rows) * rows) + '">末页</a></li>';
            } else {
                firstPage = '<li><a class="pages" data-offset="0">首页</a></li>';
                lastPage = '<li><a class="pages" data-offset="' + parseInt(parseInt((length % rows == 0 ? (length - 1) : length) / rows) * rows) + '">末页</a></li>';
            }
            //判断"上一页"和"下一页"是否存在
            var upPage, downPage;
            if (offset == 0 || (offset < rows && (offset % rows != 0))) {
                upPage = "<li class='disabled'><a class='pages' func='previous' data-offset='" + parseInt(offset) + "' >上页</a></li>"
            } else {
                upPage = "<li><a class='pages' func='previous' data-offset='" + (parseInt(offset) - parseInt(rows)) + "' >上页</a></li>";
            }
            if (offset >= (length - rows)) {
                downPage = "<li class='disabled'><a class='pages' func='next' data-offset='" + parseInt(offset) + "'>下页</a></li>"
            } else {
                downPage = "<li><a class='pages' func='next' data-offset='" + parseInt(parseInt(offset) + parseInt(rows)) + "'>下页</a></li>"
            }
            if (pages != 1) {
                //分页部分
                ass += "<div id='pager' class='pager-info'>" +
                    "<h6 id='result' class='pager-record'>共有<span>" + length + "</span>条记录</h6>" +
                    "<ul class='pagination'>" + firstPage + upPage + pageHtml + downPage + lastPage + "</ul></div>";
                //table中注入拼装的记录
                ele.html(ass);
            } else {//无法分页清空分页器
                ele.html('');
            }
        }
    }
}(jQuery));
},{}],6:[function(require,module,exports){
/**
 * Created by jeremy on 2016/2/26.
 * @version 1.0.0 created 通用性功能方法
 */

'use strict';

var Fun = (function () {
    var _timeOut = 100000;//请求超时时间为10s
    /**
     * 封装ajax
     * @param option
     * {
     *      url:"请求的地址"
     *      ,method:"请求的方法"
     *      ,async:"是否并发"
     *      ,data:"发送的数据"
     *      ,success:"成功时回调"
     *      ,error:"失败/超时时回调"
     *      ,timeout:"超时时间"
     *      ,complete:"完成后的回调"
     * }
     */
    var ajax = function (option) {
        //ajax开始时应显示“加载信息框”
        Modal.showLoading();
        $.ajax({
            url: option.url
            , type: "type" in option && option.type || "GET"
            , timeout: option.timeout || _timeOut
            , data: "data" in option && option.data || {}
            , dataType: "json"
            , async: ("async" in option && option.async) ? true : false
            , success: function (json) {
                if ("status" in json && json.status > 0 && "data" in json) {
                    if ("success" in option) {
                        option.success(json.data);
                    } else {
                        Modal.setAlert("无success方法!");
                    }
                } else if ("error" in option && option.error instanceof Function) {
                    option.error(json);
                } else {
                    Modal.setAlert('操作失败!');
                }
            }, error: function (xhr) {//404或者超时
                if ("error" in option && option.error instanceof Function) {
                    //提示用户错误信息
                    Modal.showLoading(false);
                    Modal.setAlert("连接服务器失败，状态：" + (xhr.status || -1) + ",信息：" + (xhr.statusText || "-"));
                    option.error(xhr.status, xhr.statusText);//回调请求的状态和错误信息
                }
            }, complete: function (xhr, type) {
                //关闭“加载信息框”
                Modal.showLoading(false);
                if ("complete" in option && option.complete instanceof Function) {
                    option.complete(xhr, type);//回调请求的xhr信息和类型
                }
            }
        });
    };
    //全选和单选的绑定
    var setCheckboxListener = function (allCheck, radioChecks) {
        //筛选单选按钮组
        var radioValueEles = $(radioChecks);
        //点击全选时，同组按钮被同步
        $(document).delegate(allCheck, "click", function () {
            if (radioValueEles && radioValueEles.length > 0) {
                for (var _r = 0; _r < radioValueEles.length; _r++) {
                    radioValueEles[_r].checked = $(this).is(":checked");
                }
            }
        });
        //点击单选按钮时，
        $(document).delegate(radioChecks, "click", function () {
            $(allCheck)[0].checked = $(radioChecks + ":checked").length == $(radioChecks).length;
        });
    };
    var url = (function () {
        var get = function (name) {
            var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
            var r = window.location.search.substr(1).match(reg);
            if (r != null) return decodeURI(r[2]);
            return null;
        };
        /**
         * 根据参数列表长度进行判断，兼容IE9
         * @returns {string}
         */
        var set = function () {
            if (arguments.length === 1 && typeof arguments[0] === 'object') {//一个对象，使用key标记value
                var obj = arguments[0]
                    , search = location.search;
                for (var o in obj) {
                    if (obj.hasOwnProperty(o)) {
                        search = changeURLKeyValue(search, o, obj[o]);
                    }
                }
                if ('pushState' in history) {
                    history.pushState(null, document.title, search);
                } else if ('pushState' in History) {//ie9 不支持pushState方法,javascript.ejs中添加history.js完成html4对pushState的支持
                    History.pushState(null, null, search);//返回重新构造后search串
                }
            } else if (arguments.length === 2) {//key+value
                var key = arguments[0]
                    , value = arguments[1];
                if ('pushState' in history) {
                    history.pushState(null, document.title, changeURLKeyValue(location.toString(), key, value));
                } else if ('pushState' in History) {//ie9 不支持pushState方法,javascript.ejs中添加history.js完成html4对pushState的支持
                    History.pushState(null, null, changeURLKeyValue(location.search, key, value));//返回重新构造后search串
                }
            }
            function changeURLKeyValue(url, arg, arg_val) {
                var pattern = arg + '=([^&]*)';
                var replaceText = arg + '=' + arg_val;
                if (url.match(pattern)) {
                    var tmp = '/(' + arg + '=)([^&]*)/gi';
                    tmp = url.replace(eval(tmp), replaceText);
                    return tmp;
                } else {
                    if (url.match('[\?]')) {
                        return url + '&' + replaceText;
                    } else {
                        return url + '?' + replaceText;
                    }
                }
            }
        };
        return {
            get: get
            , set: set
        }
    }());
    var formatImage=function (path, size, ele) {
        if(path instanceof  Array && path.length>0){
            path = path[0];
        }
        var IMAGE_SIZE = {
            original: {
                path: "",
                size: ""
            },
            xlarge: {
                path: "_xlarge",
                size: "660*660"
            },
            large: {
                path: "_large",
                size: "420*420"
            },
            middle: {
                path: "_middle",
                size: "300*300"
            },
            small: {
                path: "_small",
                size: "240*240"
            },
            little: {
                path: "_little",
                size: "120*120"
            },
            micro: {
                path: "_micro",
                size: "60*60"
            }
        };
        size = IMAGE_SIZE[size || "middle"] || IMAGE_SIZE.middle;
        var pathTemp = /\.\w+?$/.exec(path);
        if (!pathTemp) {
            path += size.path;
        } else {
            path = (path.substr(0, pathTemp.index || path.length)) + size.path + pathTemp[0];
        }
        if (ele && ele.attr) {
            ele.attr("src", path);
        }
        return path;
    };
    return {
        ajax: ajax
        , getTimtout: _timeOut
        , setCheckboxListener: setCheckboxListener
        , url: url
        , formatImage: formatImage
    }
}());

exports.ajax = Fun.ajax;
exports.getTimeout = Fun.getTimtout;
exports.setCheckboxListener = Fun.setCheckboxListener;
exports.url = Fun.url;
exports.formatImage = Fun.formatImage;

},{}],7:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/22.
 */
"use strict";
var head = function () {
    //时间格式化
    Date.prototype.Format = function (fmt) { //author: Jeremyyy
        var o = {
            "M+": this.getMonth() + 1, //月份
            "d+": this.getDate(), //日
            "h+": this.getHours(), //小时
            "m+": this.getMinutes(), //分
            "s+": this.getSeconds(), //秒
            "q+": Math.floor((this.getMonth() + 3) / 3), //季度
            "S": this.getMilliseconds() //毫秒
        };
        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
        for (var k in o)
            if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
        return fmt;
    };
    //返回顶部
    $(document).on('click', '.back-top', function () {
        $("html,body").animate({scrollTop:0},100);
        return false;
    });
    $(document).on('mouseenter', '.vip-part', function () {
        $(this).children('.vip-select').stop(true);
        $(this).children('.vip-select').slideDown(100);
        return false;
    });
    $(document).on('mouseleave', '.vip-part', function () {
        $(this).children('.vip-select').stop(true);
        $(this).children('.vip-select').slideUp(100);
        return false;
    });
    $(document).on('mouseenter', '.wechat-logo', function () {
        $(this).children('.big-wechat').fadeIn(200);
        return false;
    });
    $(document).on('mouseleave', '.wechat-logo', function () {
        $(this).children('.big-wechat').fadeOut(200);
        return false;
    });
};
module.exports.head = head;
},{}],8:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/22.
 */
"use strict";
var listener = (function () {
    var run = function () {
        //头部点击事件
        require('./head').head();
    };
    return {
        run: run
    }
}());
module.exports = listener;
},{"./head":7}]},{},[3])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
