(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/24.
 */
"use strict";
var Data = (function () {
    var editor = function (data, callback) {
        var _data = {};
        $.ajax({
            url: '/api/login/editor'
            , type: 'post'
            , data: data
            , dataType: 'json'
            , timeout: 100000
            , success: function (json) {
                if (json && "resCode" in json) {
                    _data = json;
                } else {
                    _data = {};
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    var sendMail = function (data, callback) {
        var _data = {};
        $.ajax({
            url: '/api/login/sendMail'
            , type: 'post'
            , data: data
            , dataType: 'json'
            , timeout: 100000
            , success: function (json) {
                if (json && "resCode" in json) {
                    _data = json;
                } else {
                    _data = {};
                }
            }, complete: function () {
                if (callback && callback instanceof Function) {
                    callback(_data);
                }
            }
        });
    };
    return {
        editor: editor
        , sendMail: sendMail
    }
}());
module.exports.Data = Data;
},{}],2:[function(require,module,exports){
/**
 * Created by Auser on 2016/12/2.
 */
"use strict";
require('../general').run();

require('./listener').run();
},{"../general":6,"./listener":3}],3:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/22.
 */
"use strict";
var Data = require('./data').Data;
var Modal = require('../frame/modal');
var Listener = (function () {
    var listener = function () {
        $(document).on('blur', '#name,#tel,#QQ', function () {
            if ($(this).val() != $(this).data('value')) {
                $('.submit').prop('disabled', false);
            }
        });
        $(document).on('click', '.submit', function () {
            if (mail && tel) {
                var data = {
                    "memberName": $('#name').val(),
                    "memberTel": $('#tel').val(),
                    "memberQQ": $('#QQ').val(),
                    "memberMail": $('#mail').val()
                };
                Data.editor(data, function (json) {
                    Modal.setAlert(json.resMsg || (json.resCode == 0 ? '修改成功' : '修改失败，请重试'), null, function () {
                        location.reload();
                    });
                });
            }
        });
        $(document).on('click', '.operate-mail', function () {
            var reg = /^[A-Za-z0-9\u4e00-\u9fa5]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$/
                , value = $('#mail').val();
            if (reg.test(value)) {
                var data = {
                    email: value
                };
                Data.sendMail(data, function (json) {
                    Modal.setAlert(json && json.resCode == 0 ? '发送成功，请前往邮箱激活！' : (json.resMsg || '发送失败，请重试'));
                });
            } else {
                Modal.setAlert('邮箱格式错误！');
            }
        });
    };

    var run = function () {
        listener();
    };
    return {
        run: run
    }
}());
module.exports = Listener;
},{"../frame/modal":4,"./data":1}],4:[function(require,module,exports){
/**
 * Created by jeremy on 2016/2/24.
 * @version 1.0.0 created
 */

'use strict';

//构造信息框主体
var Modal = (function () {
    //构造原始类
    function M(m) {
        this.s = m.s;//是否显示
        this.id = m.id;
    }

    //构造标准show方法，用于继承
    M.prototype.show = function () {
        var ele = document.getElementById(this.id);
        if (ele) {
            if (this.s && !isShow()) {//显示当前隐藏
                ele.className = ele.className.replace("dp-n", "");
            } else if (!this.s && isShow()) {//隐藏当前显示
                ele.className += " dp-n";
            }
            //去除两边的空格
            ele.className = String(ele.className).trim();
        }
        function isShow() {//是否已显示，无class时显示
            return ele.className.split("dp-n").length == 1;
        }
    };

    //加载信息框
    var loading = (function () {
        //初始化生成加载信息框
        var init = function () {
            if (!document.getElementById("loading_modal_element")) {
                $('body').append('<div id="loading_modal_element" class="loading-modal-body dp-n"><div class="cover_modal_element"></div>' +
                    '<div class="loading-modal-image"></div>' +
                    '<div class="loading-modal-text">' +
                    '<h2>玩命加载中……</h2>' +
                    '</div></div>');
            }
            return false;
        };
        //显示、隐藏信息框
        var show = function (s) {
            s = typeof s == "undefined" ? true : s;//无参数显示信息框
            var m = new M({id: "loading_modal_element", s: s});
            m.show();
        };
        return {
            init: init
            , show: show
        }
    }());
    //弹出信息框
    var alert = (function () {
        var init = function () {
            if (!document.getElementById("alert_modal_element")) {
                $('body').append('<div id="alert_modal_element" class="alert-modal-element dp-n"><div class="cover_modal_element"></div>' +
                    '<div class="alert-modal-content">' +
                    '<div class="alert-modal-body"><span class="alert-modal-text"></span></div>' +
                    '<div class="alert-modal-footer"><button id="alert_modal_close" class="alert-modal-button">关闭</button></div>' +
                    '</div></div>');
            }
            return false;
        };
        var show = function (s) {
            s = typeof s == "undefined" ? true : s;
            var m = new M({id: "alert_modal_element", s: s});
            m.show();
        };
        /**
         * 设置弹出信息框
         * @param msg       显示的信息，支持html
         * @param sed       倒计时关闭时间，单位：second
         * @param callback  关闭触发回调函数
         */
        var set = function (msg, sed, callback) {
            var ele = document.getElementById("alert_modal_element");
            if (msg) {
                if (typeof msg === 'object') {//应对后端返回提示时使用Object封装
                    msg = JSON.stringify(msg);
                }
                if(ele){
                    ele.getElementsByClassName("alert-modal-text")[0].innerHTML = msg;
                }else{
                    init();
                    ele.getElementsByClassName("alert-modal-text")[0].innerHTML = msg;
                }
                show();
            }
            if (sed > 0) {
                setTimeout(function () {
                    show(false);
                }, 1000 * sed);
            }//无关闭时间或者关闭时间为0，不自动关闭
            //fixme 事件监听的ie兼容性
            //关闭按钮的事件侦听
            $("#alert_modal_close").on("click", function () {
                if (callback && callback instanceof Function) {
                    callback();
                }
                show(false);
                //阻止事件继续传递
                return false;
            });
        };
        return {
            init: init
            , show: show
            , set: set
        }
    }());
    //选择信息框
    var confirm = (function () {
        var init = function () {
            if (!document.getElementById("confirm_modal_element")) {
                $('body').append('<div id="confirm_modal_element" class="confirm-modal-element dp-n"><div class="cover_modal_element"></div>' +
                    '<div class="confirm-modal-content">' +
                    '<div id="confirm_modal_header" class="confirm-modal-header dp-n"></div>' +
                    '<div class="confirm-modal-body"><span id="confirm_modal_text" class="confirm-modal-text"></span></div>' +
                    '<div class="confirm-modal-footer">' +
                    '<div class="footer-button-success"><button class="confirm-modal-button  modal-success" data-confirm="success">确认</button></div>' +
                    '<div class="footer-button-false"><button class="confirm-modal-button" data-confirm="error">取消</button></div>' +
                    '</div></div></div>');
            }
            return false;
        };
        var show = function (s) {
            s = typeof s == "undefined" ? true : s;
            var m = new M({id: "confirm_modal_element", s: s});
            m.show();
        };
        /**
         * 设置选择信息框的内容
         * @param option    配置
         * {
         *      title:"头部显示的信息"
         *      ,text:"显示的提示信息"
         *      ,success:"点击成功后的回调"
         *      ,error:"点击失败后的回调"
         *      ,complete:"点击按钮后的整体回调"
         * }
         */
        var bar = 0;
        var set = function (option) {
            if (!option) {
                return false;
            }
            if ("title" in option && option.title.length > 0) {//有头部，则显示头部
                document.getElementById("confirm_modal_header").innerHTML = option.title;
            }
            if ("text" in option && option.text.length > 0) {//有内容，则显示整个选择信息框
                document.getElementById("confirm_modal_text").innerHTML = option.text;
            }
            //fixme 事件监听的ie兼容性
            //关闭按钮的事件侦听
            $("#confirm_modal_element").find(".confirm-modal-button").off("click").on("click", function () {
                //fixme .off("click")用于防止多次触发<--很玄学，我也不知道为什么，但是请不要修改。
                var atr = $(this).attr("data-confirm");//选择的按钮
                bar++;
                if (option && atr in option && option[atr] instanceof Function) {
                    option[atr]();
                }
                if (option && "complete" in option && option.complete instanceof Function) {
                    option.complete();//若有完成函数，则执行
                } else {//否则，关闭选择框
                    show(false);
                }
                //阻止事件继续传递
                //return false;
            });
        };
        return {
            init: init
            , show: show
            , set: set
        }
    }());
    //覆盖层
    var cover = (function () {
        var init = function () {
            if (!document.getElementById("cover_modal_element")) {
                $('body').append('<div id="cover_modal_element" class="cover-modal-element dp-n"></div>');
            }
            return false;
        };
        var hide = function () {
            document.getElementById("cover_modal_element").style.display = "none";
        };
        var show = function () {
            document.getElementById("cover_modal_element").style.display = "block";
        };
        return {
            init: init
            , show: show
            , hide: hide
        }
    }());
    return {
        initLoading: loading.init
        , showLoading: loading.show

        , initAlert: alert.init
        , showAlert: alert.show
        , setAlert: alert.set

        , initConfirm: confirm.init
        , setConfirm: confirm.set
        , showConfirm: confirm.show
        , initCover: cover.init
    }
}());

//页面加载完毕后生成四个自定义模态框
setTimeout(function () {
    //页面加载时生成一个覆盖层
    Modal.initCover();
    //页面加载时生成一个加载信息框
    Modal.initLoading();
    //页面加载时生成一个弹出信息框
    Modal.initAlert();
    //页面加载时生成一个选择信息框
    Modal.initConfirm();
}, 100);


//抛出上层调用
exports.showLoading = Modal.showLoading;
exports.setAlert = Modal.setAlert;
exports.showAlert = Modal.showAlert;
exports.setConfirm = Modal.setConfirm;
exports.showConfirm = Modal.showConfirm;
},{}],5:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/22.
 */
"use strict";
var head = function () {
    //时间格式化
    Date.prototype.Format = function (fmt) { //author: Jeremyyy
        var o = {
            "M+": this.getMonth() + 1, //月份
            "d+": this.getDate(), //日
            "h+": this.getHours(), //小时
            "m+": this.getMinutes(), //分
            "s+": this.getSeconds(), //秒
            "q+": Math.floor((this.getMonth() + 3) / 3), //季度
            "S": this.getMilliseconds() //毫秒
        };
        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
        for (var k in o)
            if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
        return fmt;
    };
    //返回顶部
    $(document).on('click', '.back-top', function () {
        $("html,body").animate({scrollTop:0},100);
        return false;
    });
    $(document).on('mouseenter', '.vip-part', function () {
        $(this).children('.vip-select').stop(true);
        $(this).children('.vip-select').slideDown(100);
        return false;
    });
    $(document).on('mouseleave', '.vip-part', function () {
        $(this).children('.vip-select').stop(true);
        $(this).children('.vip-select').slideUp(100);
        return false;
    });
    $(document).on('mouseenter', '.wechat-logo', function () {
        $(this).children('.big-wechat').fadeIn(200);
        return false;
    });
    $(document).on('mouseleave', '.wechat-logo', function () {
        $(this).children('.big-wechat').fadeOut(200);
        return false;
    });
};
module.exports.head = head;
},{}],6:[function(require,module,exports){
/**
 * Created by Jeremy on 2016/11/22.
 */
"use strict";
var listener = (function () {
    var run = function () {
        //头部点击事件
        require('./head').head();
    };
    return {
        run: run
    }
}());
module.exports = listener;
},{"./head":5}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6L252bS92Ni4yLjAvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsImRhdGEuanMiLCJpbmRleC5qcyIsImxpc3RlbmVyLmpzIiwiLi4vZnJhbWUvbW9kYWwuanMiLCIuLi9nZW5lcmFsL2hlYWQuanMiLCIuLi9nZW5lcmFsL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbkRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM3Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIvKipcclxuICogQ3JlYXRlZCBieSBKZXJlbXkgb24gMjAxNi8xMS8yNC5cclxuICovXHJcblwidXNlIHN0cmljdFwiO1xyXG52YXIgRGF0YSA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgZWRpdG9yID0gZnVuY3Rpb24gKGRhdGEsIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgdmFyIF9kYXRhID0ge307XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdXJsOiAnL2FwaS9sb2dpbi9lZGl0b3InXHJcbiAgICAgICAgICAgICwgdHlwZTogJ3Bvc3QnXHJcbiAgICAgICAgICAgICwgZGF0YTogZGF0YVxyXG4gICAgICAgICAgICAsIGRhdGFUeXBlOiAnanNvbidcclxuICAgICAgICAgICAgLCB0aW1lb3V0OiAxMDAwMDBcclxuICAgICAgICAgICAgLCBzdWNjZXNzOiBmdW5jdGlvbiAoanNvbikge1xyXG4gICAgICAgICAgICAgICAgaWYgKGpzb24gJiYgXCJyZXNDb2RlXCIgaW4ganNvbikge1xyXG4gICAgICAgICAgICAgICAgICAgIF9kYXRhID0ganNvbjtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgX2RhdGEgPSB7fTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSwgY29tcGxldGU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjayAmJiBjYWxsYmFjayBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soX2RhdGEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgdmFyIHNlbmRNYWlsID0gZnVuY3Rpb24gKGRhdGEsIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgdmFyIF9kYXRhID0ge307XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgdXJsOiAnL2FwaS9sb2dpbi9zZW5kTWFpbCdcclxuICAgICAgICAgICAgLCB0eXBlOiAncG9zdCdcclxuICAgICAgICAgICAgLCBkYXRhOiBkYXRhXHJcbiAgICAgICAgICAgICwgZGF0YVR5cGU6ICdqc29uJ1xyXG4gICAgICAgICAgICAsIHRpbWVvdXQ6IDEwMDAwMFxyXG4gICAgICAgICAgICAsIHN1Y2Nlc3M6IGZ1bmN0aW9uIChqc29uKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoanNvbiAmJiBcInJlc0NvZGVcIiBpbiBqc29uKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgX2RhdGEgPSBqc29uO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBfZGF0YSA9IHt9O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LCBjb21wbGV0ZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrICYmIGNhbGxiYWNrIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcclxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhfZGF0YSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGVkaXRvcjogZWRpdG9yXHJcbiAgICAgICAgLCBzZW5kTWFpbDogc2VuZE1haWxcclxuICAgIH1cclxufSgpKTtcclxubW9kdWxlLmV4cG9ydHMuRGF0YSA9IERhdGE7IiwiLyoqXHJcbiAqIENyZWF0ZWQgYnkgQXVzZXIgb24gMjAxNi8xMi8yLlxyXG4gKi9cclxuXCJ1c2Ugc3RyaWN0XCI7XHJcbnJlcXVpcmUoJy4uL2dlbmVyYWwnKS5ydW4oKTtcclxuXHJcbnJlcXVpcmUoJy4vbGlzdGVuZXInKS5ydW4oKTsiLCIvKipcclxuICogQ3JlYXRlZCBieSBKZXJlbXkgb24gMjAxNi8xMS8yMi5cclxuICovXHJcblwidXNlIHN0cmljdFwiO1xyXG52YXIgRGF0YSA9IHJlcXVpcmUoJy4vZGF0YScpLkRhdGE7XHJcbnZhciBNb2RhbCA9IHJlcXVpcmUoJy4uL2ZyYW1lL21vZGFsJyk7XHJcbnZhciBMaXN0ZW5lciA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgbGlzdGVuZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgJChkb2N1bWVudCkub24oJ2JsdXInLCAnI25hbWUsI3RlbCwjUVEnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmICgkKHRoaXMpLnZhbCgpICE9ICQodGhpcykuZGF0YSgndmFsdWUnKSkge1xyXG4gICAgICAgICAgICAgICAgJCgnLnN1Ym1pdCcpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5zdWJtaXQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChtYWlsICYmIHRlbCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGRhdGEgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJtZW1iZXJOYW1lXCI6ICQoJyNuYW1lJykudmFsKCksXHJcbiAgICAgICAgICAgICAgICAgICAgXCJtZW1iZXJUZWxcIjogJCgnI3RlbCcpLnZhbCgpLFxyXG4gICAgICAgICAgICAgICAgICAgIFwibWVtYmVyUVFcIjogJCgnI1FRJykudmFsKCksXHJcbiAgICAgICAgICAgICAgICAgICAgXCJtZW1iZXJNYWlsXCI6ICQoJyNtYWlsJykudmFsKClcclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICBEYXRhLmVkaXRvcihkYXRhLCBmdW5jdGlvbiAoanNvbikge1xyXG4gICAgICAgICAgICAgICAgICAgIE1vZGFsLnNldEFsZXJ0KGpzb24ucmVzTXNnIHx8IChqc29uLnJlc0NvZGUgPT0gMCA/ICfkv67mlLnmiJDlip8nIDogJ+S/ruaUueWksei0pe+8jOivt+mHjeivlScpLCBudWxsLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAnLm9wZXJhdGUtbWFpbCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIHJlZyA9IC9eW0EtWmEtejAtOVxcdTRlMDAtXFx1OWZhNV0rQFthLXpBLVowLTlfLV0rKFxcLlthLXpBLVowLTlfLV0rKSskL1xyXG4gICAgICAgICAgICAgICAgLCB2YWx1ZSA9ICQoJyNtYWlsJykudmFsKCk7XHJcbiAgICAgICAgICAgIGlmIChyZWcudGVzdCh2YWx1ZSkpIHtcclxuICAgICAgICAgICAgICAgIHZhciBkYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIGVtYWlsOiB2YWx1ZVxyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIERhdGEuc2VuZE1haWwoZGF0YSwgZnVuY3Rpb24gKGpzb24pIHtcclxuICAgICAgICAgICAgICAgICAgICBNb2RhbC5zZXRBbGVydChqc29uICYmIGpzb24ucmVzQ29kZSA9PSAwID8gJ+WPkemAgeaIkOWKn++8jOivt+WJjeW+gOmCrueusea/gOa0u++8gScgOiAoanNvbi5yZXNNc2cgfHwgJ+WPkemAgeWksei0pe+8jOivt+mHjeivlScpKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgTW9kYWwuc2V0QWxlcnQoJ+mCrueuseagvOW8j+mUmeivr++8gScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBydW4gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgbGlzdGVuZXIoKTtcclxuICAgIH07XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHJ1bjogcnVuXHJcbiAgICB9XHJcbn0oKSk7XHJcbm1vZHVsZS5leHBvcnRzID0gTGlzdGVuZXI7IiwiLyoqXHJcbiAqIENyZWF0ZWQgYnkgamVyZW15IG9uIDIwMTYvMi8yNC5cclxuICogQHZlcnNpb24gMS4wLjAgY3JlYXRlZFxyXG4gKi9cclxuXHJcbid1c2Ugc3RyaWN0JztcclxuXHJcbi8v5p6E6YCg5L+h5oGv5qGG5Li75L2TXHJcbnZhciBNb2RhbCA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICAvL+aehOmAoOWOn+Wni+exu1xyXG4gICAgZnVuY3Rpb24gTShtKSB7XHJcbiAgICAgICAgdGhpcy5zID0gbS5zOy8v5piv5ZCm5pi+56S6XHJcbiAgICAgICAgdGhpcy5pZCA9IG0uaWQ7XHJcbiAgICB9XHJcblxyXG4gICAgLy/mnoTpgKDmoIflh4ZzaG935pa55rOV77yM55So5LqO57un5om/XHJcbiAgICBNLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBlbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmlkKTtcclxuICAgICAgICBpZiAoZWxlKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnMgJiYgIWlzU2hvdygpKSB7Ly/mmL7npLrlvZPliY3pmpDol49cclxuICAgICAgICAgICAgICAgIGVsZS5jbGFzc05hbWUgPSBlbGUuY2xhc3NOYW1lLnJlcGxhY2UoXCJkcC1uXCIsIFwiXCIpO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKCF0aGlzLnMgJiYgaXNTaG93KCkpIHsvL+makOiXj+W9k+WJjeaYvuekulxyXG4gICAgICAgICAgICAgICAgZWxlLmNsYXNzTmFtZSArPSBcIiBkcC1uXCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy/ljrvpmaTkuKTovrnnmoTnqbrmoLxcclxuICAgICAgICAgICAgZWxlLmNsYXNzTmFtZSA9IFN0cmluZyhlbGUuY2xhc3NOYW1lKS50cmltKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZ1bmN0aW9uIGlzU2hvdygpIHsvL+aYr+WQpuW3suaYvuekuu+8jOaXoGNsYXNz5pe25pi+56S6XHJcbiAgICAgICAgICAgIHJldHVybiBlbGUuY2xhc3NOYW1lLnNwbGl0KFwiZHAtblwiKS5sZW5ndGggPT0gMTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIC8v5Yqg6L295L+h5oGv5qGGXHJcbiAgICB2YXIgbG9hZGluZyA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgLy/liJ3lp4vljJbnlJ/miJDliqDovb3kv6Hmga/moYZcclxuICAgICAgICB2YXIgaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCFkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvYWRpbmdfbW9kYWxfZWxlbWVudFwiKSkge1xyXG4gICAgICAgICAgICAgICAgJCgnYm9keScpLmFwcGVuZCgnPGRpdiBpZD1cImxvYWRpbmdfbW9kYWxfZWxlbWVudFwiIGNsYXNzPVwibG9hZGluZy1tb2RhbC1ib2R5IGRwLW5cIj48ZGl2IGNsYXNzPVwiY292ZXJfbW9kYWxfZWxlbWVudFwiPjwvZGl2PicgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwibG9hZGluZy1tb2RhbC1pbWFnZVwiPjwvZGl2PicgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwibG9hZGluZy1tb2RhbC10ZXh0XCI+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgJzxoMj7njqnlkb3liqDovb3kuK3igKbigKY8L2gyPicgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8L2Rpdj48L2Rpdj4nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfTtcclxuICAgICAgICAvL+aYvuekuuOAgemakOiXj+S/oeaBr+ahhlxyXG4gICAgICAgIHZhciBzaG93ID0gZnVuY3Rpb24gKHMpIHtcclxuICAgICAgICAgICAgcyA9IHR5cGVvZiBzID09IFwidW5kZWZpbmVkXCIgPyB0cnVlIDogczsvL+aXoOWPguaVsOaYvuekuuS/oeaBr+ahhlxyXG4gICAgICAgICAgICB2YXIgbSA9IG5ldyBNKHtpZDogXCJsb2FkaW5nX21vZGFsX2VsZW1lbnRcIiwgczogc30pO1xyXG4gICAgICAgICAgICBtLnNob3coKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGluaXQ6IGluaXRcclxuICAgICAgICAgICAgLCBzaG93OiBzaG93XHJcbiAgICAgICAgfVxyXG4gICAgfSgpKTtcclxuICAgIC8v5by55Ye65L+h5oGv5qGGXHJcbiAgICB2YXIgYWxlcnQgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBpbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYWxlcnRfbW9kYWxfZWxlbWVudFwiKSkge1xyXG4gICAgICAgICAgICAgICAgJCgnYm9keScpLmFwcGVuZCgnPGRpdiBpZD1cImFsZXJ0X21vZGFsX2VsZW1lbnRcIiBjbGFzcz1cImFsZXJ0LW1vZGFsLWVsZW1lbnQgZHAtblwiPjxkaXYgY2xhc3M9XCJjb3Zlcl9tb2RhbF9lbGVtZW50XCI+PC9kaXY+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJhbGVydC1tb2RhbC1jb250ZW50XCI+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJhbGVydC1tb2RhbC1ib2R5XCI+PHNwYW4gY2xhc3M9XCJhbGVydC1tb2RhbC10ZXh0XCI+PC9zcGFuPjwvZGl2PicgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiYWxlcnQtbW9kYWwtZm9vdGVyXCI+PGJ1dHRvbiBpZD1cImFsZXJ0X21vZGFsX2Nsb3NlXCIgY2xhc3M9XCJhbGVydC1tb2RhbC1idXR0b25cIj7lhbPpl608L2J1dHRvbj48L2Rpdj4nICtcclxuICAgICAgICAgICAgICAgICAgICAnPC9kaXY+PC9kaXY+Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdmFyIHNob3cgPSBmdW5jdGlvbiAocykge1xyXG4gICAgICAgICAgICBzID0gdHlwZW9mIHMgPT0gXCJ1bmRlZmluZWRcIiA/IHRydWUgOiBzO1xyXG4gICAgICAgICAgICB2YXIgbSA9IG5ldyBNKHtpZDogXCJhbGVydF9tb2RhbF9lbGVtZW50XCIsIHM6IHN9KTtcclxuICAgICAgICAgICAgbS5zaG93KCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiDorr7nva7lvLnlh7rkv6Hmga/moYZcclxuICAgICAgICAgKiBAcGFyYW0gbXNnICAgICAgIOaYvuekuueahOS/oeaBr++8jOaUr+aMgWh0bWxcclxuICAgICAgICAgKiBAcGFyYW0gc2VkICAgICAgIOWAkuiuoeaXtuWFs+mXreaXtumXtO+8jOWNleS9je+8mnNlY29uZFxyXG4gICAgICAgICAqIEBwYXJhbSBjYWxsYmFjayAg5YWz6Zet6Kem5Y+R5Zue6LCD5Ye95pWwXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdmFyIHNldCA9IGZ1bmN0aW9uIChtc2csIHNlZCwgY2FsbGJhY2spIHtcclxuICAgICAgICAgICAgdmFyIGVsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYWxlcnRfbW9kYWxfZWxlbWVudFwiKTtcclxuICAgICAgICAgICAgaWYgKG1zZykge1xyXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBtc2cgPT09ICdvYmplY3QnKSB7Ly/lupTlr7nlkI7nq6/ov5Tlm57mj5DnpLrml7bkvb/nlKhPYmplY3TlsIHoo4VcclxuICAgICAgICAgICAgICAgICAgICBtc2cgPSBKU09OLnN0cmluZ2lmeShtc2cpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYoZWxlKXtcclxuICAgICAgICAgICAgICAgICAgICBlbGUuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImFsZXJ0LW1vZGFsLXRleHRcIilbMF0uaW5uZXJIVE1MID0gbXNnO1xyXG4gICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5pdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGVsZS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiYWxlcnQtbW9kYWwtdGV4dFwiKVswXS5pbm5lckhUTUwgPSBtc2c7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBzaG93KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHNlZCA+IDApIHtcclxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNob3coZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgfSwgMTAwMCAqIHNlZCk7XHJcbiAgICAgICAgICAgIH0vL+aXoOWFs+mXreaXtumXtOaIluiAheWFs+mXreaXtumXtOS4ujDvvIzkuI3oh6rliqjlhbPpl61cclxuICAgICAgICAgICAgLy9maXhtZSDkuovku7bnm5HlkKznmoRpZeWFvOWuueaAp1xyXG4gICAgICAgICAgICAvL+WFs+mXreaMiemSrueahOS6i+S7tuS+puWQrFxyXG4gICAgICAgICAgICAkKFwiI2FsZXJ0X21vZGFsX2Nsb3NlXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrICYmIGNhbGxiYWNrIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcclxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgc2hvdyhmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICAvL+mYu+atouS6i+S7tue7p+e7reS8oOmAklxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGluaXQ6IGluaXRcclxuICAgICAgICAgICAgLCBzaG93OiBzaG93XHJcbiAgICAgICAgICAgICwgc2V0OiBzZXRcclxuICAgICAgICB9XHJcbiAgICB9KCkpO1xyXG4gICAgLy/pgInmi6nkv6Hmga/moYZcclxuICAgIHZhciBjb25maXJtID0gKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCFkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbmZpcm1fbW9kYWxfZWxlbWVudFwiKSkge1xyXG4gICAgICAgICAgICAgICAgJCgnYm9keScpLmFwcGVuZCgnPGRpdiBpZD1cImNvbmZpcm1fbW9kYWxfZWxlbWVudFwiIGNsYXNzPVwiY29uZmlybS1tb2RhbC1lbGVtZW50IGRwLW5cIj48ZGl2IGNsYXNzPVwiY292ZXJfbW9kYWxfZWxlbWVudFwiPjwvZGl2PicgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiY29uZmlybS1tb2RhbC1jb250ZW50XCI+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgaWQ9XCJjb25maXJtX21vZGFsX2hlYWRlclwiIGNsYXNzPVwiY29uZmlybS1tb2RhbC1oZWFkZXIgZHAtblwiPjwvZGl2PicgK1xyXG4gICAgICAgICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiY29uZmlybS1tb2RhbC1ib2R5XCI+PHNwYW4gaWQ9XCJjb25maXJtX21vZGFsX3RleHRcIiBjbGFzcz1cImNvbmZpcm0tbW9kYWwtdGV4dFwiPjwvc3Bhbj48L2Rpdj4nICtcclxuICAgICAgICAgICAgICAgICAgICAnPGRpdiBjbGFzcz1cImNvbmZpcm0tbW9kYWwtZm9vdGVyXCI+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJmb290ZXItYnV0dG9uLXN1Y2Nlc3NcIj48YnV0dG9uIGNsYXNzPVwiY29uZmlybS1tb2RhbC1idXR0b24gIG1vZGFsLXN1Y2Nlc3NcIiBkYXRhLWNvbmZpcm09XCJzdWNjZXNzXCI+56Gu6K6kPC9idXR0b24+PC9kaXY+JyArXHJcbiAgICAgICAgICAgICAgICAgICAgJzxkaXYgY2xhc3M9XCJmb290ZXItYnV0dG9uLWZhbHNlXCI+PGJ1dHRvbiBjbGFzcz1cImNvbmZpcm0tbW9kYWwtYnV0dG9uXCIgZGF0YS1jb25maXJtPVwiZXJyb3JcIj7lj5bmtog8L2J1dHRvbj48L2Rpdj4nICtcclxuICAgICAgICAgICAgICAgICAgICAnPC9kaXY+PC9kaXY+PC9kaXY+Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdmFyIHNob3cgPSBmdW5jdGlvbiAocykge1xyXG4gICAgICAgICAgICBzID0gdHlwZW9mIHMgPT0gXCJ1bmRlZmluZWRcIiA/IHRydWUgOiBzO1xyXG4gICAgICAgICAgICB2YXIgbSA9IG5ldyBNKHtpZDogXCJjb25maXJtX21vZGFsX2VsZW1lbnRcIiwgczogc30pO1xyXG4gICAgICAgICAgICBtLnNob3coKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIOiuvue9rumAieaLqeS/oeaBr+ahhueahOWGheWuuVxyXG4gICAgICAgICAqIEBwYXJhbSBvcHRpb24gICAg6YWN572uXHJcbiAgICAgICAgICoge1xyXG4gICAgICAgICAqICAgICAgdGl0bGU6XCLlpLTpg6jmmL7npLrnmoTkv6Hmga9cIlxyXG4gICAgICAgICAqICAgICAgLHRleHQ6XCLmmL7npLrnmoTmj5DnpLrkv6Hmga9cIlxyXG4gICAgICAgICAqICAgICAgLHN1Y2Nlc3M6XCLngrnlh7vmiJDlip/lkI7nmoTlm57osINcIlxyXG4gICAgICAgICAqICAgICAgLGVycm9yOlwi54K55Ye75aSx6LSl5ZCO55qE5Zue6LCDXCJcclxuICAgICAgICAgKiAgICAgICxjb21wbGV0ZTpcIueCueWHu+aMiemSruWQjueahOaVtOS9k+Wbnuiwg1wiXHJcbiAgICAgICAgICogfVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHZhciBiYXIgPSAwO1xyXG4gICAgICAgIHZhciBzZXQgPSBmdW5jdGlvbiAob3B0aW9uKSB7XHJcbiAgICAgICAgICAgIGlmICghb3B0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKFwidGl0bGVcIiBpbiBvcHRpb24gJiYgb3B0aW9uLnRpdGxlLmxlbmd0aCA+IDApIHsvL+acieWktOmDqO+8jOWImeaYvuekuuWktOmDqFxyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb25maXJtX21vZGFsX2hlYWRlclwiKS5pbm5lckhUTUwgPSBvcHRpb24udGl0bGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKFwidGV4dFwiIGluIG9wdGlvbiAmJiBvcHRpb24udGV4dC5sZW5ndGggPiAwKSB7Ly/mnInlhoXlrrnvvIzliJnmmL7npLrmlbTkuKrpgInmi6nkv6Hmga/moYZcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29uZmlybV9tb2RhbF90ZXh0XCIpLmlubmVySFRNTCA9IG9wdGlvbi50ZXh0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vZml4bWUg5LqL5Lu255uR5ZCs55qEaWXlhbzlrrnmgKdcclxuICAgICAgICAgICAgLy/lhbPpl63mjInpkq7nmoTkuovku7bkvqblkKxcclxuICAgICAgICAgICAgJChcIiNjb25maXJtX21vZGFsX2VsZW1lbnRcIikuZmluZChcIi5jb25maXJtLW1vZGFsLWJ1dHRvblwiKS5vZmYoXCJjbGlja1wiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIC8vZml4bWUgLm9mZihcImNsaWNrXCIp55So5LqO6Ziy5q2i5aSa5qyh6Kem5Y+RPC0t5b6I546E5a2m77yM5oiR5Lmf5LiN55+l6YGT5Li65LuA5LmI77yM5L2G5piv6K+35LiN6KaB5L+u5pS544CCXHJcbiAgICAgICAgICAgICAgICB2YXIgYXRyID0gJCh0aGlzKS5hdHRyKFwiZGF0YS1jb25maXJtXCIpOy8v6YCJ5oup55qE5oyJ6ZKuXHJcbiAgICAgICAgICAgICAgICBiYXIrKztcclxuICAgICAgICAgICAgICAgIGlmIChvcHRpb24gJiYgYXRyIGluIG9wdGlvbiAmJiBvcHRpb25bYXRyXSBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9uW2F0cl0oKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChvcHRpb24gJiYgXCJjb21wbGV0ZVwiIGluIG9wdGlvbiAmJiBvcHRpb24uY29tcGxldGUgaW5zdGFuY2VvZiBGdW5jdGlvbikge1xyXG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbi5jb21wbGV0ZSgpOy8v6Iul5pyJ5a6M5oiQ5Ye95pWw77yM5YiZ5omn6KGMXHJcbiAgICAgICAgICAgICAgICB9IGVsc2Ugey8v5ZCm5YiZ77yM5YWz6Zet6YCJ5oup5qGGXHJcbiAgICAgICAgICAgICAgICAgICAgc2hvdyhmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvL+mYu+atouS6i+S7tue7p+e7reS8oOmAklxyXG4gICAgICAgICAgICAgICAgLy9yZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgaW5pdDogaW5pdFxyXG4gICAgICAgICAgICAsIHNob3c6IHNob3dcclxuICAgICAgICAgICAgLCBzZXQ6IHNldFxyXG4gICAgICAgIH1cclxuICAgIH0oKSk7XHJcbiAgICAvL+imhuebluWxglxyXG4gICAgdmFyIGNvdmVyID0gKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKCFkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvdmVyX21vZGFsX2VsZW1lbnRcIikpIHtcclxuICAgICAgICAgICAgICAgICQoJ2JvZHknKS5hcHBlbmQoJzxkaXYgaWQ9XCJjb3Zlcl9tb2RhbF9lbGVtZW50XCIgY2xhc3M9XCJjb3Zlci1tb2RhbC1lbGVtZW50IGRwLW5cIj48L2Rpdj4nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfTtcclxuICAgICAgICB2YXIgaGlkZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb3Zlcl9tb2RhbF9lbGVtZW50XCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciBzaG93ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvdmVyX21vZGFsX2VsZW1lbnRcIikuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGluaXQ6IGluaXRcclxuICAgICAgICAgICAgLCBzaG93OiBzaG93XHJcbiAgICAgICAgICAgICwgaGlkZTogaGlkZVxyXG4gICAgICAgIH1cclxuICAgIH0oKSk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGluaXRMb2FkaW5nOiBsb2FkaW5nLmluaXRcclxuICAgICAgICAsIHNob3dMb2FkaW5nOiBsb2FkaW5nLnNob3dcclxuXHJcbiAgICAgICAgLCBpbml0QWxlcnQ6IGFsZXJ0LmluaXRcclxuICAgICAgICAsIHNob3dBbGVydDogYWxlcnQuc2hvd1xyXG4gICAgICAgICwgc2V0QWxlcnQ6IGFsZXJ0LnNldFxyXG5cclxuICAgICAgICAsIGluaXRDb25maXJtOiBjb25maXJtLmluaXRcclxuICAgICAgICAsIHNldENvbmZpcm06IGNvbmZpcm0uc2V0XHJcbiAgICAgICAgLCBzaG93Q29uZmlybTogY29uZmlybS5zaG93XHJcbiAgICAgICAgLCBpbml0Q292ZXI6IGNvdmVyLmluaXRcclxuICAgIH1cclxufSgpKTtcclxuXHJcbi8v6aG16Z2i5Yqg6L295a6M5q+V5ZCO55Sf5oiQ5Zub5Liq6Ieq5a6a5LmJ5qih5oCB5qGGXHJcbnNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgLy/pobXpnaLliqDovb3ml7bnlJ/miJDkuIDkuKropobnm5blsYJcclxuICAgIE1vZGFsLmluaXRDb3ZlcigpO1xyXG4gICAgLy/pobXpnaLliqDovb3ml7bnlJ/miJDkuIDkuKrliqDovb3kv6Hmga/moYZcclxuICAgIE1vZGFsLmluaXRMb2FkaW5nKCk7XHJcbiAgICAvL+mhtemdouWKoOi9veaXtueUn+aIkOS4gOS4quW8ueWHuuS/oeaBr+ahhlxyXG4gICAgTW9kYWwuaW5pdEFsZXJ0KCk7XHJcbiAgICAvL+mhtemdouWKoOi9veaXtueUn+aIkOS4gOS4qumAieaLqeS/oeaBr+ahhlxyXG4gICAgTW9kYWwuaW5pdENvbmZpcm0oKTtcclxufSwgMTAwKTtcclxuXHJcblxyXG4vL+aKm+WHuuS4iuWxguiwg+eUqFxyXG5leHBvcnRzLnNob3dMb2FkaW5nID0gTW9kYWwuc2hvd0xvYWRpbmc7XHJcbmV4cG9ydHMuc2V0QWxlcnQgPSBNb2RhbC5zZXRBbGVydDtcclxuZXhwb3J0cy5zaG93QWxlcnQgPSBNb2RhbC5zaG93QWxlcnQ7XHJcbmV4cG9ydHMuc2V0Q29uZmlybSA9IE1vZGFsLnNldENvbmZpcm07XHJcbmV4cG9ydHMuc2hvd0NvbmZpcm0gPSBNb2RhbC5zaG93Q29uZmlybTsiLCIvKipcclxuICogQ3JlYXRlZCBieSBKZXJlbXkgb24gMjAxNi8xMS8yMi5cclxuICovXHJcblwidXNlIHN0cmljdFwiO1xyXG52YXIgaGVhZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIC8v5pe26Ze05qC85byP5YyWXHJcbiAgICBEYXRlLnByb3RvdHlwZS5Gb3JtYXQgPSBmdW5jdGlvbiAoZm10KSB7IC8vYXV0aG9yOiBKZXJlbXl5eVxyXG4gICAgICAgIHZhciBvID0ge1xyXG4gICAgICAgICAgICBcIk0rXCI6IHRoaXMuZ2V0TW9udGgoKSArIDEsIC8v5pyI5Lu9XHJcbiAgICAgICAgICAgIFwiZCtcIjogdGhpcy5nZXREYXRlKCksIC8v5pelXHJcbiAgICAgICAgICAgIFwiaCtcIjogdGhpcy5nZXRIb3VycygpLCAvL+Wwj+aXtlxyXG4gICAgICAgICAgICBcIm0rXCI6IHRoaXMuZ2V0TWludXRlcygpLCAvL+WIhlxyXG4gICAgICAgICAgICBcInMrXCI6IHRoaXMuZ2V0U2Vjb25kcygpLCAvL+enklxyXG4gICAgICAgICAgICBcInErXCI6IE1hdGguZmxvb3IoKHRoaXMuZ2V0TW9udGgoKSArIDMpIC8gMyksIC8v5a2j5bqmXHJcbiAgICAgICAgICAgIFwiU1wiOiB0aGlzLmdldE1pbGxpc2Vjb25kcygpIC8v5q+r56eSXHJcbiAgICAgICAgfTtcclxuICAgICAgICBpZiAoLyh5KykvLnRlc3QoZm10KSkgZm10ID0gZm10LnJlcGxhY2UoUmVnRXhwLiQxLCAodGhpcy5nZXRGdWxsWWVhcigpICsgXCJcIikuc3Vic3RyKDQgLSBSZWdFeHAuJDEubGVuZ3RoKSk7XHJcbiAgICAgICAgZm9yICh2YXIgayBpbiBvKVxyXG4gICAgICAgICAgICBpZiAobmV3IFJlZ0V4cChcIihcIiArIGsgKyBcIilcIikudGVzdChmbXQpKSBmbXQgPSBmbXQucmVwbGFjZShSZWdFeHAuJDEsIChSZWdFeHAuJDEubGVuZ3RoID09IDEpID8gKG9ba10pIDogKChcIjAwXCIgKyBvW2tdKS5zdWJzdHIoKFwiXCIgKyBvW2tdKS5sZW5ndGgpKSk7XHJcbiAgICAgICAgcmV0dXJuIGZtdDtcclxuICAgIH07XHJcbiAgICAvL+i/lOWbnumhtumDqFxyXG4gICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgJy5iYWNrLXRvcCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKFwiaHRtbCxib2R5XCIpLmFuaW1hdGUoe3Njcm9sbFRvcDowfSwxMDApO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH0pO1xyXG4gICAgJChkb2N1bWVudCkub24oJ21vdXNlZW50ZXInLCAnLnZpcC1wYXJ0JywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQodGhpcykuY2hpbGRyZW4oJy52aXAtc2VsZWN0Jykuc3RvcCh0cnVlKTtcclxuICAgICAgICAkKHRoaXMpLmNoaWxkcmVuKCcudmlwLXNlbGVjdCcpLnNsaWRlRG93bigxMDApO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH0pO1xyXG4gICAgJChkb2N1bWVudCkub24oJ21vdXNlbGVhdmUnLCAnLnZpcC1wYXJ0JywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQodGhpcykuY2hpbGRyZW4oJy52aXAtc2VsZWN0Jykuc3RvcCh0cnVlKTtcclxuICAgICAgICAkKHRoaXMpLmNoaWxkcmVuKCcudmlwLXNlbGVjdCcpLnNsaWRlVXAoMTAwKTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9KTtcclxuICAgICQoZG9jdW1lbnQpLm9uKCdtb3VzZWVudGVyJywgJy53ZWNoYXQtbG9nbycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKHRoaXMpLmNoaWxkcmVuKCcuYmlnLXdlY2hhdCcpLmZhZGVJbigyMDApO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH0pO1xyXG4gICAgJChkb2N1bWVudCkub24oJ21vdXNlbGVhdmUnLCAnLndlY2hhdC1sb2dvJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQodGhpcykuY2hpbGRyZW4oJy5iaWctd2VjaGF0JykuZmFkZU91dCgyMDApO1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH0pO1xyXG59O1xyXG5tb2R1bGUuZXhwb3J0cy5oZWFkID0gaGVhZDsiLCIvKipcclxuICogQ3JlYXRlZCBieSBKZXJlbXkgb24gMjAxNi8xMS8yMi5cclxuICovXHJcblwidXNlIHN0cmljdFwiO1xyXG52YXIgbGlzdGVuZXIgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHJ1biA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvL+WktOmDqOeCueWHu+S6i+S7tlxyXG4gICAgICAgIHJlcXVpcmUoJy4vaGVhZCcpLmhlYWQoKTtcclxuICAgIH07XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHJ1bjogcnVuXHJcbiAgICB9XHJcbn0oKSk7XHJcbm1vZHVsZS5leHBvcnRzID0gbGlzdGVuZXI7Il19
